BEGIN:VCALENDAR
VERSION:2.0
PRODID:-//Michael Angstadt//biweekly 0.6.8//EN
BEGIN:VEVENT
UID:ffd89494-83ae-443c-8662-3c6cb1718469
DTSTAMP:20250517T105800Z
SUMMARY:Registration
DESCRIPTION:\n\n
LOCATION:Room #173
DTSTART:20250521T060000Z
DTEND:20250521T070000Z
END:VEVENT
BEGIN:VEVENT
UID:d11f0b40-a4f5-4671-bd36-975471b7c1a3
DTSTAMP:20250517T105800Z
SUMMARY:Spring Boot With Coroutines and Virtual Threads. Part 1.
DESCRIPTION:Urs Peter\nIf you want to get the most out of Spring Boot in te
 rms of low latency\, high-throughput\, and resource efficiency\, there is 
 no way around virtual threads and/or reactive libraries like Webflux.\n\nH
 owever\, both won’t get you far: Virtual threads are limited to non-blocki
 ng operations\, and WebFlux — even though offering all reactive qualities\
 , like non-blocking\, parallelism\, streaming\, etc. — will give you a lot 
 of headaches due to its complexity\, bad readability\, and maintainability
 .\n\nIn this workshop\, you’ll learn how Spring Boot’s coroutine support w
 ill wipe out all the downsides of the ‘raw’ WebFlux approach or the limita
 tions of virtual threads and provide you with the best of both worlds: non
 -blocking reactive characteristics without the complexity.\n\nDuring the w
 orkshop\, we will explore Kotlin’s reactive building blocks\, such as coro
 utines and flows\, and apply them in Spring Boot. By building a non-blocki
 ng API in Spring Boot from scratch\, you’ll learn how to:\n\n- Use corouti
 nes on top of WebFlux and/or virtual threads.\n- Perform non-blocking remo
 te API calls using WebClient or RestClient.\n- Access a database in a reac
 tive way\, either via the R2DBC or JDBC\, including framework support.\n- 
 Apply structured concurrency in your business logic\, like requesting data 
 in parallel.\n- Create an advanced streaming API based on ServerSentEvents 
 that combines coroutines and flow.\n\nIn addition\, we will explore virtua
 l threads in-depth and see how they can leverage the power of coroutines e
 ven more.\n\nAt the end of the workshop\, you’ll know all the ins and outs 
 of programming in Spring Boot with coroutines while having experienced the 
 tremendous benefits they offer over raw virtual threads or WebFlux.\n\nWit
 h the knowledge you gain\, you can enlighten your Spring Boot project with 
 coroutines the very next day.\n
LOCATION:Room #173
DTSTART:20250521T070000Z
DTEND:20250521T083000Z
END:VEVENT
BEGIN:VEVENT
UID:9b2808e6-d01a-4e4e-805b-ad7b47853372
DTSTAMP:20250517T105800Z
SUMMARY:Extracting\, Transforming\, and Analyzing Data With Kotlin. Part 1.
DESCRIPTION:Jolan Rensen\, Aleksei Zinovev\nThis workshop is designed for a
 ll Kotlin developers who need simple and convenient tools within their nat
 ive ecosystem to assist them when working with data\, understanding its na
 ture\, performing any necessary processing\, and presenting the results to 
 their team or stakeholders as a report or chart.\n\nIn this workshop\, you
 ’ll learn how to build data processing pipelines in your applications. We’
 ll explore the best practices for extracting data from various sources\, a
 ggregating and transforming it\, and then exporting it as a collection of 
 data classes\, displaying it as tables\, or visualizing it with insightful 
 charts.\n\nBy the end of the workshop\, you’ll be able to:\n\n- Load\, tra
 nsform\, and export data using the Kotlin DataFrame library.\n- Visualize 
 data with the Kandy library to effectively convey insights.\n- Access and 
 manipulate data from various sources: REST APIs\, SQL databases\, CSV file
 s\, and other tabular data.\n- Handle both flat and hierarchical JSON-like 
 data structures.\n- Boost your code written with the help of the kotlin.co
 llections or SQL-like frameworks.\n- Solve practical problems by applying 
 your skills to three real-world scenarios.\n- Present the insights in Kotl
 in notebooks and easily share them on GitHub Gists.\n
LOCATION:Room #174
DTSTART:20250521T070000Z
DTEND:20250521T083000Z
END:VEVENT
BEGIN:VEVENT
UID:ca89e613-b185-46cf-8129-8aca62547351
DTSTAMP:20250517T105800Z
SUMMARY:Hands-On Kotlin Web Development With Ktor. Part 1.
DESCRIPTION:Anton Arhipov\, Simon Vergauwen\, Leonid Stashevskii\nKtor is a 
 lightweight and flexible toolkit for building HTTP applications. This work
 shop will use the Kotlin programming language\, the Ktor framework\, the E
 xposed database access library\, OpenAI\, and several other Kotlin and Jav
 a libraries to build a feature-complete AI powered web application.\n\nWe’
 ll start with the basics by exploring the Ktor framework and learning how 
 to build a simple web application using essential functions. We’ll cover t
 opics like handling HTTP requests\, working with WebSockets\, database acc
 ess\, authentication\, logging\, and deployment.\n\nFor testing\, we will 
 look into the APIs that Ktor provides. Finally\, we will explore the API f
 or writing plugins and use it to create a simple plugin for our Ktor appli
 cation.\n\nBy the end of the workshop\, you’ll be able to:\n  - Structure 
 Ktor projects\n  - Test Ktor applications\n  - Create and deploy RESTful s
 ervices using Ktor\n  - Integrate Ktor with external libraries\n\nThis wil
 l be a fast-paced workshop where attendees will spend most of their time c
 oding. You will walk away armed with a cookbook of various Ktor recipes fo
 r building feature-complete AI powered web application.\n
LOCATION:Room #176
DTSTART:20250521T070000Z
DTEND:20250521T083000Z
END:VEVENT
BEGIN:VEVENT
UID:17809c0e-19dd-4f04-ac56-bee9477f1408
DTSTAMP:20250517T105800Z
SUMMARY:Building Shared UI With Compose Multiplatform. Part 1.
DESCRIPTION:Márton Braun\, Victor Kropp\nTake the next step in your cross-p
 latform Kotlin journey with Compose Multiplatform! This workshop is for de
 velopers already familiar with the basics of Kotlin Multiplatform and Jetp
 ack Compose who are looking to extend their skills by building a shared UI
 .\n\nWe’ll discuss how Compose Multiplatform works and show you how your e
 xisting Compose skills are reusable across platforms. You’ll have hands-on 
 time with a wide range of Compose features\, focusing on how they work acr
 oss different platforms. During the workshop’s exercises\, you’ll work wit
 h Compose code\, explore APIs\, build new features\, improve accessibility
 \, test the UI\, and more.\n\nCovering the latest available APIs and best 
 practices\, we’ll equip you with everything you need to start using Compos
 e Multiplatform in your own apps! Here is how the workshop will be structu
 red:\n\nIntroduction\n- How Compose Multiplatform works\n- Running Compose 
 on Android\, iOS\, Desktop\, and Web\n- Writing basic Compose code for mul
 tiplatform use\n\nCompose building blocks\n- Resources (localization\, fon
 ts\, and more)\n- Image loading\n- ViewModels and architecture components\
 n- Navigation\n- Animations\n- Dependency injection\n- Theming\n\nMasterin
 g Compose Multiplatform\n- Interop with native components\n- Dialogs\n- In
 sets\n- Accessibility\n- Testing\n\nThis workshop includes exercises for p
 articipants to complete on their own laptops. Using a MacBook is highly re
 commended for participation in all exercises\, as iOS applications can onl
 y be built on macOS. Detailed setup instructions will be provided prior to 
 the workshop.\n
LOCATION:Room #178
DTSTART:20250521T070000Z
DTEND:20250521T083000Z
END:VEVENT
BEGIN:VEVENT
UID:683a4e75-7487-4ce5-b1ee-ab0dc9ed9f2d
DTSTAMP:20250517T105800Z
SUMMARY:Deep Dive Into Kotlin Multiplatform: Advanced Techniques for Seamle
 ss Code Sharing. Part 1.
DESCRIPTION:Pamela Hill\, Konstantin Tskhovrebov\nThis is an intermediate/a
 dvanced workshop for experienced Kotlin Multiplatform developers. It is ai
 med at developers who have built projects with Kotlin Multiplatform and Je
 tpack Compose / Compose Multiplatform and now want to progress onto more a
 dvanced topics.\n\nThe workshop aims to equip attendees with the skills to 
 write high-quality code and apps using Kotlin Multiplatform. The workshop 
 will address the following topics:\n\nA Gentle(r) Introduction\n- Introduc
 ing an example project\n- Explaining project structure and architecture\n- 
 Highlighting a few key libraries used in the project\n\nNative Integration
 s\n- Splash screens\n- Notifications\n- Working with files\n\nAdvanced Kot
 lin Multiplatform for iOS Targets\n- Debugging Kotlin/Swift\n- Understandi
 ng and improving Kotlin/Swift interoperability\n\nCode Quality\n- Code cov
 erage with Kover (JVM-only)\n- Modularization\n\nApp Quality\n- Fixing mem
 ory leaks\n- Performance testing\n- App size optimization\n\nManaging Work
 flows\n- Basics of building CI/CD pipelines for your apps\n\nYou will need 
 to bring a MacBook along with you to participate in all the practical exer
 cises. Installation instructions will be provided one week prior to the wo
 rkshop.\n
LOCATION:Room #179
DTSTART:20250521T070000Z
DTEND:20250521T083000Z
END:VEVENT
BEGIN:VEVENT
UID:5df1d2aa-ed59-4266-a585-e9e0a89dcc7d
DTSTAMP:20250517T105800Z
SUMMARY:Refactoring to Functional Kotlin. Part 1.
DESCRIPTION:Duncan McGregor\, Nat Pryce\nKotlin supports both Object-orient
 ed and functional styles of programming\, but what should we do when we ha
 ve OO code that should be functional? Refactor\, of course!\n\nIn this wor
 kshop\, Nat and Duncan\, the authors of Java to Kotlin: A Refactoring Guid
 ebook\, take a web application and introduce techniques to gradually and s
 afely migrate the code to the functional style better suited to today’s ar
 chitectures. Topics include:\n\n- Thinking in a functional way – Data\, Ca
 lculations\, and Actions\n- Migrating from mutable objects to immutable da
 ta classes\n- Converting business logic to a functional domain model\n- Wh
 ere does the state live? Functional core / imperative shell\n- Choosing be
 tween functions and methods\n- Functional error handling\n- Expand and Con
 tract refactoring for safety over many commits\n
LOCATION:Room #180
DTSTART:20250521T070000Z
DTEND:20250521T083000Z
END:VEVENT
BEGIN:VEVENT
UID:d570b2bb-ee5b-4959-84af-b4d5cc8762cf
DTSTAMP:20250517T105800Z
SUMMARY:Asynchronous Programming With Kotlin Coroutines. Part 1.
DESCRIPTION:Sebastian Aigner\, Vsevolod Tolstopyatov\, Alejandro Serrano Me
 na\nIn this workshop\, you’ll learn everything you need to know about how 
 to be productive with coroutines in Kotlin. We’ll start with the basics of 
 asynchronous programming\, its differences from blocking code\, and the co
 ncepts of suspending functions and coroutines. We’ll explore coroutine con
 texts\, concurrent decomposition of work via deferreds\, and structured co
 ncurrency with coroutine scopes.\n\nThe second part of the workshop will b
 e devoted to Kotlin Flows. We’ll study how Kotlin Flows are designed on a 
 basic level\, learn the difference between hot and cold flows\, discuss th
 eir typical usage patterns\, and explore how they incorporate ideas from r
 eactive streams. To deepen our understanding\, we’ll also take a peek at s
 ome of the implementations behind flows and collectors. Throughout\, we’ll 
 see how they help you in writing safe and reliable concurrent systems\, an
 d how modern applications can use them to work with asynchronous streams o
 f data\, manage system states\, and broadcast events.\n\nThrough this work
 shop\, you’ll enhance your coroutines-related vocabulary\, understand how 
 to spot and avoid common problems\, and be able to effectively and confide
 ntly use coroutines and flows in your own projects.\n
LOCATION:Room #181
DTSTART:20250521T070000Z
DTEND:20250521T083000Z
END:VEVENT
BEGIN:VEVENT
UID:880b7dfc-9fee-4aa0-b257-4f77112133f6
DTSTAMP:20250517T105800Z
SUMMARY:Coffee Break
DESCRIPTION:\n\n
LOCATION:Room #173
DTSTART:20250521T083000Z
DTEND:20250521T090000Z
END:VEVENT
BEGIN:VEVENT
UID:8d368d3d-2e5b-4134-9905-465b58008b42
DTSTAMP:20250517T105800Z
SUMMARY:Spring Boot With Coroutines and Virtual Threads. Part 2.
DESCRIPTION:Urs Peter\nIf you want to get the most out of Spring Boot in te
 rms of low latency\, high-throughput\, and resource efficiency\, there is 
 no way around virtual threads and/or reactive libraries like Webflux.\n\nH
 owever\, both won’t get you far: Virtual threads are limited to non-blocki
 ng operations\, and WebFlux — even though offering all reactive qualities\
 , like non-blocking\, parallelism\, streaming\, etc. — will give you a lot 
 of headaches due to its complexity\, bad readability\, and maintainability
 .\n\nIn this workshop\, you’ll learn how Spring Boot’s coroutine support w
 ill wipe out all the downsides of the ‘raw’ WebFlux approach or the limita
 tions of virtual threads and provide you with the best of both worlds: non
 -blocking reactive characteristics without the complexity.\n\nDuring the w
 orkshop\, we will explore Kotlin’s reactive building blocks\, such as coro
 utines and flows\, and apply them in Spring Boot. By building a non-blocki
 ng API in Spring Boot from scratch\, you’ll learn how to:\n\n- Use corouti
 nes on top of WebFlux and/or virtual threads.\n- Perform non-blocking remo
 te API calls using WebClient or RestClient.\n- Access a database in a reac
 tive way\, either via the R2DBC or JDBC\, including framework support.\n- 
 Apply structured concurrency in your business logic\, like requesting data 
 in parallel.\n- Create an advanced streaming API based on ServerSentEvents 
 that combines coroutines and flow.\n\nIn addition\, we will explore virtua
 l threads in-depth and see how they can leverage the power of coroutines e
 ven more.\n\nAt the end of the workshop\, you’ll know all the ins and outs 
 of programming in Spring Boot with coroutines while having experienced the 
 tremendous benefits they offer over raw virtual threads or WebFlux.\n\nWit
 h the knowledge you gain\, you can enlighten your Spring Boot project with 
 coroutines the very next day.\n
LOCATION:Room #173
DTSTART:20250521T090000Z
DTEND:20250521T103000Z
END:VEVENT
BEGIN:VEVENT
UID:24d03106-893a-4ec7-ab65-fc6071bd1949
DTSTAMP:20250517T105800Z
SUMMARY:Extracting\, Transforming\, and Analyzing Data With Kotlin. Part 2.
DESCRIPTION:Jolan Rensen\, Aleksei Zinovev\nThis workshop is designed for a
 ll Kotlin developers who need simple and convenient tools within their nat
 ive ecosystem to assist them when working with data\, understanding its na
 ture\, performing any necessary processing\, and presenting the results to 
 their team or stakeholders as a report or chart.\n\nIn this workshop\, you
 ’ll learn how to build data processing pipelines in your applications. We’
 ll explore the best practices for extracting data from various sources\, a
 ggregating and transforming it\, and then exporting it as a collection of 
 data classes\, displaying it as tables\, or visualizing it with insightful 
 charts.\n\nBy the end of the workshop\, you’ll be able to:\n\n- Load\, tra
 nsform\, and export data using the Kotlin DataFrame library.\n- Visualize 
 data with the Kandy library to effectively convey insights.\n- Access and 
 manipulate data from various sources: REST APIs\, SQL databases\, CSV file
 s\, and other tabular data.\n- Handle both flat and hierarchical JSON-like 
 data structures.\n- Boost your code written with the help of the kotlin.co
 llections or SQL-like frameworks.\n- Solve practical problems by applying 
 your skills to three real-world scenarios.\n- Present the insights in Kotl
 in notebooks and easily share them on GitHub Gists.\n
LOCATION:Room #174
DTSTART:20250521T090000Z
DTEND:20250521T103000Z
END:VEVENT
BEGIN:VEVENT
UID:824fdbf7-c51c-48ff-a06e-5e60f4379a1f
DTSTAMP:20250517T105800Z
SUMMARY:Hands-On Kotlin Web Development With Ktor. Part 2.
DESCRIPTION:Anton Arhipov\, Simon Vergauwen\, Leonid Stashevskii\nKtor is a 
 lightweight and flexible toolkit for building HTTP applications. This work
 shop will use the Kotlin programming language\, the Ktor framework\, the E
 xposed database access library\, OpenAI\, and several other Kotlin and Jav
 a libraries to build a feature-complete AI powered web application.\n\nWe’
 ll start with the basics by exploring the Ktor framework and learning how 
 to build a simple web application using essential functions. We’ll cover t
 opics like handling HTTP requests\, working with WebSockets\, database acc
 ess\, authentication\, logging\, and deployment.\n\nFor testing\, we will 
 look into the APIs that Ktor provides. Finally\, we will explore the API f
 or writing plugins and use it to create a simple plugin for our Ktor appli
 cation.\n\nBy the end of the workshop\, you’ll be able to:\n  - Structure 
 Ktor projects\n  - Test Ktor applications\n  - Create and deploy RESTful s
 ervices using Ktor\n  - Integrate Ktor with external libraries\n\nThis wil
 l be a fast-paced workshop where attendees will spend most of their time c
 oding. You will walk away armed with a cookbook of various Ktor recipes fo
 r building feature-complete AI powered web application.\n
LOCATION:Room #176
DTSTART:20250521T090000Z
DTEND:20250521T103000Z
END:VEVENT
BEGIN:VEVENT
UID:c19e23e7-9e56-4834-9713-f6be4d91b233
DTSTAMP:20250517T105800Z
SUMMARY:Building Shared UI With Compose Multiplatform. Part 2.
DESCRIPTION:Márton Braun\, Victor Kropp\nTake the next step in your cross-p
 latform Kotlin journey with Compose Multiplatform! This workshop is for de
 velopers already familiar with the basics of Kotlin Multiplatform and Jetp
 ack Compose who are looking to extend their skills by building a shared UI
 .\n\nWe’ll discuss how Compose Multiplatform works and show you how your e
 xisting Compose skills are reusable across platforms. You’ll have hands-on 
 time with a wide range of Compose features\, focusing on how they work acr
 oss different platforms. During the workshop’s exercises\, you’ll work wit
 h Compose code\, explore APIs\, build new features\, improve accessibility
 \, test the UI\, and more.\n\nCovering the latest available APIs and best 
 practices\, we’ll equip you with everything you need to start using Compos
 e Multiplatform in your own apps! Here is how the workshop will be structu
 red:\n\nIntroduction\n- How Compose Multiplatform works\n- Running Compose 
 on Android\, iOS\, Desktop\, and Web\n- Writing basic Compose code for mul
 tiplatform use\n\nCompose building blocks\n- Resources (localization\, fon
 ts\, and more)\n- Image loading\n- ViewModels and architecture components\
 n- Navigation\n- Animations\n- Dependency injection\n- Theming\n\nMasterin
 g Compose Multiplatform\n- Interop with native components\n- Dialogs\n- In
 sets\n- Accessibility\n- Testing\n\nThis workshop includes exercises for p
 articipants to complete on their own laptops. Using a MacBook is highly re
 commended for participation in all exercises\, as iOS applications can onl
 y be built on macOS. Detailed setup instructions will be provided prior to 
 the workshop.\n
LOCATION:Room #178
DTSTART:20250521T090000Z
DTEND:20250521T103000Z
END:VEVENT
BEGIN:VEVENT
UID:2ce00ade-ef4b-41fd-8022-334c395c7a56
DTSTAMP:20250517T105800Z
SUMMARY:Deep Dive Into Kotlin Multiplatform: Advanced Techniques for Seamle
 ss Code Sharing. Part 2.
DESCRIPTION:Pamela Hill\, Konstantin Tskhovrebov\nThis is an intermediate/a
 dvanced workshop for experienced Kotlin Multiplatform developers. It is ai
 med at developers who have built projects with Kotlin Multiplatform and Je
 tpack Compose / Compose Multiplatform and now want to progress onto more a
 dvanced topics.\n\nThe workshop aims to equip attendees with the skills to 
 write high-quality code and apps using Kotlin Multiplatform. The workshop 
 will address the following topics:\n\nA Gentle(r) Introduction\n- Introduc
 ing an example project\n- Explaining project structure and architecture\n- 
 Highlighting a few key libraries used in the project\n\nNative Integration
 s\n- Splash screens\n- Notifications\n- Working with files\n\nAdvanced Kot
 lin Multiplatform for iOS Targets\n- Debugging Kotlin/Swift\n- Understandi
 ng and improving Kotlin/Swift interoperability\n\nCode Quality\n- Code cov
 erage with Kover (JVM-only)\n- Modularization\n\nApp Quality\n- Fixing mem
 ory leaks\n- Performance testing\n- App size optimization\n\nManaging Work
 flows\n- Basics of building CI/CD pipelines for your apps\n\nYou will need 
 to bring a MacBook along with you to participate in all the practical exer
 cises. Installation instructions will be provided one week prior to the wo
 rkshop.\n
LOCATION:Room #179
DTSTART:20250521T090000Z
DTEND:20250521T103000Z
END:VEVENT
BEGIN:VEVENT
UID:7cf6017b-746f-40d1-a1f5-bd5457f1bd8d
DTSTAMP:20250517T105800Z
SUMMARY:Refactoring to Functional Kotlin. Part 2.
DESCRIPTION:Duncan McGregor\, Nat Pryce\nKotlin supports both Object-orient
 ed and functional styles of programming\, but what should we do when we ha
 ve OO code that should be functional? Refactor\, of course!\n\nIn this wor
 kshop\, Nat and Duncan\, the authors of Java to Kotlin: A Refactoring Guid
 ebook\, take a web application and introduce techniques to gradually and s
 afely migrate the code to the functional style better suited to today’s ar
 chitectures. Topics include:\n\n- Thinking in a functional way – Data\, Ca
 lculations\, and Actions\n- Migrating from mutable objects to immutable da
 ta classes\n- Converting business logic to a functional domain model\n- Wh
 ere does the state live? Functional core / imperative shell\n- Choosing be
 tween functions and methods\n- Functional error handling\n- Expand and Con
 tract refactoring for safety over many commits\n
LOCATION:Room #180
DTSTART:20250521T090000Z
DTEND:20250521T103000Z
END:VEVENT
BEGIN:VEVENT
UID:5b66a291-63d7-4e9b-863d-162b78da9b96
DTSTAMP:20250517T105800Z
SUMMARY:Asynchronous Programming With Kotlin Coroutines. Part 2.
DESCRIPTION:Sebastian Aigner\, Vsevolod Tolstopyatov\, Alejandro Serrano Me
 na\nIn this workshop\, you’ll learn everything you need to know about how 
 to be productive with coroutines in Kotlin. We’ll start with the basics of 
 asynchronous programming\, its differences from blocking code\, and the co
 ncepts of suspending functions and coroutines. We’ll explore coroutine con
 texts\, concurrent decomposition of work via deferreds\, and structured co
 ncurrency with coroutine scopes.\n\nThe second part of the workshop will b
 e devoted to Kotlin Flows. We’ll study how Kotlin Flows are designed on a 
 basic level\, learn the difference between hot and cold flows\, discuss th
 eir typical usage patterns\, and explore how they incorporate ideas from r
 eactive streams. To deepen our understanding\, we’ll also take a peek at s
 ome of the implementations behind flows and collectors. Throughout\, we’ll 
 see how they help you in writing safe and reliable concurrent systems\, an
 d how modern applications can use them to work with asynchronous streams o
 f data\, manage system states\, and broadcast events.\n\nThrough this work
 shop\, you’ll enhance your coroutines-related vocabulary\, understand how 
 to spot and avoid common problems\, and be able to effectively and confide
 ntly use coroutines and flows in your own projects.\n
LOCATION:Room #181
DTSTART:20250521T090000Z
DTEND:20250521T103000Z
END:VEVENT
BEGIN:VEVENT
UID:2d0604b4-cbb7-4018-a8a4-2744c0410627
DTSTAMP:20250517T105800Z
SUMMARY:Lunch
DESCRIPTION:\n\n
LOCATION:Room #173
DTSTART:20250521T103000Z
DTEND:20250521T113000Z
END:VEVENT
BEGIN:VEVENT
UID:48c6ab44-8468-4fad-81ef-7bea8128916b
DTSTAMP:20250517T105800Z
SUMMARY:Spring Boot With Coroutines and Virtual Threads. Part 3.
DESCRIPTION:Urs Peter\nIf you want to get the most out of Spring Boot in te
 rms of low latency\, high-throughput\, and resource efficiency\, there is 
 no way around virtual threads and/or reactive libraries like Webflux.\n\nH
 owever\, both won’t get you far: Virtual threads are limited to non-blocki
 ng operations\, and WebFlux — even though offering all reactive qualities\
 , like non-blocking\, parallelism\, streaming\, etc. — will give you a lot 
 of headaches due to its complexity\, bad readability\, and maintainability
 .\n\nIn this workshop\, you’ll learn how Spring Boot’s coroutine support w
 ill wipe out all the downsides of the ‘raw’ WebFlux approach or the limita
 tions of virtual threads and provide you with the best of both worlds: non
 -blocking reactive characteristics without the complexity.\n\nDuring the w
 orkshop\, we will explore Kotlin’s reactive building blocks\, such as coro
 utines and flows\, and apply them in Spring Boot. By building a non-blocki
 ng API in Spring Boot from scratch\, you’ll learn how to:\n\n- Use corouti
 nes on top of WebFlux and/or virtual threads.\n- Perform non-blocking remo
 te API calls using WebClient or RestClient.\n- Access a database in a reac
 tive way\, either via the R2DBC or JDBC\, including framework support.\n- 
 Apply structured concurrency in your business logic\, like requesting data 
 in parallel.\n- Create an advanced streaming API based on ServerSentEvents 
 that combines coroutines and flow.\n\nIn addition\, we will explore virtua
 l threads in-depth and see how they can leverage the power of coroutines e
 ven more.\n\nAt the end of the workshop\, you’ll know all the ins and outs 
 of programming in Spring Boot with coroutines while having experienced the 
 tremendous benefits they offer over raw virtual threads or WebFlux.\n\nWit
 h the knowledge you gain\, you can enlighten your Spring Boot project with 
 coroutines the very next day.\n
LOCATION:Room #173
DTSTART:20250521T113000Z
DTEND:20250521T130000Z
END:VEVENT
BEGIN:VEVENT
UID:59b7008c-d5cd-4621-8436-a085c6f542f5
DTSTAMP:20250517T105800Z
SUMMARY:Extracting\, Transforming\, and Analyzing Data With Kotlin. Part 3.
DESCRIPTION:Jolan Rensen\, Aleksei Zinovev\nThis workshop is designed for a
 ll Kotlin developers who need simple and convenient tools within their nat
 ive ecosystem to assist them when working with data\, understanding its na
 ture\, performing any necessary processing\, and presenting the results to 
 their team or stakeholders as a report or chart.\n\nIn this workshop\, you
 ’ll learn how to build data processing pipelines in your applications. We’
 ll explore the best practices for extracting data from various sources\, a
 ggregating and transforming it\, and then exporting it as a collection of 
 data classes\, displaying it as tables\, or visualizing it with insightful 
 charts.\n\nBy the end of the workshop\, you’ll be able to:\n\n- Load\, tra
 nsform\, and export data using the Kotlin DataFrame library.\n- Visualize 
 data with the Kandy library to effectively convey insights.\n- Access and 
 manipulate data from various sources: REST APIs\, SQL databases\, CSV file
 s\, and other tabular data.\n- Handle both flat and hierarchical JSON-like 
 data structures.\n- Boost your code written with the help of the kotlin.co
 llections or SQL-like frameworks.\n- Solve practical problems by applying 
 your skills to three real-world scenarios.\n- Present the insights in Kotl
 in notebooks and easily share them on GitHub Gists.\n
LOCATION:Room #174
DTSTART:20250521T113000Z
DTEND:20250521T130000Z
END:VEVENT
BEGIN:VEVENT
UID:053e5f17-6bab-4ab3-86a1-243a107d0930
DTSTAMP:20250517T105800Z
SUMMARY:Hands-On Kotlin Web Development With Ktor. Part 3.
DESCRIPTION:Anton Arhipov\, Simon Vergauwen\, Leonid Stashevskii\nKtor is a 
 lightweight and flexible toolkit for building HTTP applications. This work
 shop will use the Kotlin programming language\, the Ktor framework\, the E
 xposed database access library\, OpenAI\, and several other Kotlin and Jav
 a libraries to build a feature-complete AI powered web application.\n\nWe’
 ll start with the basics by exploring the Ktor framework and learning how 
 to build a simple web application using essential functions. We’ll cover t
 opics like handling HTTP requests\, working with WebSockets\, database acc
 ess\, authentication\, logging\, and deployment.\n\nFor testing\, we will 
 look into the APIs that Ktor provides. Finally\, we will explore the API f
 or writing plugins and use it to create a simple plugin for our Ktor appli
 cation.\n\nBy the end of the workshop\, you’ll be able to:\n  - Structure 
 Ktor projects\n  - Test Ktor applications\n  - Create and deploy RESTful s
 ervices using Ktor\n  - Integrate Ktor with external libraries\n\nThis wil
 l be a fast-paced workshop where attendees will spend most of their time c
 oding. You will walk away armed with a cookbook of various Ktor recipes fo
 r building feature-complete AI powered web application.\n
LOCATION:Room #176
DTSTART:20250521T113000Z
DTEND:20250521T130000Z
END:VEVENT
BEGIN:VEVENT
UID:136caf0c-3d26-4dbd-afaf-ea2b55761e2a
DTSTAMP:20250517T105800Z
SUMMARY:Building Shared UI With Compose Multiplatform. Part 3.
DESCRIPTION:Márton Braun\, Victor Kropp\nTake the next step in your cross-p
 latform Kotlin journey with Compose Multiplatform! This workshop is for de
 velopers already familiar with the basics of Kotlin Multiplatform and Jetp
 ack Compose who are looking to extend their skills by building a shared UI
 .\n\nWe’ll discuss how Compose Multiplatform works and show you how your e
 xisting Compose skills are reusable across platforms. You’ll have hands-on 
 time with a wide range of Compose features\, focusing on how they work acr
 oss different platforms. During the workshop’s exercises\, you’ll work wit
 h Compose code\, explore APIs\, build new features\, improve accessibility
 \, test the UI\, and more.\n\nCovering the latest available APIs and best 
 practices\, we’ll equip you with everything you need to start using Compos
 e Multiplatform in your own apps! Here is how the workshop will be structu
 red:\n\nIntroduction\n- How Compose Multiplatform works\n- Running Compose 
 on Android\, iOS\, Desktop\, and Web\n- Writing basic Compose code for mul
 tiplatform use\n\nCompose building blocks\n- Resources (localization\, fon
 ts\, and more)\n- Image loading\n- ViewModels and architecture components\
 n- Navigation\n- Animations\n- Dependency injection\n- Theming\n\nMasterin
 g Compose Multiplatform\n- Interop with native components\n- Dialogs\n- In
 sets\n- Accessibility\n- Testing\n\nThis workshop includes exercises for p
 articipants to complete on their own laptops. Using a MacBook is highly re
 commended for participation in all exercises\, as iOS applications can onl
 y be built on macOS. Detailed setup instructions will be provided prior to 
 the workshop.\n
LOCATION:Room #178
DTSTART:20250521T113000Z
DTEND:20250521T130000Z
END:VEVENT
BEGIN:VEVENT
UID:4490849c-35c4-4d4b-9359-4b41cd0eb29e
DTSTAMP:20250517T105800Z
SUMMARY:Deep Dive Into Kotlin Multiplatform: Advanced Techniques for Seamle
 ss Code Sharing. Part 3.
DESCRIPTION:Pamela Hill\, Konstantin Tskhovrebov\nThis is an intermediate/a
 dvanced workshop for experienced Kotlin Multiplatform developers. It is ai
 med at developers who have built projects with Kotlin Multiplatform and Je
 tpack Compose / Compose Multiplatform and now want to progress onto more a
 dvanced topics.\n\nThe workshop aims to equip attendees with the skills to 
 write high-quality code and apps using Kotlin Multiplatform. The workshop 
 will address the following topics:\n\nA Gentle(r) Introduction\n- Introduc
 ing an example project\n- Explaining project structure and architecture\n- 
 Highlighting a few key libraries used in the project\n\nNative Integration
 s\n- Splash screens\n- Notifications\n- Working with files\n\nAdvanced Kot
 lin Multiplatform for iOS Targets\n- Debugging Kotlin/Swift\n- Understandi
 ng and improving Kotlin/Swift interoperability\n\nCode Quality\n- Code cov
 erage with Kover (JVM-only)\n- Modularization\n\nApp Quality\n- Fixing mem
 ory leaks\n- Performance testing\n- App size optimization\n\nManaging Work
 flows\n- Basics of building CI/CD pipelines for your apps\n\nYou will need 
 to bring a MacBook along with you to participate in all the practical exer
 cises. Installation instructions will be provided one week prior to the wo
 rkshop.\n
LOCATION:Room #179
DTSTART:20250521T113000Z
DTEND:20250521T130000Z
END:VEVENT
BEGIN:VEVENT
UID:7b8c211c-8e34-4cb6-b040-9a3a0ed8f1d4
DTSTAMP:20250517T105800Z
SUMMARY:Refactoring to Functional Kotlin. Part 3.
DESCRIPTION:Duncan McGregor\, Nat Pryce\nKotlin supports both Object-orient
 ed and functional styles of programming\, but what should we do when we ha
 ve OO code that should be functional? Refactor\, of course!\n\nIn this wor
 kshop\, Nat and Duncan\, the authors of Java to Kotlin: A Refactoring Guid
 ebook\, take a web application and introduce techniques to gradually and s
 afely migrate the code to the functional style better suited to today’s ar
 chitectures. Topics include:\n\n- Thinking in a functional way – Data\, Ca
 lculations\, and Actions\n- Migrating from mutable objects to immutable da
 ta classes\n- Converting business logic to a functional domain model\n- Wh
 ere does the state live? Functional core / imperative shell\n- Choosing be
 tween functions and methods\n- Functional error handling\n- Expand and Con
 tract refactoring for safety over many commits\n
LOCATION:Room #180
DTSTART:20250521T113000Z
DTEND:20250521T130000Z
END:VEVENT
BEGIN:VEVENT
UID:3f3365a2-b92c-4f3a-ab79-456c6a10554c
DTSTAMP:20250517T105800Z
SUMMARY:Asynchronous Programming With Kotlin Coroutines. Part 3.
DESCRIPTION:Sebastian Aigner\, Vsevolod Tolstopyatov\, Alejandro Serrano Me
 na\nIn this workshop\, you’ll learn everything you need to know about how 
 to be productive with coroutines in Kotlin. We’ll start with the basics of 
 asynchronous programming\, its differences from blocking code\, and the co
 ncepts of suspending functions and coroutines. We’ll explore coroutine con
 texts\, concurrent decomposition of work via deferreds\, and structured co
 ncurrency with coroutine scopes.\n\nThe second part of the workshop will b
 e devoted to Kotlin Flows. We’ll study how Kotlin Flows are designed on a 
 basic level\, learn the difference between hot and cold flows\, discuss th
 eir typical usage patterns\, and explore how they incorporate ideas from r
 eactive streams. To deepen our understanding\, we’ll also take a peek at s
 ome of the implementations behind flows and collectors. Throughout\, we’ll 
 see how they help you in writing safe and reliable concurrent systems\, an
 d how modern applications can use them to work with asynchronous streams o
 f data\, manage system states\, and broadcast events.\n\nThrough this work
 shop\, you’ll enhance your coroutines-related vocabulary\, understand how 
 to spot and avoid common problems\, and be able to effectively and confide
 ntly use coroutines and flows in your own projects.\n
LOCATION:Room #181
DTSTART:20250521T113000Z
DTEND:20250521T130000Z
END:VEVENT
BEGIN:VEVENT
UID:f2d7910b-066b-48d7-bbae-31fb26421c1f
DTSTAMP:20250517T105800Z
SUMMARY:Coffee Break
DESCRIPTION:\n\n
LOCATION:Room #173
DTSTART:20250521T130000Z
DTEND:20250521T133000Z
END:VEVENT
BEGIN:VEVENT
UID:a94d652a-8c90-4666-9ee6-9ac282a39b29
DTSTAMP:20250517T105800Z
SUMMARY:Spring Boot With Coroutines and Virtual Threads. Part 4.
DESCRIPTION:Urs Peter\nIf you want to get the most out of Spring Boot in te
 rms of low latency\, high-throughput\, and resource efficiency\, there is 
 no way around virtual threads and/or reactive libraries like Webflux.\n\nH
 owever\, both won’t get you far: Virtual threads are limited to non-blocki
 ng operations\, and WebFlux — even though offering all reactive qualities\
 , like non-blocking\, parallelism\, streaming\, etc. — will give you a lot 
 of headaches due to its complexity\, bad readability\, and maintainability
 .\n\nIn this workshop\, you’ll learn how Spring Boot’s coroutine support w
 ill wipe out all the downsides of the ‘raw’ WebFlux approach or the limita
 tions of virtual threads and provide you with the best of both worlds: non
 -blocking reactive characteristics without the complexity.\n\nDuring the w
 orkshop\, we will explore Kotlin’s reactive building blocks\, such as coro
 utines and flows\, and apply them in Spring Boot. By building a non-blocki
 ng API in Spring Boot from scratch\, you’ll learn how to:\n\n- Use corouti
 nes on top of WebFlux and/or virtual threads.\n- Perform non-blocking remo
 te API calls using WebClient or RestClient.\n- Access a database in a reac
 tive way\, either via the R2DBC or JDBC\, including framework support.\n- 
 Apply structured concurrency in your business logic\, like requesting data 
 in parallel.\n- Create an advanced streaming API based on ServerSentEvents 
 that combines coroutines and flow.\n\nIn addition\, we will explore virtua
 l threads in-depth and see how they can leverage the power of coroutines e
 ven more.\n\nAt the end of the workshop\, you’ll know all the ins and outs 
 of programming in Spring Boot with coroutines while having experienced the 
 tremendous benefits they offer over raw virtual threads or WebFlux.\n\nWit
 h the knowledge you gain\, you can enlighten your Spring Boot project with 
 coroutines the very next day.\n
LOCATION:Room #173
DTSTART:20250521T133000Z
DTEND:20250521T150000Z
END:VEVENT
BEGIN:VEVENT
UID:d7b21156-3320-45fd-aca8-f87a004e3f60
DTSTAMP:20250517T105800Z
SUMMARY:Extracting\, Transforming\, and Analyzing Data With Kotlin. Part 4.
DESCRIPTION:Jolan Rensen\, Aleksei Zinovev\nThis workshop is designed for a
 ll Kotlin developers who need simple and convenient tools within their nat
 ive ecosystem to assist them when working with data\, understanding its na
 ture\, performing any necessary processing\, and presenting the results to 
 their team or stakeholders as a report or chart.\n\nIn this workshop\, you
 ’ll learn how to build data processing pipelines in your applications. We’
 ll explore the best practices for extracting data from various sources\, a
 ggregating and transforming it\, and then exporting it as a collection of 
 data classes\, displaying it as tables\, or visualizing it with insightful 
 charts.\n\nBy the end of the workshop\, you’ll be able to:\n\n- Load\, tra
 nsform\, and export data using the Kotlin DataFrame library.\n- Visualize 
 data with the Kandy library to effectively convey insights.\n- Access and 
 manipulate data from various sources: REST APIs\, SQL databases\, CSV file
 s\, and other tabular data.\n- Handle both flat and hierarchical JSON-like 
 data structures.\n- Boost your code written with the help of the kotlin.co
 llections or SQL-like frameworks.\n- Solve practical problems by applying 
 your skills to three real-world scenarios.\n- Present the insights in Kotl
 in notebooks and easily share them on GitHub Gists.\n
LOCATION:Room #174
DTSTART:20250521T133000Z
DTEND:20250521T150000Z
END:VEVENT
BEGIN:VEVENT
UID:5b82f157-0efb-4e64-8bf5-1121cd8ccce7
DTSTAMP:20250517T105800Z
SUMMARY:Hands-On Kotlin Web Development With Ktor. Part 4.
DESCRIPTION:Anton Arhipov\, Simon Vergauwen\, Leonid Stashevskii\nKtor is a 
 lightweight and flexible toolkit for building HTTP applications. This work
 shop will use the Kotlin programming language\, the Ktor framework\, the E
 xposed database access library\, OpenAI\, and several other Kotlin and Jav
 a libraries to build a feature-complete AI powered web application.\n\nWe’
 ll start with the basics by exploring the Ktor framework and learning how 
 to build a simple web application using essential functions. We’ll cover t
 opics like handling HTTP requests\, working with WebSockets\, database acc
 ess\, authentication\, logging\, and deployment.\n\nFor testing\, we will 
 look into the APIs that Ktor provides. Finally\, we will explore the API f
 or writing plugins and use it to create a simple plugin for our Ktor appli
 cation.\n\nBy the end of the workshop\, you’ll be able to:\n  - Structure 
 Ktor projects\n  - Test Ktor applications\n  - Create and deploy RESTful s
 ervices using Ktor\n  - Integrate Ktor with external libraries\n\nThis wil
 l be a fast-paced workshop where attendees will spend most of their time c
 oding. You will walk away armed with a cookbook of various Ktor recipes fo
 r building feature-complete AI powered web application.\n
LOCATION:Room #176
DTSTART:20250521T133000Z
DTEND:20250521T150000Z
END:VEVENT
BEGIN:VEVENT
UID:dfc0303c-fb73-423f-b84a-d6edad15174f
DTSTAMP:20250517T105800Z
SUMMARY:Building Shared UI With Compose Multiplatform. Part 4.
DESCRIPTION:Márton Braun\, Victor Kropp\nTake the next step in your cross-p
 latform Kotlin journey with Compose Multiplatform! This workshop is for de
 velopers already familiar with the basics of Kotlin Multiplatform and Jetp
 ack Compose who are looking to extend their skills by building a shared UI
 .\n\nWe’ll discuss how Compose Multiplatform works and show you how your e
 xisting Compose skills are reusable across platforms. You’ll have hands-on 
 time with a wide range of Compose features\, focusing on how they work acr
 oss different platforms. During the workshop’s exercises\, you’ll work wit
 h Compose code\, explore APIs\, build new features\, improve accessibility
 \, test the UI\, and more.\n\nCovering the latest available APIs and best 
 practices\, we’ll equip you with everything you need to start using Compos
 e Multiplatform in your own apps! Here is how the workshop will be structu
 red:\n\nIntroduction\n- How Compose Multiplatform works\n- Running Compose 
 on Android\, iOS\, Desktop\, and Web\n- Writing basic Compose code for mul
 tiplatform use\n\nCompose building blocks\n- Resources (localization\, fon
 ts\, and more)\n- Image loading\n- ViewModels and architecture components\
 n- Navigation\n- Animations\n- Dependency injection\n- Theming\n\nMasterin
 g Compose Multiplatform\n- Interop with native components\n- Dialogs\n- In
 sets\n- Accessibility\n- Testing\n\nThis workshop includes exercises for p
 articipants to complete on their own laptops. Using a MacBook is highly re
 commended for participation in all exercises\, as iOS applications can onl
 y be built on macOS. Detailed setup instructions will be provided prior to 
 the workshop.\n
LOCATION:Room #178
DTSTART:20250521T133000Z
DTEND:20250521T150000Z
END:VEVENT
BEGIN:VEVENT
UID:a58379e6-16e4-45b5-bbc5-371cc086ced1
DTSTAMP:20250517T105800Z
SUMMARY:Deep Dive Into Kotlin Multiplatform: Advanced Techniques for Seamle
 ss Code Sharing. Part 4.
DESCRIPTION:Pamela Hill\, Konstantin Tskhovrebov\nThis is an intermediate/a
 dvanced workshop for experienced Kotlin Multiplatform developers. It is ai
 med at developers who have built projects with Kotlin Multiplatform and Je
 tpack Compose / Compose Multiplatform and now want to progress onto more a
 dvanced topics.\n\nThe workshop aims to equip attendees with the skills to 
 write high-quality code and apps using Kotlin Multiplatform. The workshop 
 will address the following topics:\n\nA Gentle(r) Introduction\n- Introduc
 ing an example project\n- Explaining project structure and architecture\n- 
 Highlighting a few key libraries used in the project\n\nNative Integration
 s\n- Splash screens\n- Notifications\n- Working with files\n\nAdvanced Kot
 lin Multiplatform for iOS Targets\n- Debugging Kotlin/Swift\n- Understandi
 ng and improving Kotlin/Swift interoperability\n\nCode Quality\n- Code cov
 erage with Kover (JVM-only)\n- Modularization\n\nApp Quality\n- Fixing mem
 ory leaks\n- Performance testing\n- App size optimization\n\nManaging Work
 flows\n- Basics of building CI/CD pipelines for your apps\n\nYou will need 
 to bring a MacBook along with you to participate in all the practical exer
 cises. Installation instructions will be provided one week prior to the wo
 rkshop.\n
LOCATION:Room #179
DTSTART:20250521T133000Z
DTEND:20250521T150000Z
END:VEVENT
BEGIN:VEVENT
UID:f20838f2-4dd0-47e8-9676-7e98d964f199
DTSTAMP:20250517T105800Z
SUMMARY:Refactoring to Functional Kotlin. Part 4.
DESCRIPTION:Duncan McGregor\, Nat Pryce\nKotlin supports both Object-orient
 ed and functional styles of programming\, but what should we do when we ha
 ve OO code that should be functional? Refactor\, of course!\n\nIn this wor
 kshop\, Nat and Duncan\, the authors of Java to Kotlin: A Refactoring Guid
 ebook\, take a web application and introduce techniques to gradually and s
 afely migrate the code to the functional style better suited to today’s ar
 chitectures. Topics include:\n\n- Thinking in a functional way – Data\, Ca
 lculations\, and Actions\n- Migrating from mutable objects to immutable da
 ta classes\n- Converting business logic to a functional domain model\n- Wh
 ere does the state live? Functional core / imperative shell\n- Choosing be
 tween functions and methods\n- Functional error handling\n- Expand and Con
 tract refactoring for safety over many commits\n
LOCATION:Room #180
DTSTART:20250521T133000Z
DTEND:20250521T150000Z
END:VEVENT
BEGIN:VEVENT
UID:18b78d5b-1200-421b-9a37-f9658bc9aca7
DTSTAMP:20250517T105800Z
SUMMARY:Asynchronous Programming With Kotlin Coroutines. Part 4.
DESCRIPTION:Sebastian Aigner\, Vsevolod Tolstopyatov\, Alejandro Serrano Me
 na\nIn this workshop\, you’ll learn everything you need to know about how 
 to be productive with coroutines in Kotlin. We’ll start with the basics of 
 asynchronous programming\, its differences from blocking code\, and the co
 ncepts of suspending functions and coroutines. We’ll explore coroutine con
 texts\, concurrent decomposition of work via deferreds\, and structured co
 ncurrency with coroutine scopes.\n\nThe second part of the workshop will b
 e devoted to Kotlin Flows. We’ll study how Kotlin Flows are designed on a 
 basic level\, learn the difference between hot and cold flows\, discuss th
 eir typical usage patterns\, and explore how they incorporate ideas from r
 eactive streams. To deepen our understanding\, we’ll also take a peek at s
 ome of the implementations behind flows and collectors. Throughout\, we’ll 
 see how they help you in writing safe and reliable concurrent systems\, an
 d how modern applications can use them to work with asynchronous streams o
 f data\, manage system states\, and broadcast events.\n\nThrough this work
 shop\, you’ll enhance your coroutines-related vocabulary\, understand how 
 to spot and avoid common problems\, and be able to effectively and confide
 ntly use coroutines and flows in your own projects.\n
LOCATION:Room #181
DTSTART:20250521T133000Z
DTEND:20250521T150000Z
END:VEVENT
BEGIN:VEVENT
UID:9b97c4bb-de5e-48e5-8af2-98c33dcde06b
DTSTAMP:20250517T105800Z
SUMMARY:Registration
DESCRIPTION:\n\n
LOCATION:Keynote room
DTSTART:20250522T053000Z
DTEND:20250522T070000Z
END:VEVENT
BEGIN:VEVENT
UID:b03bde5e-3be0-46c1-a3cd-cfa5490bdbb0
DTSTAMP:20250517T105800Z
SUMMARY:Opening keynote
DESCRIPTION:Sebastian Aigner\, Michail Zarečenskij\, Márton Braun\, Svetlan
 a Isakova\, Ekaterina Petrova\, Vsevolod Tolstopyatov\, Kirill Skrygan\n\n
LOCATION:Keynote room
DTSTART:20250522T070000Z
DTEND:20250522T080000Z
END:VEVENT
BEGIN:VEVENT
UID:9607dca2-f292-44cd-81be-c589fa87775c
DTSTAMP:20250517T105800Z
SUMMARY:Break
DESCRIPTION:\n\n
LOCATION:Hall D2
DTSTART:20250522T080000Z
DTEND:20250522T081500Z
END:VEVENT
BEGIN:VEVENT
UID:f854c988-ae34-40df-8320-1a31d89843b0
DTSTAMP:20250517T105800Z
SUMMARY:Kotlin and Spring: The modern server side stack
DESCRIPTION:Rod Johnson\nRod will discuss his experience switching from Jav
 a to Kotlin while building a server-side application implementing structur
 ed RAG.\n\nHe'll show code in a real application and reflect on the positi
 ves and negatives: overwhelmingly\, positives. \n\nKotlin brings a modern 
 language to a mature\, hardened ecosystem and productive\, high quality fr
 amework. The result can be a thing of beauty. \n\n\n
LOCATION:Keynote room
DTSTART:20250522T081500Z
DTEND:20250522T090000Z
END:VEVENT
BEGIN:VEVENT
UID:184a0424-a05a-460b-b2f5-72f16b7fb6f2
DTSTAMP:20250517T105800Z
SUMMARY:Code Quality at Scale: Future-Proof Your Android Codebase with KtLi
 nt and Detekt
DESCRIPTION:Tristan Hamilton\nManaging a large\, multi-team Kotlin codebase 
 that has grown and evolved over eight years is no small feat. Introducing 
 architectural changes and ensuring alignment across multiple autonomous te
 ams adds another layer of complexity.\n\nIn this talk\, you’ll learn strat
 egies to build more robust\, maintainable\, and future-ready codebases\, w
 hether you’re scaling a project or working in a large team. We’ll show how 
 integrating static analysis tools like Ktlint and Detekt into your CI pipe
 line can help you establish consistent coding standards and systematically 
 reduce technical debt. As a bonus\, we’ll explore how we were able to leve
 rage custom Detekt rules to help us safely enable r8 in a multimodule Andr
 oid app.\n
LOCATION:Hall D2
DTSTART:20250522T081500Z
DTEND:20250522T090000Z
END:VEVENT
BEGIN:VEVENT
UID:cba58972-a5e4-4f7f-9504-163651fddf55
DTSTAMP:20250517T105800Z
SUMMARY:Deploying Kotlin Multiplatform at Google Workspace
DESCRIPTION:Jason Parachoniak\, Johan Bay\nI like to talk you through some 
 of the bugs we found and optimizations as we launched Kotlin Multiplatform 
 to some users with Google Workspace.   We'll talk through some bugs\, perf
 ormance issues and fixes with comparisons to ObjectiveC.   As well as a Q/
 A with the developers of worked on this.\n
LOCATION:Auditorium 15
DTSTART:20250522T081500Z
DTEND:20250522T090000Z
END:VEVENT
BEGIN:VEVENT
UID:7311ac21-bcb6-4fc5-8fb1-aa878190b967
DTSTAMP:20250517T105800Z
SUMMARY:Building an Agentic Platform with Kotlin: Powering one of Europe's 
 Largest LLM Bot
DESCRIPTION:Patrick Whelan\nHow does one build a multi-tenant\, multi-chann
 el enterprise application for multiple European countries with a new and n
 on-deterministic technology such as LLMs?\n\nThis is the question my team 
 and I asked ourselves over a year and a half ago.\n\nJoin me in my talk to 
 discover how we helped build one of Europe's biggest LLM chatbots and how 
 this led to Arc\, an open-sourced Kotlin-based AI framework that is now pa
 rt of the Eclipse Foundation.\n\nWhat makes Arc interesting is how it comb
 ines Kotlin DSL and scripting to enable developers to build LLM-powered ag
 ents fast and efficiently\, and most importantly\, ready for the enterpris
 e.\n\nIn this session\, we will go through the journey of how and why the 
 framework was born.\n\nWe'll take a look at some of the design decisions t
 hat were made and some of the key features of the framework\, such as obse
 rvability\, memory\, and tools\, highlighting how we tackle some of our bi
 ggest challenges.\n\nAt the end of this session\, you should have a good u
 nderstanding of the challenges in building an LLM application at this scal
 e\, as well as some strategies for solving these problems.\n
LOCATION:Auditorium 11+12
DTSTART:20250522T081500Z
DTEND:20250522T090000Z
END:VEVENT
BEGIN:VEVENT
UID:ecb89579-b199-4f00-94ae-32cf9d6105cd
DTSTAMP:20250517T105800Z
SUMMARY:Compose Prototyping in Kotlin Notebooks
DESCRIPTION:Christian Melchior\nWith its unique mix of markdown and REPL-li
 ke nature\, Kotlin Notebooks is an excellent way to document or explore a 
 new idea or an existing codebase. But did you know that Notebooks also sup
 port Compose and Swing?\n\nIn this lighting talk you will see how you can 
 set up Notebooks to access existing UI code or write new from scratch\, wi
 th the result being shown directly in the notebook. And as a bonus on top\
 , all of this can shared directly as documentation on Github or in Gists.\
 n
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T081500Z
DTEND:20250522T083000Z
END:VEVENT
BEGIN:VEVENT
UID:370fd02e-f41c-4794-a875-83d657c6882d
DTSTAMP:20250517T105800Z
SUMMARY:Setting up your Mac for Kotlin Multiplatform Development
DESCRIPTION:Matt Dyor\, Tomáš Mlynarič\, Dustin Lam\nIf you have not built 
 with KMP yet\, you will probably have to install some software (e.g.\, Xco
 de\, iOS Simulator\, Android Studio Meerkat | 2024.3.1 or later). We recom
 mend that you come to KotlinConf with all of your KMP software installed a
 s these applications are large and may take hours to install. But for thos
 e who need some help in getting everything set up\, please join us.\n
LOCATION:Room #173
DTSTART:20250522T081500Z
DTEND:20250522T090000Z
END:VEVENT
BEGIN:VEVENT
UID:6067aa0b-caef-476a-b2eb-f0c732778491
DTSTAMP:20250517T105800Z
SUMMARY:State of Kotlin/Wasm and Compose Multiplatform for Web on Modern Br
 owsers 
DESCRIPTION:Pamela Hill\nKotlin/Wasm and Compose Multiplatform for web allo
 w Kotlin Multiplatform developers to extend their reach to the modern brow
 ser. In this lightning talk\, I’ll describe the current state of the platf
 orm and what the JetBrains team is working on as we prepare for the Beta r
 elease.\n
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T084500Z
DTEND:20250522T090000Z
END:VEVENT
BEGIN:VEVENT
UID:0eecf4f3-5a73-484f-953a-16b30e3a04ab
DTSTAMP:20250517T105800Z
SUMMARY:Break
DESCRIPTION:\n\n
LOCATION:Hall D2
DTSTART:20250522T090000Z
DTEND:20250522T091500Z
END:VEVENT
BEGIN:VEVENT
UID:fcbdd5e2-1d4a-43a4-988a-90c0ad90fd0b
DTSTAMP:20250517T105800Z
SUMMARY:Rich Errors in Kotlin
DESCRIPTION:Michail Zarečenskij\nKotlin's nullability model is one of its c
 ore features. In this talk\, we’ll explore how this model can be generaliz
 ed to restricted union types specifically designed for handling error case
 s. \n\nAdditionally\, we’ll discuss how errors can currently be represente
 d in Kotlin\, covering approaches such as nullable types\, exceptions\, se
 aled hierarchies\, and Result-like classes.\n
LOCATION:Keynote room
DTSTART:20250522T091500Z
DTEND:20250522T100000Z
END:VEVENT
BEGIN:VEVENT
UID:5e85ef08-f3e3-4f58-a54f-a304817eb9e0
DTSTAMP:20250517T105800Z
SUMMARY:What’s new in Amper
DESCRIPTION:Dmitry Savvinov\nAmper is an experimental\, standalone build to
 ol for the Kotlin Multiplatform and JVM ecosystem from JetBrains. In this 
 talk\, we'll look at what Amper is already capable of. We’ll dip our toes 
 together into the design principles behind Amper\, and see how they find t
 heir reflection in the major features\, choices and tradeoffs of Amper.\n\
 nAnd of course - I’ll share a sneak peek into what the team is cooking\, a
 nd what one might expect from Amper in the future!\n
LOCATION:Hall D2
DTSTART:20250522T091500Z
DTEND:20250522T100000Z
END:VEVENT
BEGIN:VEVENT
UID:9808c7dc-e8dc-4671-9f5d-2db628a5a86d
DTSTAMP:20250517T105800Z
SUMMARY:Next level Kotlin support in Spring Boot 4
DESCRIPTION:Sébastien Deleuze\nSpring and Kotlin teams collaborate to bring 
 the Kotlin support to the next level in the upcoming Spring Boot 4 release
 \, based on Spring Framework 7\, to be released at the end of 2025.\n\nIn 
 this brand new talk\, Sébastien will share new features that intend to imp
 rove the developer experience and runtime efficiency of Spring Boot applic
 ations for Kotlin developers.\n\nHe will cover the new Kotlin 2 baseline\, 
 runtime efficiency improvements\, better null-safety via JSpecify\, GraalV
 M native image special Kotlin support\, new DSLs\, new Kotlin documentatio
 n and Spring AI Kotlin support.\n
LOCATION:Auditorium 15
DTSTART:20250522T091500Z
DTEND:20250522T100000Z
END:VEVENT
BEGIN:VEVENT
UID:96e4f875-a853-4ca3-bd5f-dd40675b4c05
DTSTAMP:20250517T105800Z
SUMMARY:Creative UIs with Compose
DESCRIPTION:Chris Horner\nWhile most folks associate Compose UI with Materi
 al\, its API allows us to be more expressive than ever before.\n\nMobile U
 Is have become homogenized and stale\, but video games continue to provide 
 a wealth of innovation and creativity.\n\nIn this session we'll recreate a 
 complex user interface from the game Persona 5 to showcase how to really p
 ush Compose beyond Material Design. Topics include:\n- Drawing custom shap
 es\n- Animating path data\n- Non-standard shapes in LazyColumn/LazyRow\n- 
 Custom effects inside LazyColumn/LazyRow\n- Remaining usable and accessibl
 e when not using Material\n- How/why video games can be a source of inspir
 ation\n
LOCATION:Auditorium 11+12
DTSTART:20250522T091500Z
DTEND:20250522T100000Z
END:VEVENT
BEGIN:VEVENT
UID:e28e4e25-6789-4aa8-a17c-77154dbca6bf
DTSTAMP:20250517T105800Z
SUMMARY:Model Context Protocol in Kotlin
DESCRIPTION:Alexander Sysoev\nMCP is an open protocol that standardizes how 
 applications provide context to LLMs. We've created a Kotlin library that 
 allows you to use this protocol and connect AI models to tooling\, like ID
 Es. Now we will see how it works in practice.\n
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T091500Z
DTEND:20250522T093000Z
END:VEVENT
BEGIN:VEVENT
UID:ff4c4b86-8b94-4841-b1dd-a40c02bcb1d8
DTSTAMP:20250517T105800Z
SUMMARY:Kotlin's Gam[e]bit: LLM-less AI for Board Games
DESCRIPTION:Dmytro Kurets\nDiscover how Kotlin can power AI without relying 
 on large language models. In this session\, we'll explore preparing data u
 sing Kotlin Notebooks\, training machine learning models directly in Kotli
 n\, and implementing a strategy-driven bot for an online board game. Wheth
 er you're a Kotlin enthusiast or curious about alternative approaches to A
 I\, this talk will show how Kotlin shines as a tool for building efficient
 \, specialized AI systems\n
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T094500Z
DTEND:20250522T100000Z
END:VEVENT
BEGIN:VEVENT
UID:56c3b6fb-5999-43ed-8987-4f4db4fe810f
DTSTAMP:20250517T105800Z
SUMMARY:Lunch
DESCRIPTION:\n\n
LOCATION:Keynote room
DTSTART:20250522T100000Z
DTEND:20250522T110000Z
END:VEVENT
BEGIN:VEVENT
UID:c753527c-0d3a-448f-af64-8dbd9ddd3245
DTSTAMP:20250517T105800Z
SUMMARY:From 0 to h-AI-ro: high-speed track to AI for Kotlin developers
DESCRIPTION:Urs Peter\nWith the advent of ChatGPT and other generative AI m
 odels\, artificial intelligence has taken a giant leap forward\, unlocking 
 possibilities beyond our imagination while simultaneously challenging the 
 established way of doing. How does this exciting (r?)evolution impact us K
 otlin developers?\n\nIn this session\, we'll take a deep dive into the wor
 ld of (generative) AI — giving you a clear and practical understanding of 
 key terminology\, concepts\, and frameworks relevant to the Kotlin ecosyst
 em\, including powerful tools like Kotlin notebooks.\n\nGet to know:\n- Ge
 nerative AI 101:  Get a hands-on introduction to the core concepts of mode
 rn AI — from Large Language Models (LLMs) and Natural Language Processing 
 (NLP) to embeddings\, vector databases\, Retrieval-Augmented Generation (R
 AG)\, Tools\, and Prompt Engineering.\n\n- Agentic AI: Go beyond simple pr
 ompts and tool calls — discover how to build intelligent\, autonomous Agen
 ts using the Model Context Protocol (MCP) to orchestrate complex\, context
 -aware behavior.\n\n- Real-world integration:  Learn how to bring AI into 
 your Kotlin applications — both server-side and mobile — using frameworks 
 like LangChain4j\, Spring AI\, and MCP clients and servers.\n \nThrough in
 teractive examples and live coding\, you will gain insights into how Kotli
 n can be leveraged with cutting-edge AI technologies\, opening doors to in
 novative possibilities in content generation\, natural language processing
 \, computer vision\, and more.\n\nBy the end of this session\, you will em
 erge with a comprehensive understanding of AI's potential within the Kotli
 n ecosystem. Armed with this knowledge\, you'll be prepared to embrace the 
 future as a H-AI-ro!\n
LOCATION:Keynote room
DTSTART:20250522T110000Z
DTEND:20250522T114500Z
END:VEVENT
BEGIN:VEVENT
UID:07106c95-0768-4e8f-a4b1-a29d05c4c26e
DTSTAMP:20250517T105800Z
SUMMARY:The Life and Death of a Kotlin/Native Object
DESCRIPTION:Troels Lund\nHave you ever wondered what the Kotlin/Native runt
 ime does? What actually happens\, under the hood\, when you instantiate an 
 object? How is an object layed out? How does the runtime manage memory? Wh
 at happens when an object is no longer needed?\n\nIn this talk\, you will 
 get a look at how all these problems are solved by the Kotlin/Native runti
 me. This is a high level talk about a very low level topic\; you only need 
 to know a bit of Kotlin to follow along.\n
LOCATION:Hall D2
DTSTART:20250522T110000Z
DTEND:20250522T114500Z
END:VEVENT
BEGIN:VEVENT
UID:a197f534-2767-4633-85e7-c467a20cf5db
DTSTAMP:20250517T105800Z
SUMMARY:A (deep) dive into (shallow) immutability: Valhalla and beyond
DESCRIPTION:Marat Akhin\nImmutability is getting more and more attention in 
 modern programming\, making code easier to reason about\, safer in concurr
 ent environments\, and more maintainable. However\, adopting immutability 
 isn’t without challenges\, as it does improve the developer experience\, b
 ut can often come with runtime costs. In Kotlin\, immutability is already 
 a key part of the language design\, but there’s significant potential to p
 ush its boundaries even further.\n\nThis talk begins by exploring the curr
 ent state of immutability in Kotlin. We’ll highlight what features the lan
 guage already provides\, examine what’s missing\, and discuss the reasons 
 behind these design decisions. From there\, we’ll take a closer look at Pr
 oject Valhalla\, an upcoming JVM initiative that introduces value types an
 d other innovations\, enabling new possibilities for Kotlin. We’ll discuss 
 how Valhalla can help enhance Kotlin’s immutability story and improve the 
 programming experience without significant trade-offs.\n\nFinally\, we’ll 
 explore the broader immutability design space for Kotlin\, looking beyond 
 Valhalla to imagine what future extensions could look like. We’ll discuss 
 how new immutability features could integrate with existing ones\, such as 
 smart casts and coroutines\, while maintaining the language’s pragmatic an
 d developer-friendly nature.\n\nJoin this session to discover how Kotlin c
 an evolve its immutability story to better meet the needs of modern develo
 pers\, combining practicality with innovation.\n
LOCATION:Auditorium 15
DTSTART:20250522T110000Z
DTEND:20250522T114500Z
END:VEVENT
BEGIN:VEVENT
UID:2d04858e-b1ab-4e49-b2e2-a5cd20d59f4b
DTSTAMP:20250517T105800Z
SUMMARY:APIs: How Hard Can They Be?
DESCRIPTION:Aurimas Liutikas\, Alan Viverette\nVirtually every Android deve
 loper uses AndroidX libraries. With KMP\, the usage is expanding to other 
 platforms as well. The wide adoption makes API design and evolution of the
 se libraries critical for the user experience. Join me to learn about the 
 life of an API in AndroidX: from an idea\, to a design\, to a review\, and 
 through an API evolution. You will hear about our API review process and o
 ur use of Metalava and Kotlin Binary Compatibility Verification tools  to 
 wrangle JVM\, Android\, and KMP libraries.\n
LOCATION:Auditorium 11+12
DTSTART:20250522T110000Z
DTEND:20250522T114500Z
END:VEVENT
BEGIN:VEVENT
UID:d5238baa-6408-471a-82db-c508d327a7d0
DTSTAMP:20250517T105800Z
SUMMARY:One Codebase\, Three Platforms: X's Experience with Kotlin Multipla
 tform
DESCRIPTION:Arkadii Ivanov\, Eric Denman\nWhat if you could share a single 
 codebase across Android\, iOS\, and Web without sacrificing platform-speci
 fic experiences? Is it even possible? At X (formerly Twitter)\, with a tin
 y developer team\, we took the leap with Kotlin Multiplatform to entirely 
 rebuild one of our core features for our multi-million-user platform.\n\nI
 n this talk\, we'll take you through the highs and lows of adopting Kotlin 
 Multiplatform in a real-world project. Learn about our development process
 \, the libraries that made our journey smoother\, and how we approached ar
 chitecture\, navigation\, dependency injection\, and UI for a consistent u
 ser experience across platforms.\n\nWe'll share practical lessons\, the ch
 allenges we faced\, and how Kotlin Multiplatform transformed our cross-pla
 tform development strategy. We'll also explore one of the biggest challeng
 es: gaining buy-in from iOS and Web developers for Kotlin Multiplatform. W
 e'll share how we addressed their concerns and built strong collaboration 
 across teams. Whether you're curious about Kotlin Multiplatform or seeking 
 tips to enhance your implementation\, this talk is for you!\n\nJoin us to 
 see how Kotlin Multiplatform enabled us to ship faster and deliver a seaml
 ess experience\, even while tackling the complexities of building for mill
 ions of users with a small\, focused team.\n
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T110000Z
DTEND:20250522T111500Z
END:VEVENT
BEGIN:VEVENT
UID:58a72b81-2c17-40f0-a7ec-cf28910b641f
DTSTAMP:20250517T105800Z
SUMMARY: Two Years with Kotlin Multiplatform: From Zero to 55% Shared Code
DESCRIPTION:Rodrigo Sicarelli\nTwo years ago\, StoneCo\, one of the largest 
 fintech companies in Latin America serving more than 4 million users\, emb
 arked on a journey to unify its mobile apps using Kotlin Multiplatform (KM
 P)\, aiming to balance the efficiency of code sharing with the seamless us
 er experience required in the fintech sector. This talk explores our journ
 ey - how we evaluated multiple cross-platform frameworks\, overcame techni
 cal and organizational challenges\, and achieved 55% code sharing across t
 wo large-scale mobile applications.\n\nYou'll hear how we made the decisio
 n to adopt KMP\, how we trained 130 mobile engineers to embrace this parad
 igm shift\, and the measurable impact it has had on team productivity\, de
 veloper satisfaction\, and app performance. Whether you're considering KMP 
 or scaling it in your organization\, this session will provide actionable 
 insights from a real-world\, long-term implementation.\n
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T113000Z
DTEND:20250522T114500Z
END:VEVENT
BEGIN:VEVENT
UID:2d6fe891-8a39-4ebf-a7a8-c9e0cf807522
DTSTAMP:20250517T105800Z
SUMMARY:Break
DESCRIPTION:\n\n
LOCATION:Hall D2
DTSTART:20250522T114500Z
DTEND:20250522T120000Z
END:VEVENT
BEGIN:VEVENT
UID:1a6fc2bb-2c72-47be-bc05-de3a14451061
DTSTAMP:20250517T105800Z
SUMMARY:Compose Multiplatform for iOS: Ready for Production Use
DESCRIPTION:Sebastian Aigner\nCompose Multiplatform\, the declarative frame
 work by JetBrains for building shared UIs\, is now stable and production-r
 eady on iOS – so it’s time to start building! In this talk\, you will get 
 an overview of the technology\, and see what we’ve done to get to the stab
 le release.\n\nThis includes the evolution of our APIs\, under-the-hood ch
 anges\, and new tooling that we’re premiering for building Compose Multipl
 atform apps in your favorite development environments\, IntelliJ IDEA and 
 Android Studio. You’ll see that there’s a rich ecosystem available for you 
 that has already grown to cover all major areas of app development.\n\nPut
 ting it all together\, you’ll see how Compose Multiplatform enables you to 
 write production-grade apps on iOS and Android while reusing much of the k
 nowledge you already have – and you’ll also get some insights into what we 
 have planned next in the journey of Compose Multiplatform\, on iOS and bey
 ond.\n
LOCATION:Keynote room
DTSTART:20250522T120000Z
DTEND:20250522T124500Z
END:VEVENT
BEGIN:VEVENT
UID:b95e8289-4ddd-48d9-9767-6e6c7ab94778
DTSTAMP:20250517T105800Z
SUMMARY:Extending Ktor for Server Side Development
DESCRIPTION:Ido Flax\nWhile Kotlin is seeing widespread adoption for Server 
 side development\, Ktor\, Kotlin's minimalistic and flexible framework for 
 server and client side development\, is sometimes overlooked\, largely bec
 ause Spring Boot still offers an exhaustive range of starters. \n\nTo brid
 ge this gap\, kotlin developers can utilise Ktor's fluent Plugin API to pr
 ovide all the functionality they need for their own use cases\, and those 
 of the wider community.\n\nIn this session\, we will discuss developing pl
 ugins for Ktor and demonstrate a few interesting plugins that complement t
 he standard set of Ktor’s features.\n\nYou’ll learn how to seamlessly inte
 grate essential functionalities like Kafka for message-driven architecture
 s\, implement advanced rate limiting for traffic control\, and enhance sys
 tem resilience with a sophisticated Circuit Breaker plugin. Each plugin is 
 crafted to offer flexibility and ease of integration\, making your develop
 ment experience smoother and more efficient.\n
LOCATION:Hall D2
DTSTART:20250522T120000Z
DTEND:20250522T124500Z
END:VEVENT
BEGIN:VEVENT
UID:28ee9c0f-5737-4403-a2dd-e218c3584399
DTSTAMP:20250517T105800Z
SUMMARY:IoT development with Kotlin
DESCRIPTION:Erik Hellman\nWith the advent of Kotlin Multiplatform and Kotli
 n/Native\, combined with IoT devices increasingly leveraging more powerful 
 hardware capable of running Linux\, we now have the exciting opportunity t
 o use Kotlin for IoT development.\n\nThis talk will explore the key techno
 logies required for IoT devices and demonstrate how to integrate them usin
 g Kotlin. From communication protocols like Matter\, MQTT\, and Bluetooth 
 LE\, to essential tools and frameworks like embedded Linux\, D-Bus\, and B
 uildroot\, we will delve into the strategies and best practices for succes
 sfully adopting Kotlin in IoT development.\n
LOCATION:Auditorium 15
DTSTART:20250522T120000Z
DTEND:20250522T124500Z
END:VEVENT
BEGIN:VEVENT
UID:aa3e876b-43c3-4795-b646-2652048b360f
DTSTAMP:20250517T105800Z
SUMMARY:Good Old Data
DESCRIPTION:Andrey Zaytsev\nI will be talking about data-oriented systems d
 esign: why we need to stop hiding plain data and why object orientation no 
 longer serves us well. Starting from first principles and foundational def
 initions\, we’ll explore practical recipes and patterns for working with d
 ata in Kotlin. Topics include serialization\, persistent data structures\, 
 polymorphism\, identity\, and state\n
LOCATION:Auditorium 11+12
DTSTART:20250522T120000Z
DTEND:20250522T124500Z
END:VEVENT
BEGIN:VEVENT
UID:8387f44c-e808-47ff-941e-2a0d9b2bff2f
DTSTAMP:20250517T105800Z
SUMMARY:Get Started With Kotlin Multiplatform for Shared Business Logic
DESCRIPTION:Matt Dyor\, Tomáš Mlynarič\, Dustin Lam\nKotlin Multiplatform (
 KMP) allows you to write code once and share it across multiple target pla
 tforms\, such as Android\, iOS\, web\, and JVM. By leveraging KMP\, you ca
 n minimize code duplication\, maintain consistency\, and significantly red
 uce development time and effort. In this Codelab\, we will walk developers 
 through taking a standalone Android app and a standalone iOS app\, extract
 ing some business logic to a KMP Shared Module\, and leveraging this share
 d business logic from both Android and iOS.\n
LOCATION:Room #173
DTSTART:20250522T120000Z
DTEND:20250522T124500Z
END:VEVENT
BEGIN:VEVENT
UID:93aa64ba-1788-445c-832c-fdf0f8361645
DTSTAMP:20250517T105800Z
SUMMARY:The wonders of smart casting
DESCRIPTION:Alejandro Serrano Mena\nSmart casting sets Kotlin apart from ot
 her languages. We often see its effect through null checks and when expres
 sions\, but in this talk we'll show that smart casting is capable of much 
 more! \n
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T120000Z
DTEND:20250522T121500Z
END:VEVENT
BEGIN:VEVENT
UID:d0346d02-b65f-4c64-bc43-d4b4ec29d3f5
DTSTAMP:20250517T105800Z
SUMMARY:Building a macOS screen saver with Kotlin
DESCRIPTION:Márton Braun\nTwo years ago\, sitting in the audience at Kotlin
 Conf\, I was mesmerised by the idle animation on the big screen. It was in 
 the style of old school DVD player screen savers\, with Kotlin's various l
 ogos through the years bouncing from edge to edge.\n\nI later found out th
 at this was a pre-rendered video\, and not a screen saver that I could jus
 t grab and start using. This meant that I had no choice but to build it my
 self\, as a native macOS application running on Kotlin/Native.\n\nJoin me 
 for a tale of Kotlin success and macOS failures\, as we explore just what 
 it takes to build a screen saver in Kotlin.\n\nWe'll see how easy it is to 
 call native platform APIs from Kotlin code\, what challenges the developme
 nt of such an unusual application presents\, and how macOS is very much no
 t our friend on this whole journey.\n
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T123000Z
DTEND:20250522T124500Z
END:VEVENT
BEGIN:VEVENT
UID:97efdeb0-12e9-4331-97f0-42db0359c289
DTSTAMP:20250517T105800Z
SUMMARY:Coffee Break
DESCRIPTION:\n\n
LOCATION:Keynote room
DTSTART:20250522T124500Z
DTEND:20250522T131500Z
END:VEVENT
BEGIN:VEVENT
UID:492e4391-48b5-4f08-b1dd-33dd398e29a1
DTSTAMP:20250517T105800Z
SUMMARY:Building AI Agents in Kotlin
DESCRIPTION:Vadim Briliantov\nAI agents are fully autonomous systems whose 
 actions are dynamically directed by LLMs. In agents\, LLMs are not only us
 ed for standalone tasks while keeping the general flow predefined in the c
 ode — they become the main actor responsible for answering how a task shou
 ld be accomplished.\n\nThis talk will provide an overview of AI agents\, i
 ncluding their building blocks and basic workflows. It will share the esse
 ntial knowledge for building effective AI agents in Kotlin.\n
LOCATION:Keynote room
DTSTART:20250522T131500Z
DTEND:20250522T140000Z
END:VEVENT
BEGIN:VEVENT
UID:bde7f249-780d-4109-ab04-996bd91841fa
DTSTAMP:20250517T105800Z
SUMMARY:Building Inclusive Jetpack Compose Apps: Leveraging Kotlin and the 
 Accessibility Scanner
DESCRIPTION:Vanessa Johnson\nAccessibility is a growing and important aspec
 t in app development that isn’t always prioritized. Google’s efforts inclu
 de making apps more accessible which are shown in their new standard of ma
 king UIs\, using Jetpack Compose. Jetpack Compose with its Kotlin-based de
 clarative approach offers a simplified path to building inclusive UIs. Wit
 hin Jetpack Compose\, there are powerful tools like the Accessibility Scan
 ner to quickly identify and address common accessibility issues\, improvin
 g the overall user experience. This talk will show that straightforward ch
 anges yield dramatic improvements for user experience. Through the talk\, 
 strategies will be shown how to improve accessibility. \n
LOCATION:Hall D2
DTSTART:20250522T131500Z
DTEND:20250522T140000Z
END:VEVENT
BEGIN:VEVENT
UID:bfd4ca86-7ecf-463b-a311-76fc2c369e67
DTSTAMP:20250517T105800Z
SUMMARY:Blueprints for Scale: What AWS Learned Building a Massive Multiplat
 form Project
DESCRIPTION:Matas Lauzadis\, Ian Botsford\nThe AWS SDK for Kotlin is a mass
 ive multiplatform project\, spanning over 300 services and targeting 8 dis
 tinct platforms.\n\nIn this session\, we’ll share first-hand insights into 
 managing the challenges of a large Kotlin Multiplatform project\, detailin
 g how the AWS SDK for Kotlin was designed\, developed\, and scaled. You’ll 
 hear about the best practices we adopted\, the lessons learned\, and the s
 trategies that worked (and didn’t) at AWS scale.\n\nJoin us as we discuss 
 design tradeoffs\, maintaining backwards compatibility\, adding support fo
 r Kotlin Multiplatform\, automating build and release processes\, and more
 !\n
LOCATION:Auditorium 15
DTSTART:20250522T131500Z
DTEND:20250522T140000Z
END:VEVENT
BEGIN:VEVENT
UID:10173ac4-76b4-4092-ae35-edfc9f0aaeeb
DTSTAMP:20250517T105800Z
SUMMARY:Introducing Compose Hot Reload
DESCRIPTION:Sebastian Sellmair\nCompose Hot Reload is a new plugin for Comp
 ose apps running on the JVM\, which lets you see the results of your code 
 changes live\, without having to restart the app.\n\nIn this talk\, we'll 
 look at where Compose Hot Reload is today and how you can use it in your p
 rojects to make iterating on UI code faster\, more convenient\, and more e
 xciting!\n\nThen we'll dive into the technical details to see how multiple 
 JetBrains technologies came together\, step by step\, lifting a modern UI 
 framework to the next level. We'll also learn about all the fun issues enc
 ountered and decisions that had to be made along the way.\n
LOCATION:Auditorium 11+12
DTSTART:20250522T131500Z
DTEND:20250522T140000Z
END:VEVENT
BEGIN:VEVENT
UID:e67dc2d3-15ba-49a8-aba1-589d0d366071
DTSTAMP:20250517T105800Z
SUMMARY:Coroutine Debugging in IntelliJ IDEA
DESCRIPTION:Alexey Merkulov\nDuring the past 1.5 years\, we’ve implemented 
 the smooth coroutine debugging experience\, so it would feel almost the sa
 me as debugging synchronous code and even better! In this talk I will show 
 you the capabilities of coroutine debugger and best practices for debuggin
 g coroutines. Also\, I’ll tell you a little bit about the challenges we fa
 ced while implementing these improvements\, such as deep integration and c
 ommunication between the IDE and the coroutine library.\n
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T131500Z
DTEND:20250522T133000Z
END:VEVENT
BEGIN:VEVENT
UID:f333ac28-b20c-4e56-b8fa-0a9ab6723b3c
DTSTAMP:20250517T105800Z
SUMMARY:How to Build Your Own Kotlin Course
DESCRIPTION:Anastasiia Birillo\, Daniil Karol\nInterested in teaching Kotli
 n? This session introduces a comprehensive set of materials designed to he
 lp you build your own Kotlin course. These resources include presentations 
 with speaker notes\, theory quizzes\, homework assignments\, and interacti
 ve in-IDE courses that give students hands-on experience. We will also sha
 re insights from implementing these materials at two universities\, and sh
 ow how they can be adapted for different audience levels.\n
LOCATION:Room #173
DTSTART:20250522T131500Z
DTEND:20250522T140000Z
END:VEVENT
BEGIN:VEVENT
UID:ff2ff763-93b0-4264-a730-f7acf7cf671d
DTSTAMP:20250517T105800Z
SUMMARY:Coroutines and Structured Concurrency in Ktor
DESCRIPTION:Simon Vergauwen\nKtor is built from the ground up using Kotlin 
 and Coroutines. It allows us to leverage Structured Concurrency\, and easi
 ly build elegant and robust applications.\n\nDiscover how Coroutines and C
 oroutineScopes work in Ktor from the ground up\, and what patterns and bes
 t practices allow building safe -and maintainable applications with Ktor i
 n Kotlin.\n
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T134500Z
DTEND:20250522T140000Z
END:VEVENT
BEGIN:VEVENT
UID:96c9236c-3620-4023-9dd5-eff3f27088cd
DTSTAMP:20250517T105800Z
SUMMARY:Break
DESCRIPTION:\n\n
LOCATION:Hall D2
DTSTART:20250522T140000Z
DTEND:20250522T141500Z
END:VEVENT
BEGIN:VEVENT
UID:b5e1ba3e-8bbb-43ba-8d3d-076bd7e8f1fe
DTSTAMP:20250517T105800Z
SUMMARY:Full Stream Ahead: Breaking the protocol barrier with http4k
DESCRIPTION:Ivan Sanchez\nHTTP's request-response pattern has served us wel
 l\, but modern web applications demand more. Real-time communication deman
 ds different protocols\, yet maintaining testability and simplicity remain
 s crucial to developer experience.\n\nIn this talk\, we'll explore how htt
 p4k extends HTTP's capabilities through WebSocket and Server-Sent Events s
 upport and how these protocols can be modelled as simple functions\, makin
 g them as testable as plain HTTP endpoints. We'll then show how these stre
 aming capabilities open up new possibilities for server-side rendering\, b
 ringing us full circle from the days of JSP to modern reactive interfaces 
 - all while keeping the complexity on the server where it belongs.\n\nJoin 
 us to discover how http4k's streaming capabilities can enhance your web ap
 plications\, enabling everything from chat applications to live dashboards 
 and reactive server-rendered interfaces.\n
LOCATION:Keynote room
DTSTART:20250522T141500Z
DTEND:20250522T150000Z
END:VEVENT
BEGIN:VEVENT
UID:ed7f1724-5269-47eb-b420-e3cc343e359b
DTSTAMP:20250517T105800Z
SUMMARY:Multiplatform Settings: A case study in Multiplatform library devel
 opment
DESCRIPTION:Russell Wolf\nHow do I create libraries for Kotlin Multiplatfor
 m projects? Kotlin lets you share common code between different target pla
 tforms\, but by default only a limit set of platform-agnostic APIs are ava
 ilable to the code. Growing the amount of APIs available required Kotlin M
 ultiplatform libraries.\n\nI’ll talk through what it looks like to create 
 such a library\, drawing from my experience building and maintaining one o
 f my own since the early days of Kotlin/Native. We'll talk about how to fi
 nd shared abstractions around different platform APIs\, how to handle the 
 fast-paced evolution of this environment\, and what this all felt like as 
 a first-time library developer. When we're done\, you’ll be ready to lever
 age the growing ecosystem as well as make your own contributions.\n
LOCATION:Hall D2
DTSTART:20250522T141500Z
DTEND:20250522T150000Z
END:VEVENT
BEGIN:VEVENT
UID:6f24a421-0458-45e5-b6b5-dbcd7e52e1cc
DTSTAMP:20250517T105800Z
SUMMARY:Compose draw speedrun - reloaded
DESCRIPTION:Maia Grotepass\nLet's see how many compose drawing techniques w
 e can demo in 45 minutes. This live code speed run will start simple and q
 uickly escalate. I will try out as many drawing techniques as will fit int
 o the time and screen space in a compose desktop app. Thanks to hot reload
 ing we will be able to see the effects as the code changes.\n\nAt the end 
 of this talk the audience will:\n\n- have a good overview of what is possi
 ble with compose drawing\n- see hot reload in action\n- get access to the 
 open source repo of samples as a reference\n
LOCATION:Auditorium 15
DTSTART:20250522T141500Z
DTEND:20250522T150000Z
END:VEVENT
BEGIN:VEVENT
UID:09dd3de7-0955-49b9-aa46-16dec4182473
DTSTAMP:20250517T105800Z
SUMMARY:LangChain4j with Quarkus
DESCRIPTION:Max Rydahl Andersen\, Konstantin Pavlov\nKotlin is loved for it
 s expressiveness\, Quarkus for its blazing-fast runtime\, and LangChain4j 
 for integrating AI into modern applications. But what happens when you bri
 ng all three together? You unlock the potential to build cutting-edge\, AI
 -powered applications efficiently.\n\nDespite the growing demand for AI-dr
 iven solutions\, integrating AI workflows into existing applications remai
 ns a challenge for many Kotlin developers. Pain points include complex set
 up\, lack of synergy between frameworks\, and maintaining high performance 
 while leveraging AI tools.\n\nThis talk offers a solution: combining LangC
 hain4j and Quarkus to create Kotlin applications that leverage AI capabili
 ties seamlessly. We’ll explore how to streamline integration\, manage depe
 ndencies\, and use Kotlin’s idiomatic features to simplify AI workflows.\n
 \nWho is this talk for? Kotlin developers curious about embedding AI into 
 their apps\, and Quarkus fans eager to explore its potential in AI-driven 
 use cases. Attendees will leave with actionable insights\, including code 
 samples\, to build AI-powered applications confidently.\n
LOCATION:Auditorium 11+12
DTSTART:20250522T141500Z
DTEND:20250522T150000Z
END:VEVENT
BEGIN:VEVENT
UID:dbc35cd6-35ec-41ee-b50c-a3829f99ce38
DTSTAMP:20250517T105800Z
SUMMARY:Interactive Session on Shaping Kotlin Education
DESCRIPTION:Ksenia Shneyveys\, Matt Dyor\nKotlin is a popular choice for te
 aching programming\, and the Kotlin Foundation Education Committee is here 
 to support educators in using it to its full potential.\n\nIn this session
 \, we’ll share current initiatives for those teaching and learning Kotlin 
 – whether in classrooms\, workshops\, or teams. You’ll learn how to get in
 volved\, access available resources\, and connect with others in the teach
 ing community.\nJoin us for an interactive format featuring educators\, ex
 perts\, and members of the Kotlin Foundation Education Committee. Together
 \, we’ll explore how we can better support your work\, address common chal
 lenges\, and discuss what we should prioritize next.\n\nBring your questio
 ns!\n
LOCATION:Room #173
DTSTART:20250522T141500Z
DTEND:20250522T150000Z
END:VEVENT
BEGIN:VEVENT
UID:c24473eb-3619-4de8-8765-f6ce65a44d3f
DTSTAMP:20250517T105800Z
SUMMARY:Kotlin compatibility crash course
DESCRIPTION:Martin Bonnin\nA new version of Kotlin is out 🎉 Let's update a
 ll the things 🚀 \nBut... what does it really mean to update your Kotlin v
 ersion?\n\nIn this talk\, we'll take a look at different parts of the Kotl
 in ecosystem: Kotlin stdlib\, Gradle Plugin\, compiler\, K/N\, JS\, etc... 
 and the different compatibility guarantees they offer. \n\nWe'll dive into 
 Android and Java. They have compatibility guarantees too!\n\nWhether you'r
 e developing an Android app\, a server\, a library or a Gradle plugin\, we
 'll see how you can use the latest tooling while still giving your users p
 lenty of time to update on their own schedule. \nAfter this talk\, you'll 
 never be afraid to see "incompatible version of metadata" in your logs any
 more!\n
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T141500Z
DTEND:20250522T143000Z
END:VEVENT
BEGIN:VEVENT
UID:63c2760e-1dff-4bb4-ad4d-40ef0998e273
DTSTAMP:20250517T105800Z
SUMMARY:Kotlin Worst Practices — How to Maximize Your Hassle
DESCRIPTION:Liliia Abdulina\nWant to turn your Kotlin journey into a roller
 coaster of frustration? You’re in the right place! In this session\, we’ll 
 uncover the ultimate strategies for making life harder: delightfully obtus
 e anti-patterns\, enthusiastically misusing language features\, and blissf
 ully ignoring ecosystem best practices.\n\nPacked with real-world blunders
 \, this talk is your shortcut to chaos!\n
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T144500Z
DTEND:20250522T150000Z
END:VEVENT
BEGIN:VEVENT
UID:e5c6ca54-e6ec-469a-bc66-74a9a70f31cf
DTSTAMP:20250517T105800Z
SUMMARY:Break
DESCRIPTION:\n\n
LOCATION:Hall D2
DTSTART:20250522T150000Z
DTEND:20250522T151500Z
END:VEVENT
BEGIN:VEVENT
UID:0c0015bc-65f7-4002-a8eb-2975f3ac0d9f
DTSTAMP:20250517T105800Z
SUMMARY:That's Unpossible – A full stack side project webapp (including a h
 igh-fidelity UI!) all in Kotlin
DESCRIPTION:Dan Kim\nIt's happened to all of us – an idea strikes for a sid
 e project and you want to build a quick webapp\, but then you remember the 
 state of webdev is still a bit of a mess in 2025. Sure you could pick up o
 ne of those "all-in-one" frameworks\, but they're so heavy and complicated
 . And even if that worked\, you'd still need something on the frontend so 
 you start looking at the the weird world of frontend frameworks or (gasp!) 
 writing raw HTML/CSS/JavaScript.\n\nBut it doesn't have to be that hard! I
 'm here to present a straightforward stack that gets you a full stack weba
 pp up and running fast\, using the one language we all know and love – Kot
 lin. Database manipulation\, async services\, and a high fidelity UI\, all 
 accessed and built with Kotlin. And yes\, you read that right – you can ha
 ve a great UI without having to write a single line of CSS\, HTML\, or Jav
 aScript.\n\nI'll show you a path for building a basic webapp on top of a s
 imple database (Postgres)\, performing basic CRUD operations on that datab
 ase (Kotlin Exposed)\, building business logic via async services (Kotlin 
 Coroutines)\, and constructing a high-fidelity UI to bring it all together 
 (Vaadin on Kotlin). By the end of the talk we'll have a fully functional w
 ebapp that is entirely built on Kotlin.\n\nAnd let's not forget\, we're no
 t building a by-the-book\, very serious webapp\, just something we're doin
 g on the side for fun. So forget about tests and forget about perfect arch
 itecture – let's have some fun\, learn a few things along the way\, and ge
 t this thing running!\n
LOCATION:Keynote room
DTSTART:20250522T151500Z
DTEND:20250522T160000Z
END:VEVENT
BEGIN:VEVENT
UID:189fc721-fab2-4cfb-af48-aad2a3ba8978
DTSTAMP:20250517T105800Z
SUMMARY:Build your own NES Emulator... with Kotlin
DESCRIPTION:Artur Skowroński\nLet Fools Dream\n\nFor those who have ever wa
 nted to recreate classic games\, this presentation covers my five-year jou
 rney to build a NES emulator in Kotlin. Starting from scratch in 2020 (you 
 can probably guess why)\, I’ll share the challenges posed by the architect
 ure of old hardware\, performance optimization (surprise\, surprise)\, and 
 the difficulties of emulating sound. I’ll also highlight which Kotlin feat
 ures shine (and why concurrency isn’t one of them). This high-level overvi
 ew will walk through each step of the process—from reading ROM formats to 
 where GPT can help\, though it won’t write the code for us just yet. We’ll 
 wrap up by launching Mario on the emulator (hopefully without a call from 
 Nintendo).\n
LOCATION:Hall D2
DTSTART:20250522T151500Z
DTEND:20250522T160000Z
END:VEVENT
BEGIN:VEVENT
UID:3fa1fdcd-9ed5-40b9-91ad-424dea3a2155
DTSTAMP:20250517T105800Z
SUMMARY:Making native SDKs Multiplatform at RevenueCat
DESCRIPTION:Joop Korteweg\nIn the rapidly evolving Kotlin Multiplatform eco
 system a critical gap has been the lack of a unified in-app purchase and s
 ubscription solution. Until now\, that is. The RevenueCat SDK for Kotlin M
 ultiplatform allows you to write your subscription code once and run it on 
 both Android and iOS. But how did we build it? We have existing native SDK
 s for both Android and iOS\, and did not want to rewrite all core logic. T
 his talk will cover the strategies\, pitfalls and learnings of our approac
 h to bringing native SDKs to Kotlin Multiplatform.\n\n\n
LOCATION:Auditorium 15
DTSTART:20250522T151500Z
DTEND:20250522T160000Z
END:VEVENT
BEGIN:VEVENT
UID:4f2afd23-3ae4-497e-95e2-8f9ada8d0992
DTSTAMP:20250517T105800Z
SUMMARY:Writing Your Third Kotlin Compiler Plugin
DESCRIPTION:Brian Norman\nCompiler plugins have become an integral part of 
 a developer’s experience with the Kotlin programming language. Areas like 
 UI development (Jetpack Compose)\, backend development (Spring Boot / Kotl
 in Serialization)\, and even testing (Power-Assert) all leverage compiler 
 plugins. But what is a Kotlin compiler plugin and what can it do? Let’s le
 arn by writing one!\n\nIn this talk\, we’ll discuss use cases for compiler 
 plugins and learn how they integrate with the Kotlin compiler. Then we’ll 
 explore everything related to how code is represented within the Kotlin co
 mpiler\, including how to inspect\, navigate\, transform\, and create thes
 e representations. When we’re done\, we’ll have written a compiler plugin 
 from scratch which can navigate the project code\, inspect annotations\, g
 enerate boilerplate\, and even report errors!\n
LOCATION:Auditorium 11+12
DTSTART:20250522T151500Z
DTEND:20250522T160000Z
END:VEVENT
BEGIN:VEVENT
UID:c2dd536b-b465-4b07-8c50-0a93cb5d6216
DTSTAMP:20250517T105800Z
SUMMARY:Party
DESCRIPTION:\n\n
LOCATION:Keynote room
DTSTART:20250522T160000Z
DTEND:20250522T200000Z
END:VEVENT
BEGIN:VEVENT
UID:878975d1-5146-4318-8404-9c33a9e74b9e
DTSTAMP:20250517T105800Z
SUMMARY:Registration
DESCRIPTION:\n\n
LOCATION:Keynote room
DTSTART:20250523T060000Z
DTEND:20250523T070000Z
END:VEVENT
BEGIN:VEVENT
UID:d8068388-be37-4968-b60b-ea33134976a5
DTSTAMP:20250517T105800Z
SUMMARY:Qualities of a Well-Functioning System
DESCRIPTION:Diana Montalion\n“We can't impose our will on a system. We can 
 listen to what the system tells us\, and discover how its properties and o
 ur values can work together to bring forth something much better than coul
 d ever be produced by our will alone.” -- Donella Meadows\n\nRelational co
 mplexity in software is constantly increasing. Data pipelines become a mes
 h. A monoliths becomes microservices. Synchronous database transactions be
 come event-driven architectures. Infrastructure becomes DevOps. Software i
 s becoming systems of software.\n\nAs technology professionals\, we are tr
 apped between the desire for control and the reality of systems. Increasin
 gly\, we act amidst ambiguity and uncertainty. We diversify and expand our 
 skillset.  Systems challenge our thinking patterns and core mental models. 
 \n\nFortunately\, there are some core principles for designing healthy sys
 tems. I don't mean (strictly) scalability or microservices. Three qualitie
 s are inherent in well-functioning systems: resilience\, self-organization 
 and hierarchy. \n\nEach of the qualities\, guaranteed\, differ from your c
 urrent definition. In this keynote\, we will explore them from a systems p
 oint of view.\n
LOCATION:Keynote room
DTSTART:20250523T070000Z
DTEND:20250523T080000Z
END:VEVENT
BEGIN:VEVENT
UID:130e46cf-ae9e-40ad-86d3-29d4806c8fdf
DTSTAMP:20250517T105800Z
SUMMARY:Break
DESCRIPTION:\n\n
LOCATION:Hall D2
DTSTART:20250523T080000Z
DTEND:20250523T081500Z
END:VEVENT
BEGIN:VEVENT
UID:cb9011a9-5bdd-453c-8e32-6d27337bff40
DTSTAMP:20250517T105800Z
SUMMARY:Dissecting Kotlin: Surveying the Latest Stable and Experimental
DESCRIPTION:Huyen Tue Dao\nAs Kotlin evolves\, not only do the features ava
 ilable to us as developers evolve\, but so does our understanding of what 
 idiomatic Kotlin is\, how we can best leverage new and old features and th
 e semantic and performance impacts of our implementation choices.\n\nIn th
 is session\, we will examine some of the features released over the last c
 ouple of years in Kotlin\, dive into their implementations\, explore where 
 we may need them and how we might use them\, and discuss how these feature
 s fit into the broader ideas and themes of Kotlin as a language.\n
LOCATION:Keynote room
DTSTART:20250523T081500Z
DTEND:20250523T090000Z
END:VEVENT
BEGIN:VEVENT
UID:d2ed3ea8-bbb9-4ada-b437-fe648d0f4064
DTSTAMP:20250517T105800Z
SUMMARY:Dependencies and Kotlin/Native
DESCRIPTION:Tadeas Kriz\nIn the JVM world\, the virtual machine and its cla
 ss loaders do the heavy lifting of linking and loading our applications wi
 th dependencies. When we use Kotlin Multiplatform to produce a native bina
 ry\, we lose the simplicity of JAR archives and .class files.\n\nIn this s
 ession\, we'll explore the differences between how JVM and native platform
 s handle dependencies. We'll look at some of the common blockers that nati
 ve platforms throw our way and possible workarounds. We'll also compare de
 pendency management tools used on Apple platforms like CocoaPods and Swift 
 Package Manager to see their strengths and weaknesses.\n\nLearn how native 
 dependencies interact\, how they are loaded and the unexpected complexitie
 s of the native world.\n
LOCATION:Hall D2
DTSTART:20250523T081500Z
DTEND:20250523T090000Z
END:VEVENT
BEGIN:VEVENT
UID:c2cebc5c-4a73-4cb1-85fc-24e4790bb0be
DTSTAMP:20250517T105800Z
SUMMARY:Collect Like a Pro: a deep dive on the Android lifecycle-aware coro
 utines APIs
DESCRIPTION:Manuel Vivo\nCollecting in a lifecycle-aware manner is essentia
 l for saving system resources. Since coroutines and flows are the recommen
 ded solution for asynchronous programming on Android\, there are APIs that 
 do most of the heavy-lifting work for you. Namely: repeatOnLifecycle\, flo
 wWithLifecycle\, and Compose’s collectAsStateWithLifecycle. When building 
 for Android\, you should include these libraries in your toolbox. But even 
 if you’re doing KMP\, you should keep this in mind.\n\nIn this talk\, we’l
 l see the different lifecycle-aware coroutines APIs\, the problems they so
 lve\, and which types of flows can make your system waste resources—Discla
 imer! A cold flow backed by a Channel or Flow operators with buffers might 
 be under investigation. Prepare to roll up your sleeves as we dissect thei
 r implementation details and learn low-level coroutines and Compose APIs. 
 But the journey doesn't end there! To help you think as a library develope
 r\, we’ll explore an API regret that never made it into stable to protect 
 developers from misusing the API and force them respect coroutines’ struct
 ure concurrency.\n\nBy the end of the talk\, you'll understand the importa
 nce of collecting in a lifecycle-aware manner\, use low-level coroutines A
 PIs to build your own APIs\, and design APIs that respect structure concur
 rency and protect your users from misuse.\n
LOCATION:Auditorium 15
DTSTART:20250523T081500Z
DTEND:20250523T090000Z
END:VEVENT
BEGIN:VEVENT
UID:c80abbd6-406a-4304-996a-62b266e64b64
DTSTAMP:20250517T105800Z
SUMMARY:Taming Asynchronous Beasts: Debugging and Performance Tuning in a C
 oroutine World
DESCRIPTION:Marcin Moskała\nAsynchronous code can be challenging to debug a
 nd optimize\, especially when dealing with complex coroutine hierarchies a
 nd flow transformations. This session reveals practical techniques for tra
 cking down elusive bugs\, optimizing performance\, and maintaining reliabi
 lity in coroutine-heavy applications.\n\nDrawing from real production expe
 rience\, we'll explore advanced debugging techniques\, common performance 
 pitfalls\, and practical solutions for the most challenging scenarios. You
 'll learn how to effectively use built-in tools\, recognize problematic pa
 tterns\, and implement proven optimization strategies.\n
LOCATION:Auditorium 11+12
DTSTART:20250523T081500Z
DTEND:20250523T090000Z
END:VEVENT
BEGIN:VEVENT
UID:5c145544-3bca-4717-9827-72fb93a0c551
DTSTAMP:20250517T105800Z
SUMMARY:Leveraging KMP for navigation in the McDonalds App.
DESCRIPTION:Cas van Luijtelaar\, Anthony Bassey\nKMP is well known as THE d
 omain layer framework for Android and iOS. But why not take it further! In 
 our pursuit to create the slimmest possible android and iOS apps\, where K
 MP handles everything except the UI. Our next step is taking control of th
 e navigation system. But Handling android and iOS navigation from a cross 
 platform environment is not easy. In this talk we tell you how it is done\
 , what challenges we overcame and where we are now.!\n
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250523T081500Z
DTEND:20250523T083000Z
END:VEVENT
BEGIN:VEVENT
UID:9db558a3-6cd2-486f-af2c-9636c414640c
DTSTAMP:20250517T105800Z
SUMMARY:Kotlin Multiplatform's Cross-Platform Brilliance at Norway's 377-Ye
 ar-Old National Postal Service
DESCRIPTION:Anshika Koul\nDo you have a complex business rule-set problem? 
 You know the kind where you have business rules (logic) spread across mult
 iple platforms\, systems and applications? Some of them might even be alte
 r egos of the same rule hiding in different apps. You never know which one 
 might turn up where\, there is no single source of truth\, solving errors 
 takes hours of debugging\, and making changes requires (oftentimes) painfu
 l coordination across teams and applications (ugh).\n\nWe faced this exact 
 challenge at Posten Bring As - Norwegian National Postal Service founded w
 ay back in 1647 - a 377-year-old institution with software spanning more g
 enerations than most families! Our business logic was scattered across mul
 tiple platforms\, some almost as old as the company itself (well\, not qui
 te\, but it sure felt like it).\n\nIn my session I’m spilling the tea. We 
 discover how the team at century-old Norwegian postal services giant tackl
 ed modern challenges with cutting-edge technology.\n\nWe’ll look through r
 eal-world use cases at Posten Bring. We’ll reflect on what we did - key le
 arnings\, what went well and most importantly - what didn’t quite go as pl
 anned. We’ll also look through some resources to get started. We'll learn 
 how KMP provides a unified framework for code sharing and execution across 
 various platforms to solve the challenge of different codebases targeting 
 different runtimes.\n\nThis talk is for you if troublesome and unruly busi
 ness logic keeps you up at night and you want that to end NOW. It is also 
 for you if you like to hear a good story.\n
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250523T084500Z
DTEND:20250523T090000Z
END:VEVENT
BEGIN:VEVENT
UID:5c9de165-8603-427d-aeeb-8434fa7b071b
DTSTAMP:20250517T105800Z
SUMMARY:Break
DESCRIPTION:\n\n
LOCATION:Hall D2
DTSTART:20250523T090000Z
DTEND:20250523T091500Z
END:VEVENT
BEGIN:VEVENT
UID:7f4b8ddf-38f0-42b7-be2c-ebd88b67fad4
DTSTAMP:20250517T105800Z
SUMMARY:Designing Kotlin Beyond Type-Inference
DESCRIPTION:Ross Tate\nKotlin programmers regularly elide uninformative typ
 es from their programs. This makes Kotlin programs faster to develop\, eas
 ier to read\, and less effort to maintain. It also means the Kotlin langua
 ge needs to be designed so that its compilers can reliably accept programs 
 without these typing hints. We think of this as type-inference\, but—by de
 finition—type-inference means determining these missing types can be fille
 d in such that the program type-checks.\n\nBut what if we can determine a 
 program is safe without determining these missing types? What if we can do 
 so even when it such types do not exist? And what if we can do so more eff
 iciently than any type-inference algorithm can?\nIn researching Kotlin's n
 ext-generation typing algorithms\, we have discovered we can efficiently e
 xceed the capabilities of type-inference and type-checking. We have develo
 ped a type-"outference" algorithm that efficiently decides "type-consisten
 cy"\, which all type-inferable/checkable programs satisfy (but not vice ve
 rsa).\n\nWhile type-inference still has its place in user feedback and com
 pilation\, type-consistency is a much more flexible property\, and type-ou
 tference offers clear guidelines on how to design features for efficient v
 alidation. In this talk\, after introducing these concepts\, we will provi
 de a behind-the-scenes look into how they guide the design of various expe
 cted and hypothetical features for Kotlin\, such as union types for errors
 \, conditional inheritance for type-safe equality with value types\, and i
 mplicit polymorphism for non-escaping references.\n
LOCATION:Keynote room
DTSTART:20250523T091500Z
DTEND:20250523T100000Z
END:VEVENT
BEGIN:VEVENT
UID:d6522ede-ae43-4308-b81c-7d80742e073c
DTSTAMP:20250517T105800Z
SUMMARY:Build Websites in Kotlin & Compose HTML with Kobweb
DESCRIPTION:David Herman\nWant to build a website using Kotlin? Kobweb is a 
 modern web framework that makes web development enjoyable by leveraging Co
 mpose HTML and drawing inspiration from Jetpack Compose.\nWith Kobweb\, yo
 u can create a portfolio site\, product landing page\, personal blog\, and 
 more—all while benefiting from Kotlin’s concise\, expressive\, and type-sa
 fe syntax.\nIn this live coding session\, we’ll introduce the fundamentals 
 of Kobweb and Compose HTML\, walking you through the process of building a 
 functional website using Kotlin/JS. By the end\, you’ll see just how easy 
 it is to develop and export a traditional website—embracing HTML\, CSS\, a
 nd the DOM through a Kotlin-first\, Compose-powered approach.\nThis talk i
 s designed for beginners\, and no prior web development experience is requ
 ired.\nIf you’re curious about web development and want to explore a Kotli
 n-powered\, type-safe\, Compose API for building modern websites\, this se
 ssion is the perfect place to start!\n
LOCATION:Hall D2
DTSTART:20250523T091500Z
DTEND:20250523T100000Z
END:VEVENT
BEGIN:VEVENT
UID:caacfc35-4fc4-409b-81d9-08d1af7efd8a
DTSTAMP:20250517T105800Z
SUMMARY:Duolingo + KMP: A Case Study in Developer Productivity
DESCRIPTION:John Rodriguez\, Johnny Ye\nDuolingo ships weekly on iOS and An
 droid to 40M+ Daily Active Users across 176 countries. Shipping fast is im
 portant to us and Kotlin Multiplatform is starting to play a huge role in 
 how we accomplish this!\n\nIn this talk\, we’ll:\n- Discuss how we shipped 
 Video Call\, Math\, Adventures and more across Android\, iOS\, and Web\n- 
 Propose what potential upcoming projects could benefit from KMP and the ru
 bric we use\n- Share the challenges faced and lessons learned along the wa
 y\n\n…and more!\n
LOCATION:Auditorium 15
DTSTART:20250523T091500Z
DTEND:20250523T100000Z
END:VEVENT
BEGIN:VEVENT
UID:ffe73f53-03e3-498e-aee6-768e0afc1707
DTSTAMP:20250517T105800Z
SUMMARY:Exposed 1.0: Stable\, Scalable\, and Looking Forward
DESCRIPTION:Chantal Loncle\nExposed is a database access library that provi
 des a type-safe SQL DSL\, a powerful ORM\, and reliable database interacti
 ons as a seamless extension of any Kotlin developer’s code.\n\nThe team be
 hind the library has been working towards its first stable version and rec
 ently published a beta release. This talk aims to provide a detailed insig
 ht into what stability will mean for the library\, as well as to highlight 
 the enhanced features that have been implemented over time.\n\nWe’ll also 
 cover the introduction of support for non-blocking database operations usi
 ng R2DBC with Kotlin coroutines\, as well as the challenges encountered du
 ring its development.\n\nLastly\, to share a look into the future of Expos
 ed\, we’ll touch on planned features for later stable versions\, like inte
 grated support for database migrations\, which address the library’s posit
 ion as a database access solution in Kotlin Multiplatform development.\n
LOCATION:Auditorium 11+12
DTSTART:20250523T091500Z
DTEND:20250523T100000Z
END:VEVENT
BEGIN:VEVENT
UID:339f49a8-1e0e-4045-a84b-82b861f6b26f
DTSTAMP:20250517T105800Z
SUMMARY:Get Started With Kotlin Multiplatform for Shared Business Logic 
DESCRIPTION:Matt Dyor\, Tomáš Mlynarič\, Dustin Lam\nKotlin Multiplatform (
 KMP) allows you to write code once and share it across multiple target pla
 tforms\, such as Android\, iOS\, web\, and JVM. By leveraging KMP\, you ca
 n minimize code duplication\, maintain consistency\, and significantly red
 uce development time and effort. In this Codelab\, we will walk developers 
 through taking a standalone Android app and a standalone iOS app\, extract
 ing some business logic to a KMP Shared Module\, and leveraging this share
 d business logic from both Android and iOS.\n
LOCATION:Room #173
DTSTART:20250523T091500Z
DTEND:20250523T100000Z
END:VEVENT
BEGIN:VEVENT
UID:0a7cbe85-faaa-4c08-8f0a-cc402fb771ee
DTSTAMP:20250517T105800Z
SUMMARY:Getting your Gradle setup right\, at the right time
DESCRIPTION:Marcin Mycek\nLet’s address the elephant in the room - setting 
 up a Gradle project in a proper scalable way is hard. What’s even more cha
 llenging is doing this once the project is already scaled and running. Wha
 t’s nearly impossible is learning what “a good scalable setup” actually me
 ans on your own.\n\nSo what does a good scalable setup mean? Are the best 
 practices universal for all types of project? Are there Kotlin specific be
 st practices? When and how should you introduce them? Let’s dive in!\n
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250523T091500Z
DTEND:20250523T093000Z
END:VEVENT
BEGIN:VEVENT
UID:5ef3e863-9e30-4efa-bd53-51dfc866d84a
DTSTAMP:20250517T105800Z
SUMMARY:Build your Kotlin and Android apps with Buck2
DESCRIPTION:Sergei Rybalkin\nWe're happy to announce that Buck2\, a large-s
 cale open source build system from Meta\, now supports Kotlin and Android. 
 Buck2  builds all Android applications at Meta with a focus on fast increm
 ental iterations with code. \nWe will start building an app from basics an
 d then learn some advance buck2 capabilities\, like Remote Execution\, Sou
 rce-only ABI\, and Build Tools API integrations  \n
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250523T094500Z
DTEND:20250523T100000Z
END:VEVENT
BEGIN:VEVENT
UID:1ea0b780-b5d7-4a57-95b9-1c2042e958af
DTSTAMP:20250517T105800Z
SUMMARY:Lunch
DESCRIPTION:\n\n
LOCATION:Keynote room
DTSTART:20250523T100000Z
DTEND:20250523T110000Z
END:VEVENT
BEGIN:VEVENT
UID:9674a07b-578d-4409-bb77-5e1be3f04572
DTSTAMP:20250517T105800Z
SUMMARY:The Easing Symphony: AnimationSpec in detail!
DESCRIPTION:Nicole Terc\nLet's take a deeper look at AnimationSpec and lear
 n how to use it to customize animations! With music!\n\nUsing Compose Mult
 iplatform\, we'll go over the different AnimationSpec types we have\, and 
 which personalization options they offer. We'll cover topics from how to u
 se AnimationSpec\, to how to create your own easing curves. And since anim
 ations are meant to be fun\, we'll do all of this while creating a music v
 isualizer!\n\nAfter this talk\, you'll have a better understanding on how 
 powerful animationSpec is\, and how you can use it to create complex and f
 un animations.\n\nKeep it fun\, keep it animated! :)\n\n
LOCATION:Keynote room
DTSTART:20250523T110000Z
DTEND:20250523T114500Z
END:VEVENT
BEGIN:VEVENT
UID:9bc441f6-ce82-44d2-9be5-ad3acdf23a80
DTSTAMP:20250517T105800Z
SUMMARY:Project Sparkles: How Compose for Desktop is changing Android Studi
 o and IntelliJ
DESCRIPTION:Chris Sinco\, Sebastiano Poggi\nMany of us use Android Studio a
 nd IntelliJ every day\, and appreciate how its rich feature set makes our 
 job easier. Most people know that both products are built on the IntelliJ 
 Platform\, the same that underpins the popular IDEs from JetBrains\, which 
 has seen lasting success for over 20 years. It’s a solid\, expansive\, and 
 by far the best foundation on which we could stand on to deliver developer 
 goodies.\n\nHowever\, some parts of the IntelliJ Platform show the signs o
 f time\; in particular its UI framework\, Swing\, is proving the most limi
 ting\, having been around for almost 30 years. Don’t get us wrong — it wor
 ks\, and the IDEs themselves prove you can ship complex UIs by using Swing 
 on the IntelliJ Platform. But as we looked at how nice it is to develop UI
 s on desktop by using Compose for Desktop\, we thought: why don’t we do th
 e same?\n\nEnter Project Sparkles\, which aims at gradually introducing ne
 w high-quality\, polished UI surfaces in Android Studio and IntelliJ\, dev
 eloped in Compose for Desktop\, with all the bells and whistles you can ex
 pect from a top-tier interface. In this talk\, we’ll cover how Project Spa
 rkles is impacting the development of Android Studio and IntelliJ\, addres
 sing long-standing user feedback\, and how Google and JetBrains are workin
 g together to build a framework to make your favorite IDE even better and 
 easier to understand.\n\nWe’ll demonstrate a few examples of features alre
 ady shipping that are powered by Project Sparkles\, explain what our goals 
 and ambitions are\, and even show some sneak peeks of things you may see i
 n a future IDE version. We will also cover a roadmap on when developers ca
 n expect to use Compose for Desktop as a supported UI framework for Intell
 iJ plugin development!\n\nUI enthusiasts\, assemble!\n
LOCATION:Hall D2
DTSTART:20250523T110000Z
DTEND:20250523T114500Z
END:VEVENT
BEGIN:VEVENT
UID:d14e88f0-b11e-466f-8617-5c857fcb1f44
DTSTAMP:20250517T105800Z
SUMMARY:Don't forget your values!
DESCRIPTION:Leonid Startsev\nNo one likes to be forgotten\, and the results 
 of most non-unit function calls are no exception here. 'Check return value
 ' or 'ignored call result' may sound familiar — those are popular Java lin
 ters' rules. However\, in our view\, this inspection is so crucial that it 
 deserves its place among compiler diagnostics. In this talk\, we'll explor
 e the challenges and complexities down the road of making a brand-new lang
 uage feature. And\, of course\, how you can use it for your benefit.\n
LOCATION:Auditorium 15
DTSTART:20250523T110000Z
DTEND:20250523T114500Z
END:VEVENT
BEGIN:VEVENT
UID:62729ff1-94c8-4936-91c0-c7318c31e137
DTSTAMP:20250517T105800Z
SUMMARY:Event-Driven Analytics: Building Real-Time Dashboards with Apache F
 link and Ktor
DESCRIPTION:Viktor Gamov\nThe ability to process continuous data streams an
 d deliver real-time insights has become crucial in modern application arch
 itectures. As a developer you are probably very comfortable with RESTful s
 ervices\, and shifting to event-driven thinking opens new possibilities fo
 r responsiveness and scalability (as well as new challenges and growing pa
 ints).\n\nThis talk will explore building real-time analytics dashboards b
 y combining Apache Flink's powerful stream processing capabilities with Kt
 or's flexible web framework. We'll journey through the mental model transf
 ormation from request/response patterns to continuous event flows\, demons
 trating how this shift enables truly reactive applications.\n\nYou'll lear
 n:\n* How Apache Flink handles stateful stream processing\, offering advan
 tages for complex analytics use cases\n* Leveraging Flink's Table API and 
 SQL capabilities to express complex transformations with familiar syntax\n
 * Implementing real-time dashboards with Ktor and other Kotlin libraries\n
 \nBy the end of this session\, you'll understand how to bridge the gap bet
 ween powerful backend stream processing and engaging user interfaces\, all 
 while staying in the Kotlin ecosystem. Regardless\, if you're a seasoned d
 ata streaming engineer or just beginning to explore beyond REST\, you'll b
 ring home practical techniques for delivering real-time insights to your u
 sers.\n\n
LOCATION:Auditorium 11+12
DTSTART:20250523T110000Z
DTEND:20250523T114500Z
END:VEVENT
BEGIN:VEVENT
UID:be15184c-91dd-411d-ba33-b26d61d9567f
DTSTAMP:20250517T105800Z
SUMMARY:JSpecify: Java Nullness Annotations and Kotlin
DESCRIPTION:David Baker\nQ: Why should I care about Java nullness annotatio
 ns?\n\nA: Because they’ll make Kotlin code that uses Java libraries safer\
 , and because they’ll make it easier to convert Java code to Kotlin.\n\nJS
 pecify released a set of nullness annotations for Java in July. Unlike all 
 the other nullness annotations for Java\, JSpecify’s are defined by tool-a
 gnostic specification. That means that all the Java nullness analyzers wil
 l agree on what they mean\, and the Kotlin compiler will too. And that mea
 ns that your Kotlin code will be able to use null-safe types instead of pl
 atform types when it depends on well-annotated Java libraries.\n\nIn this 
 talk\, we’ll explain how Java nullness annotations will help you\, and how 
 JSpecify’s work. We’ll also tease upcoming projects that aren’t about null
 ness but might help your Kotlin code too.\n\n\n
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250523T113000Z
DTEND:20250523T114500Z
END:VEVENT
BEGIN:VEVENT
UID:d462da66-95cf-4f4b-b20a-772b9bf4c9c0
DTSTAMP:20250517T105800Z
SUMMARY:Break
DESCRIPTION:\n\n
LOCATION:Hall D2
DTSTART:20250523T114500Z
DTEND:20250523T120000Z
END:VEVENT
BEGIN:VEVENT
UID:be04bcd8-d065-4108-9764-cbad3a9db60a
DTSTAMP:20250517T105800Z
SUMMARY:Large Scale Changes with AI - Migrating millions of lines of Java t
 o Kotlin at Uber
DESCRIPTION:Ty Smith\nUber has one of the largest Android codebases in the 
 world\, and while Kotlin is first class\, millions of lines of Java remain 
 to be converted. Come along for the ride as we walk you through the toolin
 g and processes we've built and integrated while working with the communit
 y to safely mass migrate our production Java code to Kotlin code\, which w
 e're now utilizing to scale out more migrations to other technologies. \n\
 nWe'll cover the motivations for tackling a migration of this magnitude\, 
 the challenges for LSCs (Large Scale Changes) in huge monorepos and organi
 zations\, generating migration data sets to power cutting-edge AI tools\, 
 using agentic systems and pipelines to deterministically tackle the migrat
 ions at scale\, the risks and mitigations for migrating this much producti
 on code\, how to manage thousands of PRs\, and where we'll be taking this 
 technology next.\n
LOCATION:Keynote room
DTSTART:20250523T120000Z
DTEND:20250523T124500Z
END:VEVENT
BEGIN:VEVENT
UID:8c620b92-65d1-4a94-82cb-9c5cd135e398
DTSTAMP:20250517T105800Z
SUMMARY:Data Analysis for finance in Kotlin
DESCRIPTION:Enrique Lopez Manas\nData representation and analysis in financ
 e has a large literature already present in R and Python\, two of the most 
 common suspects. They have the community\, tooling and a long tradition. B
 ut what about Kotlin with some of the libraries in the family\, like DataF
 rame and Kandy? Kotlin\, traditionally known for its focus in mobile and b
 ackend development\, has emerged as a strong contender in the data science 
 space. This session explores the potential of Kotlin for financial data an
 alysis\, focusing on the use of the DataFrame library and the Kandy visual
 ization framework.\n\nWe will demonstrate how Kotlin provides a rich\, sta
 tically typed language environment\, ensuring safety\, conciseness\, and p
 erformance in handling large datasets commonly encountered in financial co
 ntexts. DataFrame provides the capacity to manipulate structured data\, wh
 ile Kandy enables high-quality visualizations.\n\nThis presentation will a
 lso provide a comparative analysis between Kotlin\, R\, and Python. We wil
 l examine common use cases such as dividend history\, stock valuation base
 d on price and yields. While R and Python have established ecosystems for 
 data science\, Kotlin's performance\, tooling\, and modern features offer 
 new possibilities for finance professionals looking for a more efficient a
 lternative.\n\n\n\n
LOCATION:Hall D2
DTSTART:20250523T120000Z
DTEND:20250523T124500Z
END:VEVENT
BEGIN:VEVENT
UID:4211ffbd-03bb-4f69-8d5a-e559b45371d2
DTSTAMP:20250517T105800Z
SUMMARY:Simplifying Full-Stack Kotlin: A Fresh Take with HTMX and Ktor
DESCRIPTION:Anders Sveen\nBeing a full-stack developer is valuable in today
 's tech landscape - you can own features end-to-end\, make holistic archit
 ectural decisions\, and adapt quickly to changing project needs. This vers
 atility is especially crucial in smaller teams and startups.\n\nHowever\, 
 the role can be intimidating. The list of technologies one is expected to 
 master is extensive: Kubernetes\, Postgres\, Kotlin\, Gradle\, Ktor\, Reac
 t\, Remix\, Node.js\, and NPM. Even the most experienced developers strugg
 le to keep up with it all.\n\nPerhaps we should step back and examine this 
 problem from a fresh perspective. Do we truly need all these technologies? 
 After all\, HTML and CSS remain relatively stable\, unlike frameworks that 
 seem to change every six months.\n\nMany applications don't require the co
 mplexity of a modern Javascript Single Page Application (SPA). Everything 
 eventually renders to HTML anyway! Using technologies like HTML\, CSS\, HT
 MX\, AlpineJS\, and Unpoly\, you can achieve 98% of SPA functionality with 
 minimal frontend code and less complexity. These tools enhance and build u
 pon HTML and CSS rather than trying to replace them.\n\nIn this presentati
 on\, I'll show how HTMX and kotlinx.html combine beautifully with Ktor to 
 create modern\, interactive web applications. You'll see how these technol
 ogies work together seamlessly - Ktor's powerful backend capabilities\, ko
 tlinx.html's type-safe HTML generation\, and HTMX's elegant approach to fr
 ontend interactions. This stack offers a refreshingly simple way to build 
 dynamic web applications while keeping your codebase clean and maintainabl
 e.\n
LOCATION:Auditorium 15
DTSTART:20250523T120000Z
DTEND:20250523T124500Z
END:VEVENT
BEGIN:VEVENT
UID:6200ed36-45ea-447b-bb10-d2ef0d96c5c4
DTSTAMP:20250517T105800Z
SUMMARY:Swift Export - a peek under the hood
DESCRIPTION:Artem Olkov\nOne of the most anticipated features in Kotlin Mul
 tiplatform—Swift Export! It’s been a year since we announced its developme
 nt. Join us as we explore the challenges the team has faced\, why it’s tak
 ing so long\, and\, most importantly\, how you can preview Swift Export in 
 your own projects.\n
LOCATION:Auditorium 11+12
DTSTART:20250523T120000Z
DTEND:20250523T124500Z
END:VEVENT
BEGIN:VEVENT
UID:28f70f42-18e5-455a-a8ed-c390e04ff90d
DTSTAMP:20250517T105800Z
SUMMARY:Building immersive VR apps for Meta Quest with Jetpack Compose
DESCRIPTION:Samuel Gebre Yohannes\nVirtual Reality (VR) is rapidly becoming 
 the future of interactions and immersive experiences\, transforming how we 
 engage with apps and content. As VR technology continues to evolve and bec
 ome mainstream\, devices like the Meta Quest offer powerful opportunities 
 for creating highly immersive and interactive experiences. \n\nIn this tal
 k\, we will explore how to leverage Jetpack Compose to build VR applicatio
 ns for the Meta Quest.\n\nWe will dive into the unique challenges of VR de
 velopment\, such as spatial UI design\, handling new input methods for sea
 mless experiences. A key focus of this session will be on converting exist
 ing Android apps into immersive VR apps\, demonstrating how to adapt tradi
 tional 2D UIs into spatially aware interfaces suitable for VR environments
 . \n\nAs a bonus\, we will take a brief tour of how to integrate 3D object
 s and scenes seamlessly in the VR experiences. You will learn how to combi
 ne both UI elements and 3D content further enhancing immersion and interac
 tion.\n\nBy the end of the session\, you will be equipped with practical k
 nowledge you can use to create or adapt your existing apps into VR for the 
 Meta Quest with Jetpack Compose along with practical tips and best practic
 es for immersive experiences.\n
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250523T120000Z
DTEND:20250523T121500Z
END:VEVENT
BEGIN:VEVENT
UID:f912dfc8-5572-404b-bca5-bec53f560dfd
DTSTAMP:20250517T105800Z
SUMMARY:Migrating Room to Room KMP
DESCRIPTION:Matt Dyor\, Tomáš Mlynarič\, Dustin Lam\nThis Codelab builds of
 f the “Get Started With Kotlin Multiplatform for Shared Business Logic” Co
 delab\, and allows the developer to migrate a Room database to a Room KMP 
 database within the KMP Shared Module\, and then leverage this Room KMP da
 tabase from the Android and iOS app.\n
LOCATION:Room #173
DTSTART:20250523T120000Z
DTEND:20250523T124500Z
END:VEVENT
BEGIN:VEVENT
UID:b2e20049-4138-4382-b275-4018cf178d94
DTSTAMP:20250517T105800Z
SUMMARY:Bringing Maps to Compose Multiplatform with MapLibre Compose
DESCRIPTION:Sargun Vohra\nWorking with maps in a Kotlin Multiplatform app c
 an be tricky—different platform APIs\, inconsistent features\, and duplica
 ted code add unwelcome complexity. MapLibre Compose simplifies this proces
 s by providing a consistent\, declarative API built on top of MapLibre and 
 Compose Multiplatform.\n\nWe’ll use practical examples to explore the desi
 gn and implementation of MapLibre Compose\, how it leverages the Compose r
 untime to declaratively express the powerful mapping capabilities of MapLi
 bre\, and how it uses Kotlin Multiplatform to help developers write map-ba
 sed UI code once and run it seamlessly on Android\, iOS\, and beyond witho
 ut code duplication.\n\nFor developers working with Compose Multiplatform\
 , this talk will showcase how MapLibre Compose can help add mapping featur
 es to your apps. You'll gain a clear understanding of its capabilities\, i
 ts design principles\, and how it can help you create richer user experien
 ces across platforms.\n
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250523T123000Z
DTEND:20250523T124500Z
END:VEVENT
BEGIN:VEVENT
UID:5756deda-81ff-47c7-ac05-567e5db6bf20
DTSTAMP:20250517T105800Z
SUMMARY:Coffee Break
DESCRIPTION:\n\n
LOCATION:Keynote room
DTSTART:20250523T124500Z
DTEND:20250523T131500Z
END:VEVENT
BEGIN:VEVENT
UID:9343f83e-a069-4713-a039-4b77e091c721
DTSTAMP:20250517T105800Z
SUMMARY:Kotlin and Compose Multiplatform patterns for iOS interop
DESCRIPTION:John O'Reilly\nKotlin Multiplatform (KMP) and\, more recently\, 
 Compose Multiplatform (CMP) have matured significantly in recent years and 
 are gaining increasingly widespread adoption. \n\nHowever iOS integration 
 continues to present its own set of challenges which also vary depending o
 n the amount of UI code that's being shared. In this talk I'll use real wo
 rld examples to outline a variety of different UI and non-UI patterns I've 
 applied over the last 5 years when using KMP and CMP on iOS.  \n\n
LOCATION:Keynote room
DTSTART:20250523T131500Z
DTEND:20250523T140000Z
END:VEVENT
BEGIN:VEVENT
UID:ad11a0f9-a4e3-4d10-a5b7-3570428a6340
DTSTAMP:20250517T105800Z
SUMMARY:Fast inner dev loops for Kotlin Gradle builds
DESCRIPTION:Alex Semin\, Rodrigo Oliveira\nWhether it's a Kotlin library or 
 an Android app\, developers want their inner loop to be fast: code\, compi
 le\, test\, repeat. With Gradle\, there are no extra steps—you run the tes
 t\, and it takes care of the rest\, whether you’re tweaking a single line 
 of code or upgrading all your dependencies.\n\nIn this talk\, learn how to 
 tame the inner dev loop. We'll explore the recent evolution of Gradle's pe
 rformance features\, such as Configuration Cache and Isolated Projects\, a
 nd how to organize your Kotlin build to make the most of it.\n
LOCATION:Hall D2
DTSTART:20250523T131500Z
DTEND:20250523T140000Z
END:VEVENT
BEGIN:VEVENT
UID:9edbaf5b-717b-4567-83f2-63cecbaaa665
DTSTAMP:20250517T105800Z
SUMMARY:Lessons learned decoupling Architecture Components from platform sp
 ecific code
DESCRIPTION:Jeremy Woods\, Marcello Galhardo\nFollow along as the Android t
 eam walks you through the process of taking some of their architectural bu
 ilding blocks\, such as SavedState and System Back\, through the process o
 f decoupling them from platform specific implementations and how they appr
 oached the task of writing good common APIs in preparation for future inte
 grations with other platforms while maintaining the quality achieved in an
 droid.\n
LOCATION:Auditorium 15
DTSTART:20250523T131500Z
DTEND:20250523T140000Z
END:VEVENT
BEGIN:VEVENT
UID:c8f40099-46a8-439b-9409-4088e87a6fcf
DTSTAMP:20250517T105800Z
SUMMARY:Kotlin Clean Architecture for Serverless: Business Logic You Can Ta
 ke Anywhere
DESCRIPTION:Elena van Engelen\nAs cloud platforms continue to evolve\, serv
 erless functions provide powerful ways to build and scale applications wit
 h reduced infrastructure concerns. However\, cloud-specific requirements o
 ften make it challenging to keep business logic portable across different 
 cloud providers. This session presents a variant of clean architecture des
 igned to separate core business logic from cloud-specific code\, leveragin
 g Kotlin’s capabilities along with Spring Cloud Function and headless Grad
 le modules.\n\nIn this talk\, I’ll demonstrate how to structure a Kotlin a
 pplication for serverless using a simplified clean architecture approach. 
 This structure maintains cloud-agnostic business logic while allowing plat
 form-specific implementations for integration functionality like storage. 
 By isolating business logic in headless modules\, developers can deploy th
 e same core code across multiple cloud function providers such as AWS Lamb
 da and Azure Functions.\n\nThrough live coding\, we’ll explore practical t
 echniques for building and deploying serverless applications with cloud-ag
 nostic business logic. \nThis session is aimed at advanced Kotlin develope
 rs interested in serverless architecture\, cloud flexibility\, and clean a
 rchitecture principles. \n
LOCATION:Auditorium 11+12
DTSTART:20250523T131500Z
DTEND:20250523T140000Z
END:VEVENT
BEGIN:VEVENT
UID:d8b71fe7-24fb-4519-81c0-11b329821ac0
DTSTAMP:20250517T105800Z
SUMMARY:Swift concurrency for curious Kotliners
DESCRIPTION:Nikita Bobko\nSwift is an open-source programming language by A
 pple\, primarily used for building apps within the Apple ecosystem.\n\nA n
 ew major version of Swift - Swift 6 was released at the end of the previou
 s year. The standout feature of the release is strict concurrency mode\, w
 hich aims to prevent data races.\n\nIn this talk\, we will take a quick lo
 ok at Swift actors and `async`/`await` features\, which share a lot of sim
 ilarities with Kotlin Coroutines. We will explore what does Swift 6 do to 
 prevent data races\, and\, perhaps\, discuss if we can expect a similar fe
 ature in future versions of Kotlin.\n\nThe talk assumes that the attendees 
 are familiar with Kotlin Coroutines.\n
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250523T131500Z
DTEND:20250523T133000Z
END:VEVENT
BEGIN:VEVENT
UID:41cdbe12-41e2-4e57-965d-c7ef9dda88d2
DTSTAMP:20250517T105800Z
SUMMARY:Klibs.io — the dream of creating a Kotlin Package Index
DESCRIPTION:Ignat Beresnev\nSo you want to build a Kotlin package index.. W
 hat is a package anyway\, is it the same as an artifact? What makes a proj
 ect a library then? And why is it an index and not a repository?\n\nThis t
 alk is a story and a retrospective of developing [https://klibs.io](https:
 //klibs.io)\n\nI will share the insights I learned after processing 250\,0
 00 KMP artifacts and 1\,500 Kotlin projects. We'll discuss our library sha
 ring ecosystem and its limitations\, and I will give tips to library autho
 rs on how to stand out and make their libraries more discoverable\n
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250523T134500Z
DTEND:20250523T140000Z
END:VEVENT
BEGIN:VEVENT
UID:9c6fe59b-d289-4ba5-8b54-32aa7f29b45c
DTSTAMP:20250517T105800Z
SUMMARY:Break
DESCRIPTION:\n\n
LOCATION:Hall D2
DTSTART:20250523T140000Z
DTEND:20250523T141500Z
END:VEVENT
BEGIN:VEVENT
UID:556bf45e-a5b5-452b-80fb-aaddfabc2d56
DTSTAMP:20250517T105800Z
SUMMARY:47 Refactorings in 45 minutes
DESCRIPTION:Duncan McGregor\, Dmitry Kandalov\nIntelliJ IDEA's refactoring 
 support is second to none\, but the Refactor This menu only has 9 items. W
 here is all the power hiding?\n\nJoin Dmitry and Duncan on a whistle-stop 
 live-coding tour of our favourite IDE's invisible refactorings. Marvel as 
 Alt-Enter reveals refactorings before your very eyes. Gasp as they change 
 depending on context. Wonder how completely different they can be simply b
 y moving the cursor one character to the left or right\, and feel the tens
 ion mount as they approach the deadline. Can they really show more than on
 e refactoring a minute?\n
LOCATION:Keynote room
DTSTART:20250523T141500Z
DTEND:20250523T150000Z
END:VEVENT
BEGIN:VEVENT
UID:1cb659c2-3074-4898-95ca-8169e48061cc
DTSTAMP:20250517T105800Z
SUMMARY:From Data to Insights: Building a Bluesky Bot powered by AI
DESCRIPTION:Raphael De Lio\n\nA common challenge developers face when worki
 ng with data streams is collecting and analyzing this data as fast as poss
 ible to uncover meaningful insights or take fast actions.\n\nIn this talk\
 , I’ll show you how I tackled this by building a Bluesky bot that turns ra
 w data collected from the Bluesky’s stream of posts into actionable insigh
 ts.\n\nIn this talk you will learn how to: \n- Collect data into streams\n
 - Use probabilistic data structures such as Bloom Filters\, TopK and Count
 -Min Sketch\n- Use Retrieval-Augmented Generation for adding your own know
 ledge base into your LLM queries\n- Use semantic caching for reducing LLM 
 calls\n- Use vector siilarity search to classify the data\n- Efficiently q
 uerythe data\n\nWhether you’re curious about GenAI\, interested in data-dr
 iven analytics\, or simply love experimenting with creative tech solutions
 \, this session will inspire you with practical techniques and real-world 
 applications.\n
LOCATION:Hall D2
DTSTART:20250523T141500Z
DTEND:20250523T150000Z
END:VEVENT
BEGIN:VEVENT
UID:d3082119-d26f-43fc-bc5b-c215a26ea1ed
DTSTAMP:20250517T105800Z
SUMMARY:Stream Processing Rocks! Stream processing in Kotlin from KStreams 
 to RocksDB
DESCRIPTION:Hunter Sherman\, Geoff Gerrietts\nEver wondered how to efficien
 tly process high-velocity data streams using Kafka and Kotlin? Join two en
 gineers from SolarWinds—experts who oversee billions of observability reco
 rds daily—as they share their insights.\n\nWe'll kick off by covering what 
 stream processing is and when you should use it. Dive into practical Kotli
 n solutions through a simple case study on stripping PII from incoming use
 r records using Kafka Streams. We’ll build upon this example by utilizing 
 Kafka's compacting topics feature to distribute the user data and store it 
 locally for rapid API responses. Finally\, we’ll 'scale up' by moving that 
 data out of memory and into RocksDB\, demonstrating how to handle larger d
 atasets effectively. By the end of this talk\, you'll be equipped to build 
 your first KStream or scale up the ones you’re already building.\n
LOCATION:Auditorium 15
DTSTART:20250523T141500Z
DTEND:20250523T150000Z
END:VEVENT
BEGIN:VEVENT
UID:258d9986-8f86-4efd-83b3-79fe562d1e8b
DTSTAMP:20250517T105800Z
SUMMARY:Scale your Kotlin Multiplatform projects using dependency injection
DESCRIPTION:Ralf Wondratschek\nKotlin-inject-anvil is a dependency injectio
 n framework for Kotlin Multiplatform. It verifies the dependency graph at 
 compile time and generates the necessary code to instantiate the object gr
 aph at runtime. The framework aims to provide a safe dependency injection 
 solution without the boilerplate and configurations common in many other l
 ibraries.\n\nThis talk will introduce kotlin-inject-anvil\, discussing its 
 benefits and how it scales in large\, modularized codebases. We'll explore 
 how to leverage the strengths of each host platform while maximizing commo
 n Kotlin Multiplatform code. Since each codebase is unique\, I'll demonstr
 ate how we adapt the framework for our own internal use cases at Amazon.\n
LOCATION:Auditorium 11+12
DTSTART:20250523T141500Z
DTEND:20250523T150000Z
END:VEVENT
BEGIN:VEVENT
UID:5d54cd31-8c22-4522-ad2f-e3236bc2e590
DTSTAMP:20250517T105800Z
SUMMARY:Break
DESCRIPTION:\n\n
LOCATION:Hall D2
DTSTART:20250523T150000Z
DTEND:20250523T151500Z
END:VEVENT
BEGIN:VEVENT
UID:ae732244-ff4b-4756-9bbc-2aa92c49e0c4
DTSTAMP:20250517T105800Z
SUMMARY:Closing Panel
DESCRIPTION:Hadi Hariri\n\n
LOCATION:Keynote room
DTSTART:20250523T151500Z
DTEND:20250523T160000Z
END:VEVENT
END:VCALENDAR
