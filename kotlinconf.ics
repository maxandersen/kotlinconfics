BEGIN:VCALENDAR
VERSION:2.0
PRODID:-//Michael Angstadt//biweekly 0.6.8//EN
BEGIN:VEVENT
UID:0411436f-5765-4e7a-9be7-20126cc3824b
DTSTAMP:20250517T085705Z
SUMMARY:Registration
LOCATION:Room #173
DTSTART:20250521T060000Z
DTEND:20250521T070000Z
END:VEVENT
BEGIN:VEVENT
UID:6171d985-a61e-4165-b4d4-56af51e4eb89
DTSTAMP:20250517T085705Z
SUMMARY:Spring Boot With Coroutines and Virtual Threads. Part 1.
DESCRIPTION:If you want to get the most out of Spring Boot in terms of low 
 latency\, high-throughput\, and resource efficiency\, there is no way arou
 nd virtual threads and/or reactive libraries like Webflux.\n\nHowever\, bo
 th won’t get you far: Virtual threads are limited to non-blocking operatio
 ns\, and WebFlux — even though offering all reactive qualities\, like non-
 blocking\, parallelism\, streaming\, etc. — will give you a lot of headach
 es due to its complexity\, bad readability\, and maintainability.\n\nIn th
 is workshop\, you’ll learn how Spring Boot’s coroutine support will wipe o
 ut all the downsides of the ‘raw’ WebFlux approach or the limitations of v
 irtual threads and provide you with the best of both worlds: non-blocking 
 reactive characteristics without the complexity.\n\nDuring the workshop\, 
 we will explore Kotlin’s reactive building blocks\, such as coroutines and 
 flows\, and apply them in Spring Boot. By building a non-blocking API in S
 pring Boot from scratch\, you’ll learn how to:\n\n- Use coroutines on top 
 of WebFlux and/or virtual threads.\n- Perform non-blocking remote API call
 s using WebClient or RestClient.\n- Access a database in a reactive way\, 
 either via the R2DBC or JDBC\, including framework support.\n- Apply struc
 tured concurrency in your business logic\, like requesting data in paralle
 l.\n- Create an advanced streaming API based on ServerSentEvents that comb
 ines coroutines and flow.\n\nIn addition\, we will explore virtual threads 
 in-depth and see how they can leverage the power of coroutines even more.\
 n\nAt the end of the workshop\, you’ll know all the ins and outs of progra
 mming in Spring Boot with coroutines while having experienced the tremendo
 us benefits they offer over raw virtual threads or WebFlux.\n\nWith the kn
 owledge you gain\, you can enlighten your Spring Boot project with corouti
 nes the very next day.
LOCATION:Room #173
DTSTART:20250521T070000Z
DTEND:20250521T083000Z
END:VEVENT
BEGIN:VEVENT
UID:ce4a2b29-9496-4536-ad98-39d67a9ae816
DTSTAMP:20250517T085705Z
SUMMARY:Extracting\, Transforming\, and Analyzing Data With Kotlin. Part 1.
DESCRIPTION:This workshop is designed for all Kotlin developers who need si
 mple and convenient tools within their native ecosystem to assist them whe
 n working with data\, understanding its nature\, performing any necessary 
 processing\, and presenting the results to their team or stakeholders as a 
 report or chart.\n\nIn this workshop\, you’ll learn how to build data proc
 essing pipelines in your applications. We’ll explore the best practices fo
 r extracting data from various sources\, aggregating and transforming it\, 
 and then exporting it as a collection of data classes\, displaying it as t
 ables\, or visualizing it with insightful charts.\n\nBy the end of the wor
 kshop\, you’ll be able to:\n\n- Load\, transform\, and export data using t
 he Kotlin DataFrame library.\n- Visualize data with the Kandy library to e
 ffectively convey insights.\n- Access and manipulate data from various sou
 rces: REST APIs\, SQL databases\, CSV files\, and other tabular data.\n- H
 andle both flat and hierarchical JSON-like data structures.\n- Boost your 
 code written with the help of the kotlin.collections or SQL-like framework
 s.\n- Solve practical problems by applying your skills to three real-world 
 scenarios.\n- Present the insights in Kotlin notebooks and easily share th
 em on GitHub Gists.
LOCATION:Room #174
DTSTART:20250521T070000Z
DTEND:20250521T083000Z
END:VEVENT
BEGIN:VEVENT
UID:358845eb-b89d-479c-8187-48717ab6d59b
DTSTAMP:20250517T085705Z
SUMMARY:Hands-On Kotlin Web Development With Ktor. Part 1.
DESCRIPTION:Ktor is a lightweight and flexible toolkit for building HTTP ap
 plications. This workshop will use the Kotlin programming language\, the K
 tor framework\, the Exposed database access library\, OpenAI\, and several 
 other Kotlin and Java libraries to build a feature-complete AI powered web 
 application.\n\nWe’ll start with the basics by exploring the Ktor framewor
 k and learning how to build a simple web application using essential funct
 ions. We’ll cover topics like handling HTTP requests\, working with WebSoc
 kets\, database access\, authentication\, logging\, and deployment.\n\nFor 
 testing\, we will look into the APIs that Ktor provides. Finally\, we will 
 explore the API for writing plugins and use it to create a simple plugin f
 or our Ktor application.\n\nBy the end of the workshop\, you’ll be able to
 :\n  - Structure Ktor projects\n  - Test Ktor applications\n  - Create and 
 deploy RESTful services using Ktor\n  - Integrate Ktor with external libra
 ries\n\nThis will be a fast-paced workshop where attendees will spend most 
 of their time coding. You will walk away armed with a cookbook of various 
 Ktor recipes for building feature-complete AI powered web application.
LOCATION:Room #176
DTSTART:20250521T070000Z
DTEND:20250521T083000Z
END:VEVENT
BEGIN:VEVENT
UID:01ec859b-5884-4ffb-9136-f230858dcfc1
DTSTAMP:20250517T085705Z
SUMMARY:Building Shared UI With Compose Multiplatform. Part 1.
DESCRIPTION:Take the next step in your cross-platform Kotlin journey with C
 ompose Multiplatform! This workshop is for developers already familiar wit
 h the basics of Kotlin Multiplatform and Jetpack Compose who are looking t
 o extend their skills by building a shared UI.\n\nWe’ll discuss how Compos
 e Multiplatform works and show you how your existing Compose skills are re
 usable across platforms. You’ll have hands-on time with a wide range of Co
 mpose features\, focusing on how they work across different platforms. Dur
 ing the workshop’s exercises\, you’ll work with Compose code\, explore API
 s\, build new features\, improve accessibility\, test the UI\, and more.\n
 \nCovering the latest available APIs and best practices\, we’ll equip you 
 with everything you need to start using Compose Multiplatform in your own 
 apps! Here is how the workshop will be structured:\n\nIntroduction\n- How 
 Compose Multiplatform works\n- Running Compose on Android\, iOS\, Desktop\
 , and Web\n- Writing basic Compose code for multiplatform use\n\nCompose b
 uilding blocks\n- Resources (localization\, fonts\, and more)\n- Image loa
 ding\n- ViewModels and architecture components\n- Navigation\n- Animations
 \n- Dependency injection\n- Theming\n\nMastering Compose Multiplatform\n- 
 Interop with native components\n- Dialogs\n- Insets\n- Accessibility\n- Te
 sting\n\nThis workshop includes exercises for participants to complete on 
 their own laptops. Using a MacBook is highly recommended for participation 
 in all exercises\, as iOS applications can only be built on macOS. Detaile
 d setup instructions will be provided prior to the workshop.
LOCATION:Room #178
DTSTART:20250521T070000Z
DTEND:20250521T083000Z
END:VEVENT
BEGIN:VEVENT
UID:34f8362c-3c97-4cb1-aff3-2bf8bd0f71db
DTSTAMP:20250517T085705Z
SUMMARY:Deep Dive Into Kotlin Multiplatform: Advanced Techniques for Seamle
 ss Code Sharing. Part 1.
DESCRIPTION:This is an intermediate/advanced workshop for experienced Kotli
 n Multiplatform developers. It is aimed at developers who have built proje
 cts with Kotlin Multiplatform and Jetpack Compose / Compose Multiplatform 
 and now want to progress onto more advanced topics.\n\nThe workshop aims t
 o equip attendees with the skills to write high-quality code and apps usin
 g Kotlin Multiplatform. The workshop will address the following topics:\n\
 nA Gentle(r) Introduction\n- Introducing an example project\n- Explaining 
 project structure and architecture\n- Highlighting a few key libraries use
 d in the project\n\nNative Integrations\n- Splash screens\n- Notifications
 \n- Working with files\n\nAdvanced Kotlin Multiplatform for iOS Targets\n- 
 Debugging Kotlin/Swift\n- Understanding and improving Kotlin/Swift interop
 erability\n\nCode Quality\n- Code coverage with Kover (JVM-only)\n- Modula
 rization\n\nApp Quality\n- Fixing memory leaks\n- Performance testing\n- A
 pp size optimization\n\nManaging Workflows\n- Basics of building CI/CD pip
 elines for your apps\n\nYou will need to bring a MacBook along with you to 
 participate in all the practical exercises. Installation instructions will 
 be provided one week prior to the workshop.
LOCATION:Room #179
DTSTART:20250521T070000Z
DTEND:20250521T083000Z
END:VEVENT
BEGIN:VEVENT
UID:6331a24d-b0fa-470f-bd95-73f9adbce8c8
DTSTAMP:20250517T085705Z
SUMMARY:Refactoring to Functional Kotlin. Part 1.
DESCRIPTION:Kotlin supports both Object-oriented and functional styles of p
 rogramming\, but what should we do when we have OO code that should be fun
 ctional? Refactor\, of course!\n\nIn this workshop\, Nat and Duncan\, the 
 authors of Java to Kotlin: A Refactoring Guidebook\, take a web applicatio
 n and introduce techniques to gradually and safely migrate the code to the 
 functional style better suited to today’s architectures. Topics include:\n
 \n- Thinking in a functional way – Data\, Calculations\, and Actions\n- Mi
 grating from mutable objects to immutable data classes\n- Converting busin
 ess logic to a functional domain model\n- Where does the state live? Funct
 ional core / imperative shell\n- Choosing between functions and methods\n- 
 Functional error handling\n- Expand and Contract refactoring for safety ov
 er many commits
LOCATION:Room #180
DTSTART:20250521T070000Z
DTEND:20250521T083000Z
END:VEVENT
BEGIN:VEVENT
UID:f0cd0aff-3df4-43c4-8373-354de23879b2
DTSTAMP:20250517T085705Z
SUMMARY:Asynchronous Programming With Kotlin Coroutines. Part 1.
DESCRIPTION:In this workshop\, you’ll learn everything you need to know abo
 ut how to be productive with coroutines in Kotlin. We’ll start with the ba
 sics of asynchronous programming\, its differences from blocking code\, an
 d the concepts of suspending functions and coroutines. We’ll explore corou
 tine contexts\, concurrent decomposition of work via deferreds\, and struc
 tured concurrency with coroutine scopes.\n\nThe second part of the worksho
 p will be devoted to Kotlin Flows. We’ll study how Kotlin Flows are design
 ed on a basic level\, learn the difference between hot and cold flows\, di
 scuss their typical usage patterns\, and explore how they incorporate idea
 s from reactive streams. To deepen our understanding\, we’ll also take a p
 eek at some of the implementations behind flows and collectors. Throughout
 \, we’ll see how they help you in writing safe and reliable concurrent sys
 tems\, and how modern applications can use them to work with asynchronous 
 streams of data\, manage system states\, and broadcast events.\n\nThrough 
 this workshop\, you’ll enhance your coroutines-related vocabulary\, unders
 tand how to spot and avoid common problems\, and be able to effectively an
 d confidently use coroutines and flows in your own projects.
LOCATION:Room #181
DTSTART:20250521T070000Z
DTEND:20250521T083000Z
END:VEVENT
BEGIN:VEVENT
UID:ef926c7b-af3e-45dd-8d45-22ce1c039b59
DTSTAMP:20250517T085705Z
SUMMARY:Coffee Break
LOCATION:Room #173
DTSTART:20250521T083000Z
DTEND:20250521T090000Z
END:VEVENT
BEGIN:VEVENT
UID:915adfa4-c0d3-4a30-9ea6-c66aa0bafacf
DTSTAMP:20250517T085705Z
SUMMARY:Spring Boot With Coroutines and Virtual Threads. Part 2.
DESCRIPTION:If you want to get the most out of Spring Boot in terms of low 
 latency\, high-throughput\, and resource efficiency\, there is no way arou
 nd virtual threads and/or reactive libraries like Webflux.\n\nHowever\, bo
 th won’t get you far: Virtual threads are limited to non-blocking operatio
 ns\, and WebFlux — even though offering all reactive qualities\, like non-
 blocking\, parallelism\, streaming\, etc. — will give you a lot of headach
 es due to its complexity\, bad readability\, and maintainability.\n\nIn th
 is workshop\, you’ll learn how Spring Boot’s coroutine support will wipe o
 ut all the downsides of the ‘raw’ WebFlux approach or the limitations of v
 irtual threads and provide you with the best of both worlds: non-blocking 
 reactive characteristics without the complexity.\n\nDuring the workshop\, 
 we will explore Kotlin’s reactive building blocks\, such as coroutines and 
 flows\, and apply them in Spring Boot. By building a non-blocking API in S
 pring Boot from scratch\, you’ll learn how to:\n\n- Use coroutines on top 
 of WebFlux and/or virtual threads.\n- Perform non-blocking remote API call
 s using WebClient or RestClient.\n- Access a database in a reactive way\, 
 either via the R2DBC or JDBC\, including framework support.\n- Apply struc
 tured concurrency in your business logic\, like requesting data in paralle
 l.\n- Create an advanced streaming API based on ServerSentEvents that comb
 ines coroutines and flow.\n\nIn addition\, we will explore virtual threads 
 in-depth and see how they can leverage the power of coroutines even more.\
 n\nAt the end of the workshop\, you’ll know all the ins and outs of progra
 mming in Spring Boot with coroutines while having experienced the tremendo
 us benefits they offer over raw virtual threads or WebFlux.\n\nWith the kn
 owledge you gain\, you can enlighten your Spring Boot project with corouti
 nes the very next day.
LOCATION:Room #173
DTSTART:20250521T090000Z
DTEND:20250521T103000Z
END:VEVENT
BEGIN:VEVENT
UID:8d989c27-33a1-4596-843b-2a3dbdf5f407
DTSTAMP:20250517T085705Z
SUMMARY:Extracting\, Transforming\, and Analyzing Data With Kotlin. Part 2.
DESCRIPTION:This workshop is designed for all Kotlin developers who need si
 mple and convenient tools within their native ecosystem to assist them whe
 n working with data\, understanding its nature\, performing any necessary 
 processing\, and presenting the results to their team or stakeholders as a 
 report or chart.\n\nIn this workshop\, you’ll learn how to build data proc
 essing pipelines in your applications. We’ll explore the best practices fo
 r extracting data from various sources\, aggregating and transforming it\, 
 and then exporting it as a collection of data classes\, displaying it as t
 ables\, or visualizing it with insightful charts.\n\nBy the end of the wor
 kshop\, you’ll be able to:\n\n- Load\, transform\, and export data using t
 he Kotlin DataFrame library.\n- Visualize data with the Kandy library to e
 ffectively convey insights.\n- Access and manipulate data from various sou
 rces: REST APIs\, SQL databases\, CSV files\, and other tabular data.\n- H
 andle both flat and hierarchical JSON-like data structures.\n- Boost your 
 code written with the help of the kotlin.collections or SQL-like framework
 s.\n- Solve practical problems by applying your skills to three real-world 
 scenarios.\n- Present the insights in Kotlin notebooks and easily share th
 em on GitHub Gists.
LOCATION:Room #174
DTSTART:20250521T090000Z
DTEND:20250521T103000Z
END:VEVENT
BEGIN:VEVENT
UID:08abf541-1608-4e17-9f61-45ae125ebac4
DTSTAMP:20250517T085705Z
SUMMARY:Hands-On Kotlin Web Development With Ktor. Part 2.
DESCRIPTION:Ktor is a lightweight and flexible toolkit for building HTTP ap
 plications. This workshop will use the Kotlin programming language\, the K
 tor framework\, the Exposed database access library\, OpenAI\, and several 
 other Kotlin and Java libraries to build a feature-complete AI powered web 
 application.\n\nWe’ll start with the basics by exploring the Ktor framewor
 k and learning how to build a simple web application using essential funct
 ions. We’ll cover topics like handling HTTP requests\, working with WebSoc
 kets\, database access\, authentication\, logging\, and deployment.\n\nFor 
 testing\, we will look into the APIs that Ktor provides. Finally\, we will 
 explore the API for writing plugins and use it to create a simple plugin f
 or our Ktor application.\n\nBy the end of the workshop\, you’ll be able to
 :\n  - Structure Ktor projects\n  - Test Ktor applications\n  - Create and 
 deploy RESTful services using Ktor\n  - Integrate Ktor with external libra
 ries\n\nThis will be a fast-paced workshop where attendees will spend most 
 of their time coding. You will walk away armed with a cookbook of various 
 Ktor recipes for building feature-complete AI powered web application.
LOCATION:Room #176
DTSTART:20250521T090000Z
DTEND:20250521T103000Z
END:VEVENT
BEGIN:VEVENT
UID:7814cda3-da5b-4659-891d-9b9a3f24e6e5
DTSTAMP:20250517T085705Z
SUMMARY:Building Shared UI With Compose Multiplatform. Part 2.
DESCRIPTION:Take the next step in your cross-platform Kotlin journey with C
 ompose Multiplatform! This workshop is for developers already familiar wit
 h the basics of Kotlin Multiplatform and Jetpack Compose who are looking t
 o extend their skills by building a shared UI.\n\nWe’ll discuss how Compos
 e Multiplatform works and show you how your existing Compose skills are re
 usable across platforms. You’ll have hands-on time with a wide range of Co
 mpose features\, focusing on how they work across different platforms. Dur
 ing the workshop’s exercises\, you’ll work with Compose code\, explore API
 s\, build new features\, improve accessibility\, test the UI\, and more.\n
 \nCovering the latest available APIs and best practices\, we’ll equip you 
 with everything you need to start using Compose Multiplatform in your own 
 apps! Here is how the workshop will be structured:\n\nIntroduction\n- How 
 Compose Multiplatform works\n- Running Compose on Android\, iOS\, Desktop\
 , and Web\n- Writing basic Compose code for multiplatform use\n\nCompose b
 uilding blocks\n- Resources (localization\, fonts\, and more)\n- Image loa
 ding\n- ViewModels and architecture components\n- Navigation\n- Animations
 \n- Dependency injection\n- Theming\n\nMastering Compose Multiplatform\n- 
 Interop with native components\n- Dialogs\n- Insets\n- Accessibility\n- Te
 sting\n\nThis workshop includes exercises for participants to complete on 
 their own laptops. Using a MacBook is highly recommended for participation 
 in all exercises\, as iOS applications can only be built on macOS. Detaile
 d setup instructions will be provided prior to the workshop.
LOCATION:Room #178
DTSTART:20250521T090000Z
DTEND:20250521T103000Z
END:VEVENT
BEGIN:VEVENT
UID:26f23762-4337-46a3-9ffb-cdc6410850bc
DTSTAMP:20250517T085705Z
SUMMARY:Deep Dive Into Kotlin Multiplatform: Advanced Techniques for Seamle
 ss Code Sharing. Part 2.
DESCRIPTION:This is an intermediate/advanced workshop for experienced Kotli
 n Multiplatform developers. It is aimed at developers who have built proje
 cts with Kotlin Multiplatform and Jetpack Compose / Compose Multiplatform 
 and now want to progress onto more advanced topics.\n\nThe workshop aims t
 o equip attendees with the skills to write high-quality code and apps usin
 g Kotlin Multiplatform. The workshop will address the following topics:\n\
 nA Gentle(r) Introduction\n- Introducing an example project\n- Explaining 
 project structure and architecture\n- Highlighting a few key libraries use
 d in the project\n\nNative Integrations\n- Splash screens\n- Notifications
 \n- Working with files\n\nAdvanced Kotlin Multiplatform for iOS Targets\n- 
 Debugging Kotlin/Swift\n- Understanding and improving Kotlin/Swift interop
 erability\n\nCode Quality\n- Code coverage with Kover (JVM-only)\n- Modula
 rization\n\nApp Quality\n- Fixing memory leaks\n- Performance testing\n- A
 pp size optimization\n\nManaging Workflows\n- Basics of building CI/CD pip
 elines for your apps\n\nYou will need to bring a MacBook along with you to 
 participate in all the practical exercises. Installation instructions will 
 be provided one week prior to the workshop.
LOCATION:Room #179
DTSTART:20250521T090000Z
DTEND:20250521T103000Z
END:VEVENT
BEGIN:VEVENT
UID:7ef1b43e-eb56-43fa-a8aa-34f9f11262f9
DTSTAMP:20250517T085705Z
SUMMARY:Refactoring to Functional Kotlin. Part 2.
DESCRIPTION:Kotlin supports both Object-oriented and functional styles of p
 rogramming\, but what should we do when we have OO code that should be fun
 ctional? Refactor\, of course!\n\nIn this workshop\, Nat and Duncan\, the 
 authors of Java to Kotlin: A Refactoring Guidebook\, take a web applicatio
 n and introduce techniques to gradually and safely migrate the code to the 
 functional style better suited to today’s architectures. Topics include:\n
 \n- Thinking in a functional way – Data\, Calculations\, and Actions\n- Mi
 grating from mutable objects to immutable data classes\n- Converting busin
 ess logic to a functional domain model\n- Where does the state live? Funct
 ional core / imperative shell\n- Choosing between functions and methods\n- 
 Functional error handling\n- Expand and Contract refactoring for safety ov
 er many commits
LOCATION:Room #180
DTSTART:20250521T090000Z
DTEND:20250521T103000Z
END:VEVENT
BEGIN:VEVENT
UID:ef1ab136-56c0-414f-ba2c-241e122a3ba1
DTSTAMP:20250517T085705Z
SUMMARY:Asynchronous Programming With Kotlin Coroutines. Part 2.
DESCRIPTION:In this workshop\, you’ll learn everything you need to know abo
 ut how to be productive with coroutines in Kotlin. We’ll start with the ba
 sics of asynchronous programming\, its differences from blocking code\, an
 d the concepts of suspending functions and coroutines. We’ll explore corou
 tine contexts\, concurrent decomposition of work via deferreds\, and struc
 tured concurrency with coroutine scopes.\n\nThe second part of the worksho
 p will be devoted to Kotlin Flows. We’ll study how Kotlin Flows are design
 ed on a basic level\, learn the difference between hot and cold flows\, di
 scuss their typical usage patterns\, and explore how they incorporate idea
 s from reactive streams. To deepen our understanding\, we’ll also take a p
 eek at some of the implementations behind flows and collectors. Throughout
 \, we’ll see how they help you in writing safe and reliable concurrent sys
 tems\, and how modern applications can use them to work with asynchronous 
 streams of data\, manage system states\, and broadcast events.\n\nThrough 
 this workshop\, you’ll enhance your coroutines-related vocabulary\, unders
 tand how to spot and avoid common problems\, and be able to effectively an
 d confidently use coroutines and flows in your own projects.
LOCATION:Room #181
DTSTART:20250521T090000Z
DTEND:20250521T103000Z
END:VEVENT
BEGIN:VEVENT
UID:739b42b8-84e5-4f15-82bd-d1aed7a9e2ed
DTSTAMP:20250517T085705Z
SUMMARY:Lunch
LOCATION:Room #173
DTSTART:20250521T103000Z
DTEND:20250521T113000Z
END:VEVENT
BEGIN:VEVENT
UID:685fbef3-37d1-453b-8886-8963c80785e7
DTSTAMP:20250517T085705Z
SUMMARY:Spring Boot With Coroutines and Virtual Threads. Part 3.
DESCRIPTION:If you want to get the most out of Spring Boot in terms of low 
 latency\, high-throughput\, and resource efficiency\, there is no way arou
 nd virtual threads and/or reactive libraries like Webflux.\n\nHowever\, bo
 th won’t get you far: Virtual threads are limited to non-blocking operatio
 ns\, and WebFlux — even though offering all reactive qualities\, like non-
 blocking\, parallelism\, streaming\, etc. — will give you a lot of headach
 es due to its complexity\, bad readability\, and maintainability.\n\nIn th
 is workshop\, you’ll learn how Spring Boot’s coroutine support will wipe o
 ut all the downsides of the ‘raw’ WebFlux approach or the limitations of v
 irtual threads and provide you with the best of both worlds: non-blocking 
 reactive characteristics without the complexity.\n\nDuring the workshop\, 
 we will explore Kotlin’s reactive building blocks\, such as coroutines and 
 flows\, and apply them in Spring Boot. By building a non-blocking API in S
 pring Boot from scratch\, you’ll learn how to:\n\n- Use coroutines on top 
 of WebFlux and/or virtual threads.\n- Perform non-blocking remote API call
 s using WebClient or RestClient.\n- Access a database in a reactive way\, 
 either via the R2DBC or JDBC\, including framework support.\n- Apply struc
 tured concurrency in your business logic\, like requesting data in paralle
 l.\n- Create an advanced streaming API based on ServerSentEvents that comb
 ines coroutines and flow.\n\nIn addition\, we will explore virtual threads 
 in-depth and see how they can leverage the power of coroutines even more.\
 n\nAt the end of the workshop\, you’ll know all the ins and outs of progra
 mming in Spring Boot with coroutines while having experienced the tremendo
 us benefits they offer over raw virtual threads or WebFlux.\n\nWith the kn
 owledge you gain\, you can enlighten your Spring Boot project with corouti
 nes the very next day.
LOCATION:Room #173
DTSTART:20250521T113000Z
DTEND:20250521T130000Z
END:VEVENT
BEGIN:VEVENT
UID:f7099373-0f53-4a9d-a7d7-4870add9c8a8
DTSTAMP:20250517T085705Z
SUMMARY:Extracting\, Transforming\, and Analyzing Data With Kotlin. Part 3.
DESCRIPTION:This workshop is designed for all Kotlin developers who need si
 mple and convenient tools within their native ecosystem to assist them whe
 n working with data\, understanding its nature\, performing any necessary 
 processing\, and presenting the results to their team or stakeholders as a 
 report or chart.\n\nIn this workshop\, you’ll learn how to build data proc
 essing pipelines in your applications. We’ll explore the best practices fo
 r extracting data from various sources\, aggregating and transforming it\, 
 and then exporting it as a collection of data classes\, displaying it as t
 ables\, or visualizing it with insightful charts.\n\nBy the end of the wor
 kshop\, you’ll be able to:\n\n- Load\, transform\, and export data using t
 he Kotlin DataFrame library.\n- Visualize data with the Kandy library to e
 ffectively convey insights.\n- Access and manipulate data from various sou
 rces: REST APIs\, SQL databases\, CSV files\, and other tabular data.\n- H
 andle both flat and hierarchical JSON-like data structures.\n- Boost your 
 code written with the help of the kotlin.collections or SQL-like framework
 s.\n- Solve practical problems by applying your skills to three real-world 
 scenarios.\n- Present the insights in Kotlin notebooks and easily share th
 em on GitHub Gists.
LOCATION:Room #174
DTSTART:20250521T113000Z
DTEND:20250521T130000Z
END:VEVENT
BEGIN:VEVENT
UID:fd62c414-b034-4fb6-b3e4-52ace28a6db5
DTSTAMP:20250517T085705Z
SUMMARY:Hands-On Kotlin Web Development With Ktor. Part 3.
DESCRIPTION:Ktor is a lightweight and flexible toolkit for building HTTP ap
 plications. This workshop will use the Kotlin programming language\, the K
 tor framework\, the Exposed database access library\, OpenAI\, and several 
 other Kotlin and Java libraries to build a feature-complete AI powered web 
 application.\n\nWe’ll start with the basics by exploring the Ktor framewor
 k and learning how to build a simple web application using essential funct
 ions. We’ll cover topics like handling HTTP requests\, working with WebSoc
 kets\, database access\, authentication\, logging\, and deployment.\n\nFor 
 testing\, we will look into the APIs that Ktor provides. Finally\, we will 
 explore the API for writing plugins and use it to create a simple plugin f
 or our Ktor application.\n\nBy the end of the workshop\, you’ll be able to
 :\n  - Structure Ktor projects\n  - Test Ktor applications\n  - Create and 
 deploy RESTful services using Ktor\n  - Integrate Ktor with external libra
 ries\n\nThis will be a fast-paced workshop where attendees will spend most 
 of their time coding. You will walk away armed with a cookbook of various 
 Ktor recipes for building feature-complete AI powered web application.
LOCATION:Room #176
DTSTART:20250521T113000Z
DTEND:20250521T130000Z
END:VEVENT
BEGIN:VEVENT
UID:4a27e1c6-a9d5-47d9-92c0-65a8518be8ec
DTSTAMP:20250517T085705Z
SUMMARY:Building Shared UI With Compose Multiplatform. Part 3.
DESCRIPTION:Take the next step in your cross-platform Kotlin journey with C
 ompose Multiplatform! This workshop is for developers already familiar wit
 h the basics of Kotlin Multiplatform and Jetpack Compose who are looking t
 o extend their skills by building a shared UI.\n\nWe’ll discuss how Compos
 e Multiplatform works and show you how your existing Compose skills are re
 usable across platforms. You’ll have hands-on time with a wide range of Co
 mpose features\, focusing on how they work across different platforms. Dur
 ing the workshop’s exercises\, you’ll work with Compose code\, explore API
 s\, build new features\, improve accessibility\, test the UI\, and more.\n
 \nCovering the latest available APIs and best practices\, we’ll equip you 
 with everything you need to start using Compose Multiplatform in your own 
 apps! Here is how the workshop will be structured:\n\nIntroduction\n- How 
 Compose Multiplatform works\n- Running Compose on Android\, iOS\, Desktop\
 , and Web\n- Writing basic Compose code for multiplatform use\n\nCompose b
 uilding blocks\n- Resources (localization\, fonts\, and more)\n- Image loa
 ding\n- ViewModels and architecture components\n- Navigation\n- Animations
 \n- Dependency injection\n- Theming\n\nMastering Compose Multiplatform\n- 
 Interop with native components\n- Dialogs\n- Insets\n- Accessibility\n- Te
 sting\n\nThis workshop includes exercises for participants to complete on 
 their own laptops. Using a MacBook is highly recommended for participation 
 in all exercises\, as iOS applications can only be built on macOS. Detaile
 d setup instructions will be provided prior to the workshop.
LOCATION:Room #178
DTSTART:20250521T113000Z
DTEND:20250521T130000Z
END:VEVENT
BEGIN:VEVENT
UID:35f989e5-89d3-4721-89d1-68fb2fe60e32
DTSTAMP:20250517T085705Z
SUMMARY:Deep Dive Into Kotlin Multiplatform: Advanced Techniques for Seamle
 ss Code Sharing. Part 3.
DESCRIPTION:This is an intermediate/advanced workshop for experienced Kotli
 n Multiplatform developers. It is aimed at developers who have built proje
 cts with Kotlin Multiplatform and Jetpack Compose / Compose Multiplatform 
 and now want to progress onto more advanced topics.\n\nThe workshop aims t
 o equip attendees with the skills to write high-quality code and apps usin
 g Kotlin Multiplatform. The workshop will address the following topics:\n\
 nA Gentle(r) Introduction\n- Introducing an example project\n- Explaining 
 project structure and architecture\n- Highlighting a few key libraries use
 d in the project\n\nNative Integrations\n- Splash screens\n- Notifications
 \n- Working with files\n\nAdvanced Kotlin Multiplatform for iOS Targets\n- 
 Debugging Kotlin/Swift\n- Understanding and improving Kotlin/Swift interop
 erability\n\nCode Quality\n- Code coverage with Kover (JVM-only)\n- Modula
 rization\n\nApp Quality\n- Fixing memory leaks\n- Performance testing\n- A
 pp size optimization\n\nManaging Workflows\n- Basics of building CI/CD pip
 elines for your apps\n\nYou will need to bring a MacBook along with you to 
 participate in all the practical exercises. Installation instructions will 
 be provided one week prior to the workshop.
LOCATION:Room #179
DTSTART:20250521T113000Z
DTEND:20250521T130000Z
END:VEVENT
BEGIN:VEVENT
UID:f6f8204e-fa82-41af-93d9-d60b19347dee
DTSTAMP:20250517T085705Z
SUMMARY:Refactoring to Functional Kotlin. Part 3.
DESCRIPTION:Kotlin supports both Object-oriented and functional styles of p
 rogramming\, but what should we do when we have OO code that should be fun
 ctional? Refactor\, of course!\n\nIn this workshop\, Nat and Duncan\, the 
 authors of Java to Kotlin: A Refactoring Guidebook\, take a web applicatio
 n and introduce techniques to gradually and safely migrate the code to the 
 functional style better suited to today’s architectures. Topics include:\n
 \n- Thinking in a functional way – Data\, Calculations\, and Actions\n- Mi
 grating from mutable objects to immutable data classes\n- Converting busin
 ess logic to a functional domain model\n- Where does the state live? Funct
 ional core / imperative shell\n- Choosing between functions and methods\n- 
 Functional error handling\n- Expand and Contract refactoring for safety ov
 er many commits
LOCATION:Room #180
DTSTART:20250521T113000Z
DTEND:20250521T130000Z
END:VEVENT
BEGIN:VEVENT
UID:cd642b9a-c151-4dc3-92b2-e339d588c3b9
DTSTAMP:20250517T085705Z
SUMMARY:Asynchronous Programming With Kotlin Coroutines. Part 3.
DESCRIPTION:In this workshop\, you’ll learn everything you need to know abo
 ut how to be productive with coroutines in Kotlin. We’ll start with the ba
 sics of asynchronous programming\, its differences from blocking code\, an
 d the concepts of suspending functions and coroutines. We’ll explore corou
 tine contexts\, concurrent decomposition of work via deferreds\, and struc
 tured concurrency with coroutine scopes.\n\nThe second part of the worksho
 p will be devoted to Kotlin Flows. We’ll study how Kotlin Flows are design
 ed on a basic level\, learn the difference between hot and cold flows\, di
 scuss their typical usage patterns\, and explore how they incorporate idea
 s from reactive streams. To deepen our understanding\, we’ll also take a p
 eek at some of the implementations behind flows and collectors. Throughout
 \, we’ll see how they help you in writing safe and reliable concurrent sys
 tems\, and how modern applications can use them to work with asynchronous 
 streams of data\, manage system states\, and broadcast events.\n\nThrough 
 this workshop\, you’ll enhance your coroutines-related vocabulary\, unders
 tand how to spot and avoid common problems\, and be able to effectively an
 d confidently use coroutines and flows in your own projects.
LOCATION:Room #181
DTSTART:20250521T113000Z
DTEND:20250521T130000Z
END:VEVENT
BEGIN:VEVENT
UID:c7d1955d-4c19-48c4-be94-aabc4a83e866
DTSTAMP:20250517T085705Z
SUMMARY:Coffee Break
LOCATION:Room #173
DTSTART:20250521T130000Z
DTEND:20250521T133000Z
END:VEVENT
BEGIN:VEVENT
UID:e1132be9-1093-4fc3-a531-77ba854803b9
DTSTAMP:20250517T085705Z
SUMMARY:Spring Boot With Coroutines and Virtual Threads. Part 4.
DESCRIPTION:If you want to get the most out of Spring Boot in terms of low 
 latency\, high-throughput\, and resource efficiency\, there is no way arou
 nd virtual threads and/or reactive libraries like Webflux.\n\nHowever\, bo
 th won’t get you far: Virtual threads are limited to non-blocking operatio
 ns\, and WebFlux — even though offering all reactive qualities\, like non-
 blocking\, parallelism\, streaming\, etc. — will give you a lot of headach
 es due to its complexity\, bad readability\, and maintainability.\n\nIn th
 is workshop\, you’ll learn how Spring Boot’s coroutine support will wipe o
 ut all the downsides of the ‘raw’ WebFlux approach or the limitations of v
 irtual threads and provide you with the best of both worlds: non-blocking 
 reactive characteristics without the complexity.\n\nDuring the workshop\, 
 we will explore Kotlin’s reactive building blocks\, such as coroutines and 
 flows\, and apply them in Spring Boot. By building a non-blocking API in S
 pring Boot from scratch\, you’ll learn how to:\n\n- Use coroutines on top 
 of WebFlux and/or virtual threads.\n- Perform non-blocking remote API call
 s using WebClient or RestClient.\n- Access a database in a reactive way\, 
 either via the R2DBC or JDBC\, including framework support.\n- Apply struc
 tured concurrency in your business logic\, like requesting data in paralle
 l.\n- Create an advanced streaming API based on ServerSentEvents that comb
 ines coroutines and flow.\n\nIn addition\, we will explore virtual threads 
 in-depth and see how they can leverage the power of coroutines even more.\
 n\nAt the end of the workshop\, you’ll know all the ins and outs of progra
 mming in Spring Boot with coroutines while having experienced the tremendo
 us benefits they offer over raw virtual threads or WebFlux.\n\nWith the kn
 owledge you gain\, you can enlighten your Spring Boot project with corouti
 nes the very next day.
LOCATION:Room #173
DTSTART:20250521T133000Z
DTEND:20250521T150000Z
END:VEVENT
BEGIN:VEVENT
UID:c4f24c1b-56cf-4939-b3c0-3aaa00cad19b
DTSTAMP:20250517T085705Z
SUMMARY:Extracting\, Transforming\, and Analyzing Data With Kotlin. Part 4.
DESCRIPTION:This workshop is designed for all Kotlin developers who need si
 mple and convenient tools within their native ecosystem to assist them whe
 n working with data\, understanding its nature\, performing any necessary 
 processing\, and presenting the results to their team or stakeholders as a 
 report or chart.\n\nIn this workshop\, you’ll learn how to build data proc
 essing pipelines in your applications. We’ll explore the best practices fo
 r extracting data from various sources\, aggregating and transforming it\, 
 and then exporting it as a collection of data classes\, displaying it as t
 ables\, or visualizing it with insightful charts.\n\nBy the end of the wor
 kshop\, you’ll be able to:\n\n- Load\, transform\, and export data using t
 he Kotlin DataFrame library.\n- Visualize data with the Kandy library to e
 ffectively convey insights.\n- Access and manipulate data from various sou
 rces: REST APIs\, SQL databases\, CSV files\, and other tabular data.\n- H
 andle both flat and hierarchical JSON-like data structures.\n- Boost your 
 code written with the help of the kotlin.collections or SQL-like framework
 s.\n- Solve practical problems by applying your skills to three real-world 
 scenarios.\n- Present the insights in Kotlin notebooks and easily share th
 em on GitHub Gists.
LOCATION:Room #174
DTSTART:20250521T133000Z
DTEND:20250521T150000Z
END:VEVENT
BEGIN:VEVENT
UID:b01c4648-5d84-4965-a3f4-f753956ec017
DTSTAMP:20250517T085705Z
SUMMARY:Hands-On Kotlin Web Development With Ktor. Part 4.
DESCRIPTION:Ktor is a lightweight and flexible toolkit for building HTTP ap
 plications. This workshop will use the Kotlin programming language\, the K
 tor framework\, the Exposed database access library\, OpenAI\, and several 
 other Kotlin and Java libraries to build a feature-complete AI powered web 
 application.\n\nWe’ll start with the basics by exploring the Ktor framewor
 k and learning how to build a simple web application using essential funct
 ions. We’ll cover topics like handling HTTP requests\, working with WebSoc
 kets\, database access\, authentication\, logging\, and deployment.\n\nFor 
 testing\, we will look into the APIs that Ktor provides. Finally\, we will 
 explore the API for writing plugins and use it to create a simple plugin f
 or our Ktor application.\n\nBy the end of the workshop\, you’ll be able to
 :\n  - Structure Ktor projects\n  - Test Ktor applications\n  - Create and 
 deploy RESTful services using Ktor\n  - Integrate Ktor with external libra
 ries\n\nThis will be a fast-paced workshop where attendees will spend most 
 of their time coding. You will walk away armed with a cookbook of various 
 Ktor recipes for building feature-complete AI powered web application.
LOCATION:Room #176
DTSTART:20250521T133000Z
DTEND:20250521T150000Z
END:VEVENT
BEGIN:VEVENT
UID:d902c289-89e2-41f0-9dce-65e6a24c943f
DTSTAMP:20250517T085705Z
SUMMARY:Building Shared UI With Compose Multiplatform. Part 4.
DESCRIPTION:Take the next step in your cross-platform Kotlin journey with C
 ompose Multiplatform! This workshop is for developers already familiar wit
 h the basics of Kotlin Multiplatform and Jetpack Compose who are looking t
 o extend their skills by building a shared UI.\n\nWe’ll discuss how Compos
 e Multiplatform works and show you how your existing Compose skills are re
 usable across platforms. You’ll have hands-on time with a wide range of Co
 mpose features\, focusing on how they work across different platforms. Dur
 ing the workshop’s exercises\, you’ll work with Compose code\, explore API
 s\, build new features\, improve accessibility\, test the UI\, and more.\n
 \nCovering the latest available APIs and best practices\, we’ll equip you 
 with everything you need to start using Compose Multiplatform in your own 
 apps! Here is how the workshop will be structured:\n\nIntroduction\n- How 
 Compose Multiplatform works\n- Running Compose on Android\, iOS\, Desktop\
 , and Web\n- Writing basic Compose code for multiplatform use\n\nCompose b
 uilding blocks\n- Resources (localization\, fonts\, and more)\n- Image loa
 ding\n- ViewModels and architecture components\n- Navigation\n- Animations
 \n- Dependency injection\n- Theming\n\nMastering Compose Multiplatform\n- 
 Interop with native components\n- Dialogs\n- Insets\n- Accessibility\n- Te
 sting\n\nThis workshop includes exercises for participants to complete on 
 their own laptops. Using a MacBook is highly recommended for participation 
 in all exercises\, as iOS applications can only be built on macOS. Detaile
 d setup instructions will be provided prior to the workshop.
LOCATION:Room #178
DTSTART:20250521T133000Z
DTEND:20250521T150000Z
END:VEVENT
BEGIN:VEVENT
UID:28f99af8-68a6-47f3-b39c-8db92573bc1a
DTSTAMP:20250517T085705Z
SUMMARY:Deep Dive Into Kotlin Multiplatform: Advanced Techniques for Seamle
 ss Code Sharing. Part 4.
DESCRIPTION:This is an intermediate/advanced workshop for experienced Kotli
 n Multiplatform developers. It is aimed at developers who have built proje
 cts with Kotlin Multiplatform and Jetpack Compose / Compose Multiplatform 
 and now want to progress onto more advanced topics.\n\nThe workshop aims t
 o equip attendees with the skills to write high-quality code and apps usin
 g Kotlin Multiplatform. The workshop will address the following topics:\n\
 nA Gentle(r) Introduction\n- Introducing an example project\n- Explaining 
 project structure and architecture\n- Highlighting a few key libraries use
 d in the project\n\nNative Integrations\n- Splash screens\n- Notifications
 \n- Working with files\n\nAdvanced Kotlin Multiplatform for iOS Targets\n- 
 Debugging Kotlin/Swift\n- Understanding and improving Kotlin/Swift interop
 erability\n\nCode Quality\n- Code coverage with Kover (JVM-only)\n- Modula
 rization\n\nApp Quality\n- Fixing memory leaks\n- Performance testing\n- A
 pp size optimization\n\nManaging Workflows\n- Basics of building CI/CD pip
 elines for your apps\n\nYou will need to bring a MacBook along with you to 
 participate in all the practical exercises. Installation instructions will 
 be provided one week prior to the workshop.
LOCATION:Room #179
DTSTART:20250521T133000Z
DTEND:20250521T150000Z
END:VEVENT
BEGIN:VEVENT
UID:075ac00b-0233-4e16-a282-03f70d22f8ca
DTSTAMP:20250517T085705Z
SUMMARY:Refactoring to Functional Kotlin. Part 4.
DESCRIPTION:Kotlin supports both Object-oriented and functional styles of p
 rogramming\, but what should we do when we have OO code that should be fun
 ctional? Refactor\, of course!\n\nIn this workshop\, Nat and Duncan\, the 
 authors of Java to Kotlin: A Refactoring Guidebook\, take a web applicatio
 n and introduce techniques to gradually and safely migrate the code to the 
 functional style better suited to today’s architectures. Topics include:\n
 \n- Thinking in a functional way – Data\, Calculations\, and Actions\n- Mi
 grating from mutable objects to immutable data classes\n- Converting busin
 ess logic to a functional domain model\n- Where does the state live? Funct
 ional core / imperative shell\n- Choosing between functions and methods\n- 
 Functional error handling\n- Expand and Contract refactoring for safety ov
 er many commits
LOCATION:Room #180
DTSTART:20250521T133000Z
DTEND:20250521T150000Z
END:VEVENT
BEGIN:VEVENT
UID:e0dee23e-9556-4223-84f4-3803e5bb7298
DTSTAMP:20250517T085705Z
SUMMARY:Asynchronous Programming With Kotlin Coroutines. Part 4.
DESCRIPTION:In this workshop\, you’ll learn everything you need to know abo
 ut how to be productive with coroutines in Kotlin. We’ll start with the ba
 sics of asynchronous programming\, its differences from blocking code\, an
 d the concepts of suspending functions and coroutines. We’ll explore corou
 tine contexts\, concurrent decomposition of work via deferreds\, and struc
 tured concurrency with coroutine scopes.\n\nThe second part of the worksho
 p will be devoted to Kotlin Flows. We’ll study how Kotlin Flows are design
 ed on a basic level\, learn the difference between hot and cold flows\, di
 scuss their typical usage patterns\, and explore how they incorporate idea
 s from reactive streams. To deepen our understanding\, we’ll also take a p
 eek at some of the implementations behind flows and collectors. Throughout
 \, we’ll see how they help you in writing safe and reliable concurrent sys
 tems\, and how modern applications can use them to work with asynchronous 
 streams of data\, manage system states\, and broadcast events.\n\nThrough 
 this workshop\, you’ll enhance your coroutines-related vocabulary\, unders
 tand how to spot and avoid common problems\, and be able to effectively an
 d confidently use coroutines and flows in your own projects.
LOCATION:Room #181
DTSTART:20250521T133000Z
DTEND:20250521T150000Z
END:VEVENT
BEGIN:VEVENT
UID:3ba8eb73-1f6d-4e0b-ac02-f5c6477b6020
DTSTAMP:20250517T085705Z
SUMMARY:Registration
LOCATION:Keynote room
DTSTART:20250522T053000Z
DTEND:20250522T070000Z
END:VEVENT
BEGIN:VEVENT
UID:56872559-c7b3-44df-8bee-98ba120fd759
DTSTAMP:20250517T085705Z
SUMMARY:Opening keynote
LOCATION:Keynote room
DTSTART:20250522T070000Z
DTEND:20250522T080000Z
END:VEVENT
BEGIN:VEVENT
UID:769c6e51-ca8e-4d92-bd2c-45d42c7c37ec
DTSTAMP:20250517T085705Z
SUMMARY:Break
LOCATION:Hall D2
DTSTART:20250522T080000Z
DTEND:20250522T081500Z
END:VEVENT
BEGIN:VEVENT
UID:1144b2ba-5a8e-4284-8f11-3ad4739f716b
DTSTAMP:20250517T085705Z
SUMMARY:Kotlin and Spring: The modern server side stack
DESCRIPTION:Rod will discuss his experience switching from Java to Kotlin w
 hile building a server-side application implementing structured RAG.\n\nHe
 'll show code in a real application and reflect on the positives and negat
 ives: overwhelmingly\, positives. \n\nKotlin brings a modern language to a 
 mature\, hardened ecosystem and productive\, high quality framework. The r
 esult can be a thing of beauty. \n\n
LOCATION:Keynote room
DTSTART:20250522T081500Z
DTEND:20250522T090000Z
END:VEVENT
BEGIN:VEVENT
UID:14823d7f-af1c-4d3a-bd2e-98d63e91c913
DTSTAMP:20250517T085705Z
SUMMARY:Code Quality at Scale: Future-Proof Your Android Codebase with KtLi
 nt and Detekt
DESCRIPTION:Managing a large\, multi-team Kotlin codebase that has grown an
 d evolved over eight years is no small feat. Introducing architectural cha
 nges and ensuring alignment across multiple autonomous teams adds another 
 layer of complexity.\n\nIn this talk\, you’ll learn strategies to build mo
 re robust\, maintainable\, and future-ready codebases\, whether you’re sca
 ling a project or working in a large team. We’ll show how integrating stat
 ic analysis tools like Ktlint and Detekt into your CI pipeline can help yo
 u establish consistent coding standards and systematically reduce technica
 l debt. As a bonus\, we’ll explore how we were able to leverage custom Det
 ekt rules to help us safely enable r8 in a multimodule Android app.
LOCATION:Hall D2
DTSTART:20250522T081500Z
DTEND:20250522T090000Z
END:VEVENT
BEGIN:VEVENT
UID:1f9b5dc4-bc49-4feb-9e43-4c0429cc1f4e
DTSTAMP:20250517T085705Z
SUMMARY:Deploying Kotlin Multiplatform at Google Workspace
DESCRIPTION:I like to talk you through some of the bugs we found and optimi
 zations as we launched Kotlin Multiplatform to some users with Google Work
 space.   We'll talk through some bugs\, performance issues and fixes with 
 comparisons to ObjectiveC.   As well as a Q/A with the developers of worke
 d on this.
LOCATION:Auditorium 15
DTSTART:20250522T081500Z
DTEND:20250522T090000Z
END:VEVENT
BEGIN:VEVENT
UID:ab300b6c-e4eb-4349-b64e-46263732a647
DTSTAMP:20250517T085705Z
SUMMARY:Building an Agentic Platform with Kotlin: Powering one of Europe's 
 Largest LLM Bot
DESCRIPTION:How does one build a multi-tenant\, multi-channel enterprise ap
 plication for multiple European countries with a new and non-deterministic 
 technology such as LLMs?\n\nThis is the question my team and I asked ourse
 lves over a year and a half ago.\n\nJoin me in my talk to discover how we 
 helped build one of Europe's biggest LLM chatbots and how this led to Arc\
 , an open-sourced Kotlin-based AI framework that is now part of the Eclips
 e Foundation.\n\nWhat makes Arc interesting is how it combines Kotlin DSL 
 and scripting to enable developers to build LLM-powered agents fast and ef
 ficiently\, and most importantly\, ready for the enterprise.\n\nIn this se
 ssion\, we will go through the journey of how and why the framework was bo
 rn.\n\nWe'll take a look at some of the design decisions that were made an
 d some of the key features of the framework\, such as observability\, memo
 ry\, and tools\, highlighting how we tackle some of our biggest challenges
 .\n\nAt the end of this session\, you should have a good understanding of 
 the challenges in building an LLM application at this scale\, as well as s
 ome strategies for solving these problems.
LOCATION:Auditorium 11+12
DTSTART:20250522T081500Z
DTEND:20250522T090000Z
END:VEVENT
BEGIN:VEVENT
UID:c742c386-7664-4794-aeb4-c40232855a67
DTSTAMP:20250517T085705Z
SUMMARY:Compose Prototyping in Kotlin Notebooks
DESCRIPTION:With its unique mix of markdown and REPL-like nature\, Kotlin N
 otebooks is an excellent way to document or explore a new idea or an exist
 ing codebase. But did you know that Notebooks also support Compose and Swi
 ng?\n\nIn this lighting talk you will see how you can set up Notebooks to 
 access existing UI code or write new from scratch\, with the result being 
 shown directly in the notebook. And as a bonus on top\, all of this can sh
 ared directly as documentation on Github or in Gists.
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T081500Z
DTEND:20250522T083000Z
END:VEVENT
BEGIN:VEVENT
UID:51e5897a-63ad-4fe6-80ac-48b0f7e3cf39
DTSTAMP:20250517T085705Z
SUMMARY:Setting up your Mac for Kotlin Multiplatform Development
DESCRIPTION:If you have not built with KMP yet\, you will probably have to 
 install some software (e.g.\, Xcode\, iOS Simulator\, Android Studio Meerk
 at | 2024.3.1 or later). We recommend that you come to KotlinConf with all 
 of your KMP software installed as these applications are large and may tak
 e hours to install. But for those who need some help in getting everything 
 set up\, please join us.
LOCATION:Room #173
DTSTART:20250522T081500Z
DTEND:20250522T090000Z
END:VEVENT
BEGIN:VEVENT
UID:e597a293-eb62-484b-9957-ea4397aa2f2f
DTSTAMP:20250517T085705Z
SUMMARY:State of Kotlin/Wasm and Compose Multiplatform for Web on Modern Br
 owsers 
DESCRIPTION:Kotlin/Wasm and Compose Multiplatform for web allow Kotlin Mult
 iplatform developers to extend their reach to the modern browser. In this 
 lightning talk\, I’ll describe the current state of the platform and what 
 the JetBrains team is working on as we prepare for the Beta release.
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T084500Z
DTEND:20250522T090000Z
END:VEVENT
BEGIN:VEVENT
UID:11cc9518-4f1e-48de-a1d7-276af0524d95
DTSTAMP:20250517T085705Z
SUMMARY:Break
LOCATION:Hall D2
DTSTART:20250522T090000Z
DTEND:20250522T091500Z
END:VEVENT
BEGIN:VEVENT
UID:53b5e6f4-8540-457e-b915-cfbf54a28ecb
DTSTAMP:20250517T085705Z
SUMMARY:Rich Errors in Kotlin
DESCRIPTION:Kotlin's nullability model is one of its core features. In this 
 talk\, we’ll explore how this model can be generalized to restricted union 
 types specifically designed for handling error cases. \n\nAdditionally\, w
 e’ll discuss how errors can currently be represented in Kotlin\, covering 
 approaches such as nullable types\, exceptions\, sealed hierarchies\, and 
 Result-like classes.
LOCATION:Keynote room
DTSTART:20250522T091500Z
DTEND:20250522T100000Z
END:VEVENT
BEGIN:VEVENT
UID:89c167c9-d334-4feb-a481-c6742965fe16
DTSTAMP:20250517T085705Z
SUMMARY:What’s new in Amper
DESCRIPTION:Amper is an experimental\, standalone build tool for the Kotlin 
 Multiplatform and JVM ecosystem from JetBrains. In this talk\, we'll look 
 at what Amper is already capable of. We’ll dip our toes together into the 
 design principles behind Amper\, and see how they find their reflection in 
 the major features\, choices and tradeoffs of Amper.\n\nAnd of course - I’
 ll share a sneak peek into what the team is cooking\, and what one might e
 xpect from Amper in the future!
LOCATION:Hall D2
DTSTART:20250522T091500Z
DTEND:20250522T100000Z
END:VEVENT
BEGIN:VEVENT
UID:d159c0ad-63a1-4d23-88de-90372281e187
DTSTAMP:20250517T085705Z
SUMMARY:Next level Kotlin support in Spring Boot 4
DESCRIPTION:Spring and Kotlin teams collaborate to bring the Kotlin support 
 to the next level in the upcoming Spring Boot 4 release\, based on Spring 
 Framework 7\, to be released at the end of 2025.\n\nIn this brand new talk
 \, Sébastien will share new features that intend to improve the developer 
 experience and runtime efficiency of Spring Boot applications for Kotlin d
 evelopers.\n\nHe will cover the new Kotlin 2 baseline\, runtime efficiency 
 improvements\, better null-safety via JSpecify\, GraalVM native image spec
 ial Kotlin support\, new DSLs\, new Kotlin documentation and Spring AI Kot
 lin support.
LOCATION:Auditorium 15
DTSTART:20250522T091500Z
DTEND:20250522T100000Z
END:VEVENT
BEGIN:VEVENT
UID:6d83acc6-0ab0-48b4-9ab1-57d7029db959
DTSTAMP:20250517T085705Z
SUMMARY:Creative UIs with Compose
DESCRIPTION:While most folks associate Compose UI with Material\, its API a
 llows us to be more expressive than ever before.\n\nMobile UIs have become 
 homogenized and stale\, but video games continue to provide a wealth of in
 novation and creativity.\n\nIn this session we'll recreate a complex user 
 interface from the game Persona 5 to showcase how to really push Compose b
 eyond Material Design. Topics include:\n- Drawing custom shapes\n- Animati
 ng path data\n- Non-standard shapes in LazyColumn/LazyRow\n- Custom effect
 s inside LazyColumn/LazyRow\n- Remaining usable and accessible when not us
 ing Material\n- How/why video games can be a source of inspiration
LOCATION:Auditorium 11+12
DTSTART:20250522T091500Z
DTEND:20250522T100000Z
END:VEVENT
BEGIN:VEVENT
UID:918e14a7-2720-4629-b4cb-3e6e26fcacfe
DTSTAMP:20250517T085705Z
SUMMARY:Model Context Protocol in Kotlin
DESCRIPTION:MCP is an open protocol that standardizes how applications prov
 ide context to LLMs. We've created a Kotlin library that allows you to use 
 this protocol and connect AI models to tooling\, like IDEs. Now we will se
 e how it works in practice.
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T091500Z
DTEND:20250522T093000Z
END:VEVENT
BEGIN:VEVENT
UID:35e7f3ff-3e6f-47f0-b7f3-ef04c2b910a8
DTSTAMP:20250517T085705Z
SUMMARY:Kotlin's Gam[e]bit: LLM-less AI for Board Games
DESCRIPTION:Discover how Kotlin can power AI without relying on large langu
 age models. In this session\, we'll explore preparing data using Kotlin No
 tebooks\, training machine learning models directly in Kotlin\, and implem
 enting a strategy-driven bot for an online board game. Whether you're a Ko
 tlin enthusiast or curious about alternative approaches to AI\, this talk 
 will show how Kotlin shines as a tool for building efficient\, specialized 
 AI systems
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T094500Z
DTEND:20250522T100000Z
END:VEVENT
BEGIN:VEVENT
UID:46e704c2-4e13-45e8-9fe4-6ce875e19b08
DTSTAMP:20250517T085705Z
SUMMARY:Lunch
LOCATION:Keynote room
DTSTART:20250522T100000Z
DTEND:20250522T110000Z
END:VEVENT
BEGIN:VEVENT
UID:c9c887b5-86e0-496d-b7d7-bc59c262f7e3
DTSTAMP:20250517T085705Z
SUMMARY:From 0 to h-AI-ro: high-speed track to AI for Kotlin developers
DESCRIPTION:With the advent of ChatGPT and other generative AI models\, art
 ificial intelligence has taken a giant leap forward\, unlocking possibilit
 ies beyond our imagination while simultaneously challenging the establishe
 d way of doing. How does this exciting (r?)evolution impact us Kotlin deve
 lopers?\n\nIn this session\, we'll take a deep dive into the world of (gen
 erative) AI — giving you a clear and practical understanding of key termin
 ology\, concepts\, and frameworks relevant to the Kotlin ecosystem\, inclu
 ding powerful tools like Kotlin notebooks.\n\nGet to know:\n- Generative A
 I 101:  Get a hands-on introduction to the core concepts of modern AI — fr
 om Large Language Models (LLMs) and Natural Language Processing (NLP) to e
 mbeddings\, vector databases\, Retrieval-Augmented Generation (RAG)\, Tool
 s\, and Prompt Engineering.\n\n- Agentic AI: Go beyond simple prompts and 
 tool calls — discover how to build intelligent\, autonomous Agents using t
 he Model Context Protocol (MCP) to orchestrate complex\, context-aware beh
 avior.\n\n- Real-world integration:  Learn how to bring AI into your Kotli
 n applications — both server-side and mobile — using frameworks like LangC
 hain4j\, Spring AI\, and MCP clients and servers.\n \nThrough interactive 
 examples and live coding\, you will gain insights into how Kotlin can be l
 everaged with cutting-edge AI technologies\, opening doors to innovative p
 ossibilities in content generation\, natural language processing\, compute
 r vision\, and more.\n\nBy the end of this session\, you will emerge with 
 a comprehensive understanding of AI's potential within the Kotlin ecosyste
 m. Armed with this knowledge\, you'll be prepared to embrace the future as 
 a H-AI-ro!
LOCATION:Keynote room
DTSTART:20250522T110000Z
DTEND:20250522T114500Z
END:VEVENT
BEGIN:VEVENT
UID:ec4fb2ea-528f-409d-b954-6d87796260d6
DTSTAMP:20250517T085705Z
SUMMARY:The Life and Death of a Kotlin/Native Object
DESCRIPTION:Have you ever wondered what the Kotlin/Native runtime does? Wha
 t actually happens\, under the hood\, when you instantiate an object? How 
 is an object layed out? How does the runtime manage memory? What happens w
 hen an object is no longer needed?\n\nIn this talk\, you will get a look a
 t how all these problems are solved by the Kotlin/Native runtime. This is 
 a high level talk about a very low level topic\; you only need to know a b
 it of Kotlin to follow along.
LOCATION:Hall D2
DTSTART:20250522T110000Z
DTEND:20250522T114500Z
END:VEVENT
BEGIN:VEVENT
UID:ce7f0913-a4bc-4ea0-953d-071805e72022
DTSTAMP:20250517T085705Z
SUMMARY:A (deep) dive into (shallow) immutability: Valhalla and beyond
DESCRIPTION:Immutability is getting more and more attention in modern progr
 amming\, making code easier to reason about\, safer in concurrent environm
 ents\, and more maintainable. However\, adopting immutability isn’t withou
 t challenges\, as it does improve the developer experience\, but can often 
 come with runtime costs. In Kotlin\, immutability is already a key part of 
 the language design\, but there’s significant potential to push its bounda
 ries even further.\n\nThis talk begins by exploring the current state of i
 mmutability in Kotlin. We’ll highlight what features the language already 
 provides\, examine what’s missing\, and discuss the reasons behind these d
 esign decisions. From there\, we’ll take a closer look at Project Valhalla
 \, an upcoming JVM initiative that introduces value types and other innova
 tions\, enabling new possibilities for Kotlin. We’ll discuss how Valhalla 
 can help enhance Kotlin’s immutability story and improve the programming e
 xperience without significant trade-offs.\n\nFinally\, we’ll explore the b
 roader immutability design space for Kotlin\, looking beyond Valhalla to i
 magine what future extensions could look like. We’ll discuss how new immut
 ability features could integrate with existing ones\, such as smart casts 
 and coroutines\, while maintaining the language’s pragmatic and developer-
 friendly nature.\n\nJoin this session to discover how Kotlin can evolve it
 s immutability story to better meet the needs of modern developers\, combi
 ning practicality with innovation.
LOCATION:Auditorium 15
DTSTART:20250522T110000Z
DTEND:20250522T114500Z
END:VEVENT
BEGIN:VEVENT
UID:0506d027-9649-4609-b1b0-c8695b4ac826
DTSTAMP:20250517T085705Z
SUMMARY:APIs: How Hard Can They Be?
DESCRIPTION:Virtually every Android developer uses AndroidX libraries. With 
 KMP\, the usage is expanding to other platforms as well. The wide adoption 
 makes API design and evolution of these libraries critical for the user ex
 perience. Join me to learn about the life of an API in AndroidX: from an i
 dea\, to a design\, to a review\, and through an API evolution. You will h
 ear about our API review process and our use of Metalava and Kotlin Binary 
 Compatibility Verification tools  to wrangle JVM\, Android\, and KMP libra
 ries.
LOCATION:Auditorium 11+12
DTSTART:20250522T110000Z
DTEND:20250522T114500Z
END:VEVENT
BEGIN:VEVENT
UID:1060ad47-1688-4821-985a-ab1f3660faae
DTSTAMP:20250517T085705Z
SUMMARY:One Codebase\, Three Platforms: X's Experience with Kotlin Multipla
 tform
DESCRIPTION:What if you could share a single codebase across Android\, iOS\
 , and Web without sacrificing platform-specific experiences? Is it even po
 ssible? At X (formerly Twitter)\, with a tiny developer team\, we took the 
 leap with Kotlin Multiplatform to entirely rebuild one of our core feature
 s for our multi-million-user platform.\n\nIn this talk\, we'll take you th
 rough the highs and lows of adopting Kotlin Multiplatform in a real-world 
 project. Learn about our development process\, the libraries that made our 
 journey smoother\, and how we approached architecture\, navigation\, depen
 dency injection\, and UI for a consistent user experience across platforms
 .\n\nWe'll share practical lessons\, the challenges we faced\, and how Kot
 lin Multiplatform transformed our cross-platform development strategy. We'
 ll also explore one of the biggest challenges: gaining buy-in from iOS and 
 Web developers for Kotlin Multiplatform. We'll share how we addressed thei
 r concerns and built strong collaboration across teams. Whether you're cur
 ious about Kotlin Multiplatform or seeking tips to enhance your implementa
 tion\, this talk is for you!\n\nJoin us to see how Kotlin Multiplatform en
 abled us to ship faster and deliver a seamless experience\, even while tac
 kling the complexities of building for millions of users with a small\, fo
 cused team.
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T110000Z
DTEND:20250522T111500Z
END:VEVENT
BEGIN:VEVENT
UID:ce91fc75-dcba-4880-8852-89b8ddec8988
DTSTAMP:20250517T085705Z
SUMMARY: Two Years with Kotlin Multiplatform: From Zero to 55% Shared Code
DESCRIPTION:Two years ago\, StoneCo\, one of the largest fintech companies 
 in Latin America serving more than 4 million users\, embarked on a journey 
 to unify its mobile apps using Kotlin Multiplatform (KMP)\, aiming to bala
 nce the efficiency of code sharing with the seamless user experience requi
 red in the fintech sector. This talk explores our journey - how we evaluat
 ed multiple cross-platform frameworks\, overcame technical and organizatio
 nal challenges\, and achieved 55% code sharing across two large-scale mobi
 le applications.\n\nYou'll hear how we made the decision to adopt KMP\, ho
 w we trained 130 mobile engineers to embrace this paradigm shift\, and the 
 measurable impact it has had on team productivity\, developer satisfaction
 \, and app performance. Whether you're considering KMP or scaling it in yo
 ur organization\, this session will provide actionable insights from a rea
 l-world\, long-term implementation.
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T113000Z
DTEND:20250522T114500Z
END:VEVENT
BEGIN:VEVENT
UID:ca9d1bfe-ea2d-4b5b-86fa-bd115a738653
DTSTAMP:20250517T085705Z
SUMMARY:Break
LOCATION:Hall D2
DTSTART:20250522T114500Z
DTEND:20250522T120000Z
END:VEVENT
BEGIN:VEVENT
UID:e41c9314-9ae7-4d4b-930b-7ae00cd7071a
DTSTAMP:20250517T085705Z
SUMMARY:Compose Multiplatform for iOS: Ready for Production Use
DESCRIPTION:Compose Multiplatform\, the declarative framework by JetBrains 
 for building shared UIs\, is now stable and production-ready on iOS – so i
 t’s time to start building! In this talk\, you will get an overview of the 
 technology\, and see what we’ve done to get to the stable release.\n\nThis 
 includes the evolution of our APIs\, under-the-hood changes\, and new tool
 ing that we’re premiering for building Compose Multiplatform apps in your 
 favorite development environments\, IntelliJ IDEA and Android Studio. You’
 ll see that there’s a rich ecosystem available for you that has already gr
 own to cover all major areas of app development.\n\nPutting it all togethe
 r\, you’ll see how Compose Multiplatform enables you to write production-g
 rade apps on iOS and Android while reusing much of the knowledge you alrea
 dy have – and you’ll also get some insights into what we have planned next 
 in the journey of Compose Multiplatform\, on iOS and beyond.
LOCATION:Keynote room
DTSTART:20250522T120000Z
DTEND:20250522T124500Z
END:VEVENT
BEGIN:VEVENT
UID:5689be0a-3434-4bd2-9205-1342f5121414
DTSTAMP:20250517T085705Z
SUMMARY:Extending Ktor for Server Side Development
DESCRIPTION:While Kotlin is seeing widespread adoption for Server side deve
 lopment\, Ktor\, Kotlin's minimalistic and flexible framework for server a
 nd client side development\, is sometimes overlooked\, largely because Spr
 ing Boot still offers an exhaustive range of starters. \n\nTo bridge this 
 gap\, kotlin developers can utilise Ktor's fluent Plugin API to provide al
 l the functionality they need for their own use cases\, and those of the w
 ider community.\n\nIn this session\, we will discuss developing plugins fo
 r Ktor and demonstrate a few interesting plugins that complement the stand
 ard set of Ktor’s features.\n\nYou’ll learn how to seamlessly integrate es
 sential functionalities like Kafka for message-driven architectures\, impl
 ement advanced rate limiting for traffic control\, and enhance system resi
 lience with a sophisticated Circuit Breaker plugin. Each plugin is crafted 
 to offer flexibility and ease of integration\, making your development exp
 erience smoother and more efficient.
LOCATION:Hall D2
DTSTART:20250522T120000Z
DTEND:20250522T124500Z
END:VEVENT
BEGIN:VEVENT
UID:b8c3102d-d3e3-4b04-b0d0-ef1ad410d0bf
DTSTAMP:20250517T085705Z
SUMMARY:IoT development with Kotlin
DESCRIPTION:With the advent of Kotlin Multiplatform and Kotlin/Native\, com
 bined with IoT devices increasingly leveraging more powerful hardware capa
 ble of running Linux\, we now have the exciting opportunity to use Kotlin 
 for IoT development.\n\nThis talk will explore the key technologies requir
 ed for IoT devices and demonstrate how to integrate them using Kotlin. Fro
 m communication protocols like Matter\, MQTT\, and Bluetooth LE\, to essen
 tial tools and frameworks like embedded Linux\, D-Bus\, and Buildroot\, we 
 will delve into the strategies and best practices for successfully adoptin
 g Kotlin in IoT development.
LOCATION:Auditorium 15
DTSTART:20250522T120000Z
DTEND:20250522T124500Z
END:VEVENT
BEGIN:VEVENT
UID:e24eff21-f2eb-4bcb-be44-a5c28acdce64
DTSTAMP:20250517T085705Z
SUMMARY:Good Old Data
DESCRIPTION:I will be talking about data-oriented systems design: why we ne
 ed to stop hiding plain data and why object orientation no longer serves u
 s well. Starting from first principles and foundational definitions\, we’l
 l explore practical recipes and patterns for working with data in Kotlin. 
 Topics include serialization\, persistent data structures\, polymorphism\, 
 identity\, and state
LOCATION:Auditorium 11+12
DTSTART:20250522T120000Z
DTEND:20250522T124500Z
END:VEVENT
BEGIN:VEVENT
UID:4e0cb231-4e60-4949-b0b8-77897feb61f3
DTSTAMP:20250517T085705Z
SUMMARY:Get Started With Kotlin Multiplatform for Shared Business Logic
DESCRIPTION:Kotlin Multiplatform (KMP) allows you to write code once and sh
 are it across multiple target platforms\, such as Android\, iOS\, web\, an
 d JVM. By leveraging KMP\, you can minimize code duplication\, maintain co
 nsistency\, and significantly reduce development time and effort. In this 
 Codelab\, we will walk developers through taking a standalone Android app 
 and a standalone iOS app\, extracting some business logic to a KMP Shared 
 Module\, and leveraging this shared business logic from both Android and i
 OS.
LOCATION:Room #173
DTSTART:20250522T120000Z
DTEND:20250522T124500Z
END:VEVENT
BEGIN:VEVENT
UID:28350b71-58ac-4c40-8f28-832f229299d5
DTSTAMP:20250517T085705Z
SUMMARY:The wonders of smart casting
DESCRIPTION:Smart casting sets Kotlin apart from other languages. We often 
 see its effect through null checks and when expressions\, but in this talk 
 we'll show that smart casting is capable of much more! 
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T120000Z
DTEND:20250522T121500Z
END:VEVENT
BEGIN:VEVENT
UID:44e23fb8-3a98-47f9-9936-2eb6cfb04750
DTSTAMP:20250517T085705Z
SUMMARY:Building a macOS screen saver with Kotlin
DESCRIPTION:Two years ago\, sitting in the audience at KotlinConf\, I was m
 esmerised by the idle animation on the big screen. It was in the style of 
 old school DVD player screen savers\, with Kotlin's various logos through 
 the years bouncing from edge to edge.\n\nI later found out that this was a 
 pre-rendered video\, and not a screen saver that I could just grab and sta
 rt using. This meant that I had no choice but to build it myself\, as a na
 tive macOS application running on Kotlin/Native.\n\nJoin me for a tale of 
 Kotlin success and macOS failures\, as we explore just what it takes to bu
 ild a screen saver in Kotlin.\n\nWe'll see how easy it is to call native p
 latform APIs from Kotlin code\, what challenges the development of such an 
 unusual application presents\, and how macOS is very much not our friend o
 n this whole journey.
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T123000Z
DTEND:20250522T124500Z
END:VEVENT
BEGIN:VEVENT
UID:3341eaf2-05dc-4784-8f45-4a929613703c
DTSTAMP:20250517T085705Z
SUMMARY:Coffee Break
LOCATION:Keynote room
DTSTART:20250522T124500Z
DTEND:20250522T131500Z
END:VEVENT
BEGIN:VEVENT
UID:7763417c-6022-4607-b263-f5b5248e3bd7
DTSTAMP:20250517T085705Z
SUMMARY:Building AI Agents in Kotlin
DESCRIPTION:AI agents are fully autonomous systems whose actions are dynami
 cally directed by LLMs. In agents\, LLMs are not only used for standalone 
 tasks while keeping the general flow predefined in the code — they become 
 the main actor responsible for answering how a task should be accomplished
 .\n\nThis talk will provide an overview of AI agents\, including their bui
 lding blocks and basic workflows. It will share the essential knowledge fo
 r building effective AI agents in Kotlin.
LOCATION:Keynote room
DTSTART:20250522T131500Z
DTEND:20250522T140000Z
END:VEVENT
BEGIN:VEVENT
UID:24723974-8ffc-4998-9a02-df1a0236df58
DTSTAMP:20250517T085705Z
SUMMARY:Building Inclusive Jetpack Compose Apps: Leveraging Kotlin and the 
 Accessibility Scanner
DESCRIPTION:Accessibility is a growing and important aspect in app developm
 ent that isn’t always prioritized. Google’s efforts include making apps mo
 re accessible which are shown in their new standard of making UIs\, using 
 Jetpack Compose. Jetpack Compose with its Kotlin-based declarative approac
 h offers a simplified path to building inclusive UIs. Within Jetpack Compo
 se\, there are powerful tools like the Accessibility Scanner to quickly id
 entify and address common accessibility issues\, improving the overall use
 r experience. This talk will show that straightforward changes yield drama
 tic improvements for user experience. Through the talk\, strategies will b
 e shown how to improve accessibility. 
LOCATION:Hall D2
DTSTART:20250522T131500Z
DTEND:20250522T140000Z
END:VEVENT
BEGIN:VEVENT
UID:fc93824c-cce8-4389-a50f-7746700213aa
DTSTAMP:20250517T085705Z
SUMMARY:Blueprints for Scale: What AWS Learned Building a Massive Multiplat
 form Project
DESCRIPTION:The AWS SDK for Kotlin is a massive multiplatform project\, spa
 nning over 300 services and targeting 8 distinct platforms.\n\nIn this ses
 sion\, we’ll share first-hand insights into managing the challenges of a l
 arge Kotlin Multiplatform project\, detailing how the AWS SDK for Kotlin w
 as designed\, developed\, and scaled. You’ll hear about the best practices 
 we adopted\, the lessons learned\, and the strategies that worked (and did
 n’t) at AWS scale.\n\nJoin us as we discuss design tradeoffs\, maintaining 
 backwards compatibility\, adding support for Kotlin Multiplatform\, automa
 ting build and release processes\, and more!
LOCATION:Auditorium 15
DTSTART:20250522T131500Z
DTEND:20250522T140000Z
END:VEVENT
BEGIN:VEVENT
UID:a669b91a-b9bf-4aca-86b5-71fcce4fcd21
DTSTAMP:20250517T085705Z
SUMMARY:Introducing Compose Hot Reload
DESCRIPTION:Compose Hot Reload is a new plugin for Compose apps running on 
 the JVM\, which lets you see the results of your code changes live\, witho
 ut having to restart the app.\n\nIn this talk\, we'll look at where Compos
 e Hot Reload is today and how you can use it in your projects to make iter
 ating on UI code faster\, more convenient\, and more exciting!\n\nThen we'
 ll dive into the technical details to see how multiple JetBrains technolog
 ies came together\, step by step\, lifting a modern UI framework to the ne
 xt level. We'll also learn about all the fun issues encountered and decisi
 ons that had to be made along the way.
LOCATION:Auditorium 11+12
DTSTART:20250522T131500Z
DTEND:20250522T140000Z
END:VEVENT
BEGIN:VEVENT
UID:42a9faa5-913f-4396-9576-eb44dac87beb
DTSTAMP:20250517T085705Z
SUMMARY:Coroutine Debugging in IntelliJ IDEA
DESCRIPTION:During the past 1.5 years\, we’ve implemented the smooth corout
 ine debugging experience\, so it would feel almost the same as debugging s
 ynchronous code and even better! In this talk I will show you the capabili
 ties of coroutine debugger and best practices for debugging coroutines. Al
 so\, I’ll tell you a little bit about the challenges we faced while implem
 enting these improvements\, such as deep integration and communication bet
 ween the IDE and the coroutine library.
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T131500Z
DTEND:20250522T133000Z
END:VEVENT
BEGIN:VEVENT
UID:f5928c2f-323d-451b-9040-23d927011fdb
DTSTAMP:20250517T085705Z
SUMMARY:How to Build Your Own Kotlin Course
DESCRIPTION:Interested in teaching Kotlin? This session introduces a compre
 hensive set of materials designed to help you build your own Kotlin course
 . These resources include presentations with speaker notes\, theory quizze
 s\, homework assignments\, and interactive in-IDE courses that give studen
 ts hands-on experience. We will also share insights from implementing thes
 e materials at two universities\, and show how they can be adapted for dif
 ferent audience levels.
LOCATION:Room #173
DTSTART:20250522T131500Z
DTEND:20250522T140000Z
END:VEVENT
BEGIN:VEVENT
UID:5dcb9950-bae7-4926-b8ea-ce980ce93214
DTSTAMP:20250517T085705Z
SUMMARY:Coroutines and Structured Concurrency in Ktor
DESCRIPTION:Ktor is built from the ground up using Kotlin and Coroutines. I
 t allows us to leverage Structured Concurrency\, and easily build elegant 
 and robust applications.\n\nDiscover how Coroutines and CoroutineScopes wo
 rk in Ktor from the ground up\, and what patterns and best practices allow 
 building safe -and maintainable applications with Ktor in Kotlin.
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T134500Z
DTEND:20250522T140000Z
END:VEVENT
BEGIN:VEVENT
UID:da5f4a38-95eb-4f4c-a2f3-2c91a3914528
DTSTAMP:20250517T085705Z
SUMMARY:Break
LOCATION:Hall D2
DTSTART:20250522T140000Z
DTEND:20250522T141500Z
END:VEVENT
BEGIN:VEVENT
UID:bb277aed-04bb-47b2-a5ad-dccf64521a76
DTSTAMP:20250517T085705Z
SUMMARY:Full Stream Ahead: Breaking the protocol barrier with http4k
DESCRIPTION:HTTP's request-response pattern has served us well\, but modern 
 web applications demand more. Real-time communication demands different pr
 otocols\, yet maintaining testability and simplicity remains crucial to de
 veloper experience.\n\nIn this talk\, we'll explore how http4k extends HTT
 P's capabilities through WebSocket and Server-Sent Events support and how 
 these protocols can be modelled as simple functions\, making them as testa
 ble as plain HTTP endpoints. We'll then show how these streaming capabilit
 ies open up new possibilities for server-side rendering\, bringing us full 
 circle from the days of JSP to modern reactive interfaces - all while keep
 ing the complexity on the server where it belongs.\n\nJoin us to discover 
 how http4k's streaming capabilities can enhance your web applications\, en
 abling everything from chat applications to live dashboards and reactive s
 erver-rendered interfaces.
LOCATION:Keynote room
DTSTART:20250522T141500Z
DTEND:20250522T150000Z
END:VEVENT
BEGIN:VEVENT
UID:4ff90899-e673-493e-97ed-cca5dd1ef606
DTSTAMP:20250517T085705Z
SUMMARY:Multiplatform Settings: A case study in Multiplatform library devel
 opment
DESCRIPTION:How do I create libraries for Kotlin Multiplatform projects? Ko
 tlin lets you share common code between different target platforms\, but b
 y default only a limit set of platform-agnostic APIs are available to the 
 code. Growing the amount of APIs available required Kotlin Multiplatform l
 ibraries.\n\nI’ll talk through what it looks like to create such a library
 \, drawing from my experience building and maintaining one of my own since 
 the early days of Kotlin/Native. We'll talk about how to find shared abstr
 actions around different platform APIs\, how to handle the fast-paced evol
 ution of this environment\, and what this all felt like as a first-time li
 brary developer. When we're done\, you’ll be ready to leverage the growing 
 ecosystem as well as make your own contributions.
LOCATION:Hall D2
DTSTART:20250522T141500Z
DTEND:20250522T150000Z
END:VEVENT
BEGIN:VEVENT
UID:3cac6ee5-2484-4a9a-85ef-cd51e227908c
DTSTAMP:20250517T085705Z
SUMMARY:Compose draw speedrun - reloaded
DESCRIPTION:Let's see how many compose drawing techniques we can demo in 45 
 minutes. This live code speed run will start simple and quickly escalate. 
 I will try out as many drawing techniques as will fit into the time and sc
 reen space in a compose desktop app. Thanks to hot reloading we will be ab
 le to see the effects as the code changes.\n\nAt the end of this talk the 
 audience will:\n\n- have a good overview of what is possible with compose 
 drawing\n- see hot reload in action\n- get access to the open source repo 
 of samples as a reference
LOCATION:Auditorium 15
DTSTART:20250522T141500Z
DTEND:20250522T150000Z
END:VEVENT
BEGIN:VEVENT
UID:df2df47e-a6d4-400b-bd80-9185960f68ae
DTSTAMP:20250517T085705Z
SUMMARY:LangChain4j with Quarkus
DESCRIPTION:Kotlin is loved for its expressiveness\, Quarkus for its blazin
 g-fast runtime\, and LangChain4j for integrating AI into modern applicatio
 ns. But what happens when you bring all three together? You unlock the pot
 ential to build cutting-edge\, AI-powered applications efficiently.\n\nDes
 pite the growing demand for AI-driven solutions\, integrating AI workflows 
 into existing applications remains a challenge for many Kotlin developers. 
 Pain points include complex setup\, lack of synergy between frameworks\, a
 nd maintaining high performance while leveraging AI tools.\n\nThis talk of
 fers a solution: combining LangChain4j and Quarkus to create Kotlin applic
 ations that leverage AI capabilities seamlessly. We’ll explore how to stre
 amline integration\, manage dependencies\, and use Kotlin’s idiomatic feat
 ures to simplify AI workflows.\n\nWho is this talk for? Kotlin developers 
 curious about embedding AI into their apps\, and Quarkus fans eager to exp
 lore its potential in AI-driven use cases. Attendees will leave with actio
 nable insights\, including code samples\, to build AI-powered applications 
 confidently.
LOCATION:Auditorium 11+12
DTSTART:20250522T141500Z
DTEND:20250522T150000Z
END:VEVENT
BEGIN:VEVENT
UID:fd9eec2d-270e-447b-a307-6488cf6cdc8c
DTSTAMP:20250517T085705Z
SUMMARY:Interactive Session on Shaping Kotlin Education
DESCRIPTION:Kotlin is a popular choice for teaching programming\, and the K
 otlin Foundation Education Committee is here to support educators in using 
 it to its full potential.\n\nIn this session\, we’ll share current initiat
 ives for those teaching and learning Kotlin – whether in classrooms\, work
 shops\, or teams. You’ll learn how to get involved\, access available reso
 urces\, and connect with others in the teaching community.\nJoin us for an 
 interactive format featuring educators\, experts\, and members of the Kotl
 in Foundation Education Committee. Together\, we’ll explore how we can bet
 ter support your work\, address common challenges\, and discuss what we sh
 ould prioritize next.\n\nBring your questions!
LOCATION:Room #173
DTSTART:20250522T141500Z
DTEND:20250522T150000Z
END:VEVENT
BEGIN:VEVENT
UID:80c3c5f5-fdbc-4846-9a4d-9236a552d88c
DTSTAMP:20250517T085705Z
SUMMARY:Kotlin compatibility crash course
DESCRIPTION:A new version of Kotlin is out 🎉 Let's update all the things 🚀
  \nBut... what does it really mean to update your Kotlin version?\n\nIn th
 is talk\, we'll take a look at different parts of the Kotlin ecosystem: Ko
 tlin stdlib\, Gradle Plugin\, compiler\, K/N\, JS\, etc... and the differe
 nt compatibility guarantees they offer. \n\nWe'll dive into Android and Ja
 va. They have compatibility guarantees too!\n\nWhether you're developing a
 n Android app\, a server\, a library or a Gradle plugin\, we'll see how yo
 u can use the latest tooling while still giving your users plenty of time 
 to update on their own schedule. \nAfter this talk\, you'll never be afrai
 d to see "incompatible version of metadata" in your logs anymore!
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T141500Z
DTEND:20250522T143000Z
END:VEVENT
BEGIN:VEVENT
UID:fd3473d9-413d-45e8-84bc-6c8ed10c6237
DTSTAMP:20250517T085705Z
SUMMARY:Kotlin Worst Practices — How to Maximize Your Hassle
DESCRIPTION:Want to turn your Kotlin journey into a rollercoaster of frustr
 ation? You’re in the right place! In this session\, we’ll uncover the ulti
 mate strategies for making life harder: delightfully obtuse anti-patterns\
 , enthusiastically misusing language features\, and blissfully ignoring ec
 osystem best practices.\n\nPacked with real-world blunders\, this talk is 
 your shortcut to chaos!
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T144500Z
DTEND:20250522T150000Z
END:VEVENT
BEGIN:VEVENT
UID:412e913d-ec02-41ab-a427-85bac4677bc2
DTSTAMP:20250517T085705Z
SUMMARY:Break
LOCATION:Hall D2
DTSTART:20250522T150000Z
DTEND:20250522T151500Z
END:VEVENT
BEGIN:VEVENT
UID:2d3e1045-2209-428d-938b-eb201c280507
DTSTAMP:20250517T085705Z
SUMMARY:That's Unpossible – A full stack side project webapp (including a h
 igh-fidelity UI!) all in Kotlin
DESCRIPTION:It's happened to all of us – an idea strikes for a side project 
 and you want to build a quick webapp\, but then you remember the state of 
 webdev is still a bit of a mess in 2025. Sure you could pick up one of tho
 se "all-in-one" frameworks\, but they're so heavy and complicated. And eve
 n if that worked\, you'd still need something on the frontend so you start 
 looking at the the weird world of frontend frameworks or (gasp!) writing r
 aw HTML/CSS/JavaScript.\n\nBut it doesn't have to be that hard! I'm here t
 o present a straightforward stack that gets you a full stack webapp up and 
 running fast\, using the one language we all know and love – Kotlin. Datab
 ase manipulation\, async services\, and a high fidelity UI\, all accessed 
 and built with Kotlin. And yes\, you read that right – you can have a grea
 t UI without having to write a single line of CSS\, HTML\, or JavaScript.\
 n\nI'll show you a path for building a basic webapp on top of a simple dat
 abase (Postgres)\, performing basic CRUD operations on that database (Kotl
 in Exposed)\, building business logic via async services (Kotlin Coroutine
 s)\, and constructing a high-fidelity UI to bring it all together (Vaadin 
 on Kotlin). By the end of the talk we'll have a fully functional webapp th
 at is entirely built on Kotlin.\n\nAnd let's not forget\, we're not buildi
 ng a by-the-book\, very serious webapp\, just something we're doing on the 
 side for fun. So forget about tests and forget about perfect architecture 
 – let's have some fun\, learn a few things along the way\, and get this th
 ing running!
LOCATION:Keynote room
DTSTART:20250522T151500Z
DTEND:20250522T160000Z
END:VEVENT
BEGIN:VEVENT
UID:102c224b-90cf-4063-9071-62ac235cef7c
DTSTAMP:20250517T085705Z
SUMMARY:Build your own NES Emulator... with Kotlin
DESCRIPTION:Let Fools Dream\n\nFor those who have ever wanted to recreate c
 lassic games\, this presentation covers my five-year journey to build a NE
 S emulator in Kotlin. Starting from scratch in 2020 (you can probably gues
 s why)\, I’ll share the challenges posed by the architecture of old hardwa
 re\, performance optimization (surprise\, surprise)\, and the difficulties 
 of emulating sound. I’ll also highlight which Kotlin features shine (and w
 hy concurrency isn’t one of them). This high-level overview will walk thro
 ugh each step of the process—from reading ROM formats to where GPT can hel
 p\, though it won’t write the code for us just yet. We’ll wrap up by launc
 hing Mario on the emulator (hopefully without a call from Nintendo).
LOCATION:Hall D2
DTSTART:20250522T151500Z
DTEND:20250522T160000Z
END:VEVENT
BEGIN:VEVENT
UID:547901c7-ef9d-426e-bdd1-425770464ff7
DTSTAMP:20250517T085705Z
SUMMARY:Making native SDKs Multiplatform at RevenueCat
DESCRIPTION:In the rapidly evolving Kotlin Multiplatform ecosystem a critic
 al gap has been the lack of a unified in-app purchase and subscription sol
 ution. Until now\, that is. The RevenueCat SDK for Kotlin Multiplatform al
 lows you to write your subscription code once and run it on both Android a
 nd iOS. But how did we build it? We have existing native SDKs for both And
 roid and iOS\, and did not want to rewrite all core logic. This talk will 
 cover the strategies\, pitfalls and learnings of our approach to bringing 
 native SDKs to Kotlin Multiplatform.\n\n
LOCATION:Auditorium 15
DTSTART:20250522T151500Z
DTEND:20250522T160000Z
END:VEVENT
BEGIN:VEVENT
UID:92f1cf2e-c28c-4db9-9b27-3156b21463b3
DTSTAMP:20250517T085705Z
SUMMARY:Writing Your Third Kotlin Compiler Plugin
DESCRIPTION:Compiler plugins have become an integral part of a developer’s 
 experience with the Kotlin programming language. Areas like UI development 
 (Jetpack Compose)\, backend development (Spring Boot / Kotlin Serializatio
 n)\, and even testing (Power-Assert) all leverage compiler plugins. But wh
 at is a Kotlin compiler plugin and what can it do? Let’s learn by writing 
 one!\n\nIn this talk\, we’ll discuss use cases for compiler plugins and le
 arn how they integrate with the Kotlin compiler. Then we’ll explore everyt
 hing related to how code is represented within the Kotlin compiler\, inclu
 ding how to inspect\, navigate\, transform\, and create these representati
 ons. When we’re done\, we’ll have written a compiler plugin from scratch w
 hich can navigate the project code\, inspect annotations\, generate boiler
 plate\, and even report errors!
LOCATION:Auditorium 11+12
DTSTART:20250522T151500Z
DTEND:20250522T160000Z
END:VEVENT
BEGIN:VEVENT
UID:99eb4ee6-de3c-4d1f-8011-ef14f87eb8f9
DTSTAMP:20250517T085705Z
SUMMARY:Party
LOCATION:Keynote room
DTSTART:20250522T160000Z
DTEND:20250522T200000Z
END:VEVENT
BEGIN:VEVENT
UID:a2b2d707-b300-4ee8-9d24-52173a731f56
DTSTAMP:20250517T085705Z
SUMMARY:Registration
LOCATION:Keynote room
DTSTART:20250523T060000Z
DTEND:20250523T070000Z
END:VEVENT
BEGIN:VEVENT
UID:5ea5dda2-4a9e-4896-b951-bd8e73e0450a
DTSTAMP:20250517T085705Z
SUMMARY:Qualities of a Well-Functioning System
DESCRIPTION:“We can't impose our will on a system. We can listen to what th
 e system tells us\, and discover how its properties and our values can wor
 k together to bring forth something much better than could ever be produce
 d by our will alone.” -- Donella Meadows\n\nRelational complexity in softw
 are is constantly increasing. Data pipelines become a mesh. A monoliths be
 comes microservices. Synchronous database transactions become event-driven 
 architectures. Infrastructure becomes DevOps. Software is becoming systems 
 of software.\n\nAs technology professionals\, we are trapped between the d
 esire for control and the reality of systems. Increasingly\, we act amidst 
 ambiguity and uncertainty. We diversify and expand our skillset.  Systems 
 challenge our thinking patterns and core mental models. \n\nFortunately\, 
 there are some core principles for designing healthy systems. I don't mean 
 (strictly) scalability or microservices. Three qualities are inherent in w
 ell-functioning systems: resilience\, self-organization and hierarchy. \n\
 nEach of the qualities\, guaranteed\, differ from your current definition. 
 In this keynote\, we will explore them from a systems point of view.
LOCATION:Keynote room
DTSTART:20250523T070000Z
DTEND:20250523T080000Z
END:VEVENT
BEGIN:VEVENT
UID:1dc4e395-22e7-439e-a87e-1f6315427c26
DTSTAMP:20250517T085705Z
SUMMARY:Break
LOCATION:Hall D2
DTSTART:20250523T080000Z
DTEND:20250523T081500Z
END:VEVENT
BEGIN:VEVENT
UID:8b42e08c-8c2f-48f6-84e2-4d74106e7644
DTSTAMP:20250517T085705Z
SUMMARY:Dissecting Kotlin: Surveying the Latest Stable and Experimental
DESCRIPTION:As Kotlin evolves\, not only do the features available to us as 
 developers evolve\, but so does our understanding of what idiomatic Kotlin 
 is\, how we can best leverage new and old features and the semantic and pe
 rformance impacts of our implementation choices.\n\nIn this session\, we w
 ill examine some of the features released over the last couple of years in 
 Kotlin\, dive into their implementations\, explore where we may need them 
 and how we might use them\, and discuss how these features fit into the br
 oader ideas and themes of Kotlin as a language.
LOCATION:Keynote room
DTSTART:20250523T081500Z
DTEND:20250523T090000Z
END:VEVENT
BEGIN:VEVENT
UID:59f315c5-9bbb-4418-8843-6144f5c94429
DTSTAMP:20250517T085705Z
SUMMARY:Dependencies and Kotlin/Native
DESCRIPTION:In the JVM world\, the virtual machine and its class loaders do 
 the heavy lifting of linking and loading our applications with dependencie
 s. When we use Kotlin Multiplatform to produce a native binary\, we lose t
 he simplicity of JAR archives and .class files.\n\nIn this session\, we'll 
 explore the differences between how JVM and native platforms handle depend
 encies. We'll look at some of the common blockers that native platforms th
 row our way and possible workarounds. We'll also compare dependency manage
 ment tools used on Apple platforms like CocoaPods and Swift Package Manage
 r to see their strengths and weaknesses.\n\nLearn how native dependencies 
 interact\, how they are loaded and the unexpected complexities of the nati
 ve world.
LOCATION:Hall D2
DTSTART:20250523T081500Z
DTEND:20250523T090000Z
END:VEVENT
BEGIN:VEVENT
UID:899e6624-0526-4f1c-a731-41c95126fa56
DTSTAMP:20250517T085705Z
SUMMARY:Collect Like a Pro: a deep dive on the Android lifecycle-aware coro
 utines APIs
DESCRIPTION:Collecting in a lifecycle-aware manner is essential for saving 
 system resources. Since coroutines and flows are the recommended solution 
 for asynchronous programming on Android\, there are APIs that do most of t
 he heavy-lifting work for you. Namely: repeatOnLifecycle\, flowWithLifecyc
 le\, and Compose’s collectAsStateWithLifecycle. When building for Android\
 , you should include these libraries in your toolbox. But even if you’re d
 oing KMP\, you should keep this in mind.\n\nIn this talk\, we’ll see the d
 ifferent lifecycle-aware coroutines APIs\, the problems they solve\, and w
 hich types of flows can make your system waste resources—Disclaimer! A col
 d flow backed by a Channel or Flow operators with buffers might be under i
 nvestigation. Prepare to roll up your sleeves as we dissect their implemen
 tation details and learn low-level coroutines and Compose APIs. But the jo
 urney doesn't end there! To help you think as a library developer\, we’ll 
 explore an API regret that never made it into stable to protect developers 
 from misusing the API and force them respect coroutines’ structure concurr
 ency.\n\nBy the end of the talk\, you'll understand the importance of coll
 ecting in a lifecycle-aware manner\, use low-level coroutines APIs to buil
 d your own APIs\, and design APIs that respect structure concurrency and p
 rotect your users from misuse.
LOCATION:Auditorium 15
DTSTART:20250523T081500Z
DTEND:20250523T090000Z
END:VEVENT
BEGIN:VEVENT
UID:5efca4b9-8b95-4f79-9548-6ad196c5d273
DTSTAMP:20250517T085705Z
SUMMARY:Taming Asynchronous Beasts: Debugging and Performance Tuning in a C
 oroutine World
DESCRIPTION:Asynchronous code can be challenging to debug and optimize\, es
 pecially when dealing with complex coroutine hierarchies and flow transfor
 mations. This session reveals practical techniques for tracking down elusi
 ve bugs\, optimizing performance\, and maintaining reliability in coroutin
 e-heavy applications.\n\nDrawing from real production experience\, we'll e
 xplore advanced debugging techniques\, common performance pitfalls\, and p
 ractical solutions for the most challenging scenarios. You'll learn how to 
 effectively use built-in tools\, recognize problematic patterns\, and impl
 ement proven optimization strategies.
LOCATION:Auditorium 11+12
DTSTART:20250523T081500Z
DTEND:20250523T090000Z
END:VEVENT
BEGIN:VEVENT
UID:99042f3e-f951-41ef-8c18-c9578b92be02
DTSTAMP:20250517T085705Z
SUMMARY:Leveraging KMP for navigation in the McDonalds App.
DESCRIPTION:KMP is well known as THE domain layer framework for Android and 
 iOS. But why not take it further! In our pursuit to create the slimmest po
 ssible android and iOS apps\, where KMP handles everything except the UI. 
 Our next step is taking control of the navigation system. But Handling and
 roid and iOS navigation from a cross platform environment is not easy. In 
 this talk we tell you how it is done\, what challenges we overcame and whe
 re we are now.!
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250523T081500Z
DTEND:20250523T083000Z
END:VEVENT
BEGIN:VEVENT
UID:6e5d793e-4cce-44b1-8c39-e8fdd0bb8c69
DTSTAMP:20250517T085705Z
SUMMARY:Kotlin Multiplatform's Cross-Platform Brilliance at Norway's 377-Ye
 ar-Old National Postal Service
DESCRIPTION:Do you have a complex business rule-set problem? You know the k
 ind where you have business rules (logic) spread across multiple platforms
 \, systems and applications? Some of them might even be alter egos of the 
 same rule hiding in different apps. You never know which one might turn up 
 where\, there is no single source of truth\, solving errors takes hours of 
 debugging\, and making changes requires (oftentimes) painful coordination 
 across teams and applications (ugh).\n\nWe faced this exact challenge at P
 osten Bring As - Norwegian National Postal Service founded way back in 164
 7 - a 377-year-old institution with software spanning more generations tha
 n most families! Our business logic was scattered across multiple platform
 s\, some almost as old as the company itself (well\, not quite\, but it su
 re felt like it).\n\nIn my session I’m spilling the tea. We discover how t
 he team at century-old Norwegian postal services giant tackled modern chal
 lenges with cutting-edge technology.\n\nWe’ll look through real-world use 
 cases at Posten Bring. We’ll reflect on what we did - key learnings\, what 
 went well and most importantly - what didn’t quite go as planned. We’ll al
 so look through some resources to get started. We'll learn how KMP provide
 s a unified framework for code sharing and execution across various platfo
 rms to solve the challenge of different codebases targeting different runt
 imes.\n\nThis talk is for you if troublesome and unruly business logic kee
 ps you up at night and you want that to end NOW. It is also for you if you 
 like to hear a good story.
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250523T084500Z
DTEND:20250523T090000Z
END:VEVENT
BEGIN:VEVENT
UID:08161330-2e02-4bf3-be22-a45afec1c4b0
DTSTAMP:20250517T085705Z
SUMMARY:Break
LOCATION:Hall D2
DTSTART:20250523T090000Z
DTEND:20250523T091500Z
END:VEVENT
BEGIN:VEVENT
UID:bb372a5d-6b2e-4ef5-8ebf-0c69c29f484e
DTSTAMP:20250517T085705Z
SUMMARY:Designing Kotlin Beyond Type-Inference
DESCRIPTION:Kotlin programmers regularly elide uninformative types from the
 ir programs. This makes Kotlin programs faster to develop\, easier to read
 \, and less effort to maintain. It also means the Kotlin language needs to 
 be designed so that its compilers can reliably accept programs without the
 se typing hints. We think of this as type-inference\, but—by definition—ty
 pe-inference means determining these missing types can be filled in such t
 hat the program type-checks.\n\nBut what if we can determine a program is 
 safe without determining these missing types? What if we can do so even wh
 en it such types do not exist? And what if we can do so more efficiently t
 han any type-inference algorithm can?\nIn researching Kotlin's next-genera
 tion typing algorithms\, we have discovered we can efficiently exceed the 
 capabilities of type-inference and type-checking. We have developed a type
 -"outference" algorithm that efficiently decides "type-consistency"\, whic
 h all type-inferable/checkable programs satisfy (but not vice versa).\n\nW
 hile type-inference still has its place in user feedback and compilation\, 
 type-consistency is a much more flexible property\, and type-outference of
 fers clear guidelines on how to design features for efficient validation. 
 In this talk\, after introducing these concepts\, we will provide a behind
 -the-scenes look into how they guide the design of various expected and hy
 pothetical features for Kotlin\, such as union types for errors\, conditio
 nal inheritance for type-safe equality with value types\, and implicit pol
 ymorphism for non-escaping references.
LOCATION:Keynote room
DTSTART:20250523T091500Z
DTEND:20250523T100000Z
END:VEVENT
BEGIN:VEVENT
UID:973ea4d6-929c-423f-beed-4eeca5c398f2
DTSTAMP:20250517T085705Z
SUMMARY:Build Websites in Kotlin & Compose HTML with Kobweb
DESCRIPTION:Want to build a website using Kotlin? Kobweb is a modern web fr
 amework that makes web development enjoyable by leveraging Compose HTML an
 d drawing inspiration from Jetpack Compose.\nWith Kobweb\, you can create 
 a portfolio site\, product landing page\, personal blog\, and more—all whi
 le benefiting from Kotlin’s concise\, expressive\, and type-safe syntax.\n
 In this live coding session\, we’ll introduce the fundamentals of Kobweb a
 nd Compose HTML\, walking you through the process of building a functional 
 website using Kotlin/JS. By the end\, you’ll see just how easy it is to de
 velop and export a traditional website—embracing HTML\, CSS\, and the DOM 
 through a Kotlin-first\, Compose-powered approach.\nThis talk is designed 
 for beginners\, and no prior web development experience is required.\nIf y
 ou’re curious about web development and want to explore a Kotlin-powered\, 
 type-safe\, Compose API for building modern websites\, this session is the 
 perfect place to start!
LOCATION:Hall D2
DTSTART:20250523T091500Z
DTEND:20250523T100000Z
END:VEVENT
BEGIN:VEVENT
UID:36e4a68d-e30e-440e-ac41-47fb853f7678
DTSTAMP:20250517T085705Z
SUMMARY:Duolingo + KMP: A Case Study in Developer Productivity
DESCRIPTION:Duolingo ships weekly on iOS and Android to 40M+ Daily Active U
 sers across 176 countries. Shipping fast is important to us and Kotlin Mul
 tiplatform is starting to play a huge role in how we accomplish this!\n\nI
 n this talk\, we’ll:\n- Discuss how we shipped Video Call\, Math\, Adventu
 res and more across Android\, iOS\, and Web\n- Propose what potential upco
 ming projects could benefit from KMP and the rubric we use\n- Share the ch
 allenges faced and lessons learned along the way\n\n…and more!
LOCATION:Auditorium 15
DTSTART:20250523T091500Z
DTEND:20250523T100000Z
END:VEVENT
BEGIN:VEVENT
UID:c7d1f596-1059-4986-9bd6-4a8e6a197e55
DTSTAMP:20250517T085705Z
SUMMARY:Exposed 1.0: Stable\, Scalable\, and Looking Forward
DESCRIPTION:Exposed is a database access library that provides a type-safe 
 SQL DSL\, a powerful ORM\, and reliable database interactions as a seamles
 s extension of any Kotlin developer’s code.\n\nThe team behind the library 
 has been working towards its first stable version and recently published a 
 beta release. This talk aims to provide a detailed insight into what stabi
 lity will mean for the library\, as well as to highlight the enhanced feat
 ures that have been implemented over time.\n\nWe’ll also cover the introdu
 ction of support for non-blocking database operations using R2DBC with Kot
 lin coroutines\, as well as the challenges encountered during its developm
 ent.\n\nLastly\, to share a look into the future of Exposed\, we’ll touch 
 on planned features for later stable versions\, like integrated support fo
 r database migrations\, which address the library’s position as a database 
 access solution in Kotlin Multiplatform development.
LOCATION:Auditorium 11+12
DTSTART:20250523T091500Z
DTEND:20250523T100000Z
END:VEVENT
BEGIN:VEVENT
UID:7d3368b0-53ec-482e-a3c9-ce11533b30e0
DTSTAMP:20250517T085705Z
SUMMARY:Get Started With Kotlin Multiplatform for Shared Business Logic 
DESCRIPTION:Kotlin Multiplatform (KMP) allows you to write code once and sh
 are it across multiple target platforms\, such as Android\, iOS\, web\, an
 d JVM. By leveraging KMP\, you can minimize code duplication\, maintain co
 nsistency\, and significantly reduce development time and effort. In this 
 Codelab\, we will walk developers through taking a standalone Android app 
 and a standalone iOS app\, extracting some business logic to a KMP Shared 
 Module\, and leveraging this shared business logic from both Android and i
 OS.
LOCATION:Room #173
DTSTART:20250523T091500Z
DTEND:20250523T100000Z
END:VEVENT
BEGIN:VEVENT
UID:fe4fd192-b0e4-443f-bebe-f65bf8b78225
DTSTAMP:20250517T085705Z
SUMMARY:Getting your Gradle setup right\, at the right time
DESCRIPTION:Let’s address the elephant in the room - setting up a Gradle pr
 oject in a proper scalable way is hard. What’s even more challenging is do
 ing this once the project is already scaled and running. What’s nearly imp
 ossible is learning what “a good scalable setup” actually means on your ow
 n.\n\nSo what does a good scalable setup mean? Are the best practices univ
 ersal for all types of project? Are there Kotlin specific best practices? 
 When and how should you introduce them? Let’s dive in!
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250523T091500Z
DTEND:20250523T093000Z
END:VEVENT
BEGIN:VEVENT
UID:a158ff54-96ef-4a43-b094-4593117899c5
DTSTAMP:20250517T085705Z
SUMMARY:Build your Kotlin and Android apps with Buck2
DESCRIPTION:We're happy to announce that Buck2\, a large-scale open source 
 build system from Meta\, now supports Kotlin and Android. Buck2  builds al
 l Android applications at Meta with a focus on fast incremental iterations 
 with code. \nWe will start building an app from basics and then learn some 
 advance buck2 capabilities\, like Remote Execution\, Source-only ABI\, and 
 Build Tools API integrations  
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250523T094500Z
DTEND:20250523T100000Z
END:VEVENT
BEGIN:VEVENT
UID:b56ade96-9801-4a31-b90e-eb65388d7660
DTSTAMP:20250517T085705Z
SUMMARY:Lunch
LOCATION:Keynote room
DTSTART:20250523T100000Z
DTEND:20250523T110000Z
END:VEVENT
BEGIN:VEVENT
UID:55d7a0f1-62da-4936-9ded-4d33c95436bb
DTSTAMP:20250517T085705Z
SUMMARY:The Easing Symphony: AnimationSpec in detail!
DESCRIPTION:Let's take a deeper look at AnimationSpec and learn how to use 
 it to customize animations! With music!\n\nUsing Compose Multiplatform\, w
 e'll go over the different AnimationSpec types we have\, and which persona
 lization options they offer. We'll cover topics from how to use AnimationS
 pec\, to how to create your own easing curves. And since animations are me
 ant to be fun\, we'll do all of this while creating a music visualizer!\n\
 nAfter this talk\, you'll have a better understanding on how powerful anim
 ationSpec is\, and how you can use it to create complex and fun animations
 .\n\nKeep it fun\, keep it animated! :)\n
LOCATION:Keynote room
DTSTART:20250523T110000Z
DTEND:20250523T114500Z
END:VEVENT
BEGIN:VEVENT
UID:ef46316c-5b2a-4ec9-ba89-be08e04da34f
DTSTAMP:20250517T085705Z
SUMMARY:Project Sparkles: How Compose for Desktop is changing Android Studi
 o and IntelliJ
DESCRIPTION:Many of us use Android Studio and IntelliJ every day\, and appr
 eciate how its rich feature set makes our job easier. Most people know tha
 t both products are built on the IntelliJ Platform\, the same that underpi
 ns the popular IDEs from JetBrains\, which has seen lasting success for ov
 er 20 years. It’s a solid\, expansive\, and by far the best foundation on 
 which we could stand on to deliver developer goodies.\n\nHowever\, some pa
 rts of the IntelliJ Platform show the signs of time\; in particular its UI 
 framework\, Swing\, is proving the most limiting\, having been around for 
 almost 30 years. Don’t get us wrong — it works\, and the IDEs themselves p
 rove you can ship complex UIs by using Swing on the IntelliJ Platform. But 
 as we looked at how nice it is to develop UIs on desktop by using Compose 
 for Desktop\, we thought: why don’t we do the same?\n\nEnter Project Spark
 les\, which aims at gradually introducing new high-quality\, polished UI s
 urfaces in Android Studio and IntelliJ\, developed in Compose for Desktop\
 , with all the bells and whistles you can expect from a top-tier interface
 . In this talk\, we’ll cover how Project Sparkles is impacting the develop
 ment of Android Studio and IntelliJ\, addressing long-standing user feedba
 ck\, and how Google and JetBrains are working together to build a framewor
 k to make your favorite IDE even better and easier to understand.\n\nWe’ll 
 demonstrate a few examples of features already shipping that are powered b
 y Project Sparkles\, explain what our goals and ambitions are\, and even s
 how some sneak peeks of things you may see in a future IDE version. We wil
 l also cover a roadmap on when developers can expect to use Compose for De
 sktop as a supported UI framework for IntelliJ plugin development!\n\nUI e
 nthusiasts\, assemble!
LOCATION:Hall D2
DTSTART:20250523T110000Z
DTEND:20250523T114500Z
END:VEVENT
BEGIN:VEVENT
UID:4b9dcf81-45d6-44cf-a198-b37702a9975e
DTSTAMP:20250517T085705Z
SUMMARY:Don't forget your values!
DESCRIPTION:No one likes to be forgotten\, and the results of most non-unit 
 function calls are no exception here. 'Check return value' or 'ignored cal
 l result' may sound familiar — those are popular Java linters' rules. Howe
 ver\, in our view\, this inspection is so crucial that it deserves its pla
 ce among compiler diagnostics. In this talk\, we'll explore the challenges 
 and complexities down the road of making a brand-new language feature. And
 \, of course\, how you can use it for your benefit.
LOCATION:Auditorium 15
DTSTART:20250523T110000Z
DTEND:20250523T114500Z
END:VEVENT
BEGIN:VEVENT
UID:e99f1ce6-fa3c-41e9-b8b5-f3c902efc71f
DTSTAMP:20250517T085705Z
SUMMARY:Event-Driven Analytics: Building Real-Time Dashboards with Apache F
 link and Ktor
DESCRIPTION:The ability to process continuous data streams and deliver real
 -time insights has become crucial in modern application architectures. As 
 a developer you are probably very comfortable with RESTful services\, and 
 shifting to event-driven thinking opens new possibilities for responsivene
 ss and scalability (as well as new challenges and growing paints).\n\nThis 
 talk will explore building real-time analytics dashboards by combining Apa
 che Flink's powerful stream processing capabilities with Ktor's flexible w
 eb framework. We'll journey through the mental model transformation from r
 equest/response patterns to continuous event flows\, demonstrating how thi
 s shift enables truly reactive applications.\n\nYou'll learn:\n* How Apach
 e Flink handles stateful stream processing\, offering advantages for compl
 ex analytics use cases\n* Leveraging Flink's Table API and SQL capabilitie
 s to express complex transformations with familiar syntax\n* Implementing 
 real-time dashboards with Ktor and other Kotlin libraries\n\nBy the end of 
 this session\, you'll understand how to bridge the gap between powerful ba
 ckend stream processing and engaging user interfaces\, all while staying i
 n the Kotlin ecosystem. Regardless\, if you're a seasoned data streaming e
 ngineer or just beginning to explore beyond REST\, you'll bring home pract
 ical techniques for delivering real-time insights to your users.\n
LOCATION:Auditorium 11+12
DTSTART:20250523T110000Z
DTEND:20250523T114500Z
END:VEVENT
BEGIN:VEVENT
UID:211978b6-1014-41a7-bc2e-ab7043b7715f
DTSTAMP:20250517T085705Z
SUMMARY:JSpecify: Java Nullness Annotations and Kotlin
DESCRIPTION:Q: Why should I care about Java nullness annotations?\n\nA: Bec
 ause they’ll make Kotlin code that uses Java libraries safer\, and because 
 they’ll make it easier to convert Java code to Kotlin.\n\nJSpecify release
 d a set of nullness annotations for Java in July. Unlike all the other nul
 lness annotations for Java\, JSpecify’s are defined by tool-agnostic speci
 fication. That means that all the Java nullness analyzers will agree on wh
 at they mean\, and the Kotlin compiler will too. And that means that your 
 Kotlin code will be able to use null-safe types instead of platform types 
 when it depends on well-annotated Java libraries.\n\nIn this talk\, we’ll 
 explain how Java nullness annotations will help you\, and how JSpecify’s w
 ork. We’ll also tease upcoming projects that aren’t about nullness but mig
 ht help your Kotlin code too.\n\n
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250523T113000Z
DTEND:20250523T114500Z
END:VEVENT
BEGIN:VEVENT
UID:4df3df6d-acd6-4414-998c-f159376dd48f
DTSTAMP:20250517T085705Z
SUMMARY:Break
LOCATION:Hall D2
DTSTART:20250523T114500Z
DTEND:20250523T120000Z
END:VEVENT
BEGIN:VEVENT
UID:6e0ab313-91b5-4f49-93b3-e873f2f2ab0b
DTSTAMP:20250517T085705Z
SUMMARY:Large Scale Changes with AI - Migrating millions of lines of Java t
 o Kotlin at Uber
DESCRIPTION:Uber has one of the largest Android codebases in the world\, an
 d while Kotlin is first class\, millions of lines of Java remain to be con
 verted. Come along for the ride as we walk you through the tooling and pro
 cesses we've built and integrated while working with the community to safe
 ly mass migrate our production Java code to Kotlin code\, which we're now 
 utilizing to scale out more migrations to other technologies. \n\nWe'll co
 ver the motivations for tackling a migration of this magnitude\, the chall
 enges for LSCs (Large Scale Changes) in huge monorepos and organizations\, 
 generating migration data sets to power cutting-edge AI tools\, using agen
 tic systems and pipelines to deterministically tackle the migrations at sc
 ale\, the risks and mitigations for migrating this much production code\, 
 how to manage thousands of PRs\, and where we'll be taking this technology 
 next.
LOCATION:Keynote room
DTSTART:20250523T120000Z
DTEND:20250523T124500Z
END:VEVENT
BEGIN:VEVENT
UID:9cd1c10c-6063-4008-b887-8342c1fb37af
DTSTAMP:20250517T085705Z
SUMMARY:Data Analysis for finance in Kotlin
DESCRIPTION:Data representation and analysis in finance has a large literat
 ure already present in R and Python\, two of the most common suspects. The
 y have the community\, tooling and a long tradition. But what about Kotlin 
 with some of the libraries in the family\, like DataFrame and Kandy? Kotli
 n\, traditionally known for its focus in mobile and backend development\, 
 has emerged as a strong contender in the data science space. This session 
 explores the potential of Kotlin for financial data analysis\, focusing on 
 the use of the DataFrame library and the Kandy visualization framework.\n\
 nWe will demonstrate how Kotlin provides a rich\, statically typed languag
 e environment\, ensuring safety\, conciseness\, and performance in handlin
 g large datasets commonly encountered in financial contexts. DataFrame pro
 vides the capacity to manipulate structured data\, while Kandy enables hig
 h-quality visualizations.\n\nThis presentation will also provide a compara
 tive analysis between Kotlin\, R\, and Python. We will examine common use 
 cases such as dividend history\, stock valuation based on price and yields
 . While R and Python have established ecosystems for data science\, Kotlin
 's performance\, tooling\, and modern features offer new possibilities for 
 finance professionals looking for a more efficient alternative.\n\n\n
LOCATION:Hall D2
DTSTART:20250523T120000Z
DTEND:20250523T124500Z
END:VEVENT
BEGIN:VEVENT
UID:ceac6c72-bf1a-44e1-9c21-9982c2ac5ca0
DTSTAMP:20250517T085705Z
SUMMARY:Simplifying Full-Stack Kotlin: A Fresh Take with HTMX and Ktor
DESCRIPTION:Being a full-stack developer is valuable in today's tech landsc
 ape - you can own features end-to-end\, make holistic architectural decisi
 ons\, and adapt quickly to changing project needs. This versatility is esp
 ecially crucial in smaller teams and startups.\n\nHowever\, the role can b
 e intimidating. The list of technologies one is expected to master is exte
 nsive: Kubernetes\, Postgres\, Kotlin\, Gradle\, Ktor\, React\, Remix\, No
 de.js\, and NPM. Even the most experienced developers struggle to keep up 
 with it all.\n\nPerhaps we should step back and examine this problem from 
 a fresh perspective. Do we truly need all these technologies? After all\, 
 HTML and CSS remain relatively stable\, unlike frameworks that seem to cha
 nge every six months.\n\nMany applications don't require the complexity of 
 a modern Javascript Single Page Application (SPA). Everything eventually r
 enders to HTML anyway! Using technologies like HTML\, CSS\, HTMX\, AlpineJ
 S\, and Unpoly\, you can achieve 98% of SPA functionality with minimal fro
 ntend code and less complexity. These tools enhance and build upon HTML an
 d CSS rather than trying to replace them.\n\nIn this presentation\, I'll s
 how how HTMX and kotlinx.html combine beautifully with Ktor to create mode
 rn\, interactive web applications. You'll see how these technologies work 
 together seamlessly - Ktor's powerful backend capabilities\, kotlinx.html'
 s type-safe HTML generation\, and HTMX's elegant approach to frontend inte
 ractions. This stack offers a refreshingly simple way to build dynamic web 
 applications while keeping your codebase clean and maintainable.
LOCATION:Auditorium 15
DTSTART:20250523T120000Z
DTEND:20250523T124500Z
END:VEVENT
BEGIN:VEVENT
UID:5a8f221e-8cf9-4072-a86b-b5420cdfe799
DTSTAMP:20250517T085705Z
SUMMARY:Swift Export - a peek under the hood
DESCRIPTION:One of the most anticipated features in Kotlin Multiplatform—Sw
 ift Export! It’s been a year since we announced its development. Join us a
 s we explore the challenges the team has faced\, why it’s taking so long\, 
 and\, most importantly\, how you can preview Swift Export in your own proj
 ects.
LOCATION:Auditorium 11+12
DTSTART:20250523T120000Z
DTEND:20250523T124500Z
END:VEVENT
BEGIN:VEVENT
UID:caa1caaa-8713-44c6-8507-9b9fe1d939cd
DTSTAMP:20250517T085705Z
SUMMARY:Building immersive VR apps for Meta Quest with Jetpack Compose
DESCRIPTION:Virtual Reality (VR) is rapidly becoming the future of interact
 ions and immersive experiences\, transforming how we engage with apps and 
 content. As VR technology continues to evolve and become mainstream\, devi
 ces like the Meta Quest offer powerful opportunities for creating highly i
 mmersive and interactive experiences. \n\nIn this talk\, we will explore h
 ow to leverage Jetpack Compose to build VR applications for the Meta Quest
 .\n\nWe will dive into the unique challenges of VR development\, such as s
 patial UI design\, handling new input methods for seamless experiences. A 
 key focus of this session will be on converting existing Android apps into 
 immersive VR apps\, demonstrating how to adapt traditional 2D UIs into spa
 tially aware interfaces suitable for VR environments. \n\nAs a bonus\, we 
 will take a brief tour of how to integrate 3D objects and scenes seamlessl
 y in the VR experiences. You will learn how to combine both UI elements an
 d 3D content further enhancing immersion and interaction.\n\nBy the end of 
 the session\, you will be equipped with practical knowledge you can use to 
 create or adapt your existing apps into VR for the Meta Quest with Jetpack 
 Compose along with practical tips and best practices for immersive experie
 nces.
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250523T120000Z
DTEND:20250523T121500Z
END:VEVENT
BEGIN:VEVENT
UID:42d13471-ec8a-40e2-b1b2-53b88157c8b3
DTSTAMP:20250517T085705Z
SUMMARY:Migrating Room to Room KMP
DESCRIPTION:This Codelab builds off the “Get Started With Kotlin Multiplatf
 orm for Shared Business Logic” Codelab\, and allows the developer to migra
 te a Room database to a Room KMP database within the KMP Shared Module\, a
 nd then leverage this Room KMP database from the Android and iOS app.
LOCATION:Room #173
DTSTART:20250523T120000Z
DTEND:20250523T124500Z
END:VEVENT
BEGIN:VEVENT
UID:1f4ab4e8-2c8d-405b-94db-e1def6feed50
DTSTAMP:20250517T085705Z
SUMMARY:Bringing Maps to Compose Multiplatform with MapLibre Compose
DESCRIPTION:Working with maps in a Kotlin Multiplatform app can be tricky—d
 ifferent platform APIs\, inconsistent features\, and duplicated code add u
 nwelcome complexity. MapLibre Compose simplifies this process by providing 
 a consistent\, declarative API built on top of MapLibre and Compose Multip
 latform.\n\nWe’ll use practical examples to explore the design and impleme
 ntation of MapLibre Compose\, how it leverages the Compose runtime to decl
 aratively express the powerful mapping capabilities of MapLibre\, and how 
 it uses Kotlin Multiplatform to help developers write map-based UI code on
 ce and run it seamlessly on Android\, iOS\, and beyond without code duplic
 ation.\n\nFor developers working with Compose Multiplatform\, this talk wi
 ll showcase how MapLibre Compose can help add mapping features to your app
 s. You'll gain a clear understanding of its capabilities\, its design prin
 ciples\, and how it can help you create richer user experiences across pla
 tforms.
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250523T123000Z
DTEND:20250523T124500Z
END:VEVENT
BEGIN:VEVENT
UID:a7073dcd-818d-40cb-a725-70d5cabd945d
DTSTAMP:20250517T085705Z
SUMMARY:Coffee Break
LOCATION:Keynote room
DTSTART:20250523T124500Z
DTEND:20250523T131500Z
END:VEVENT
BEGIN:VEVENT
UID:b235bdee-476c-4f25-a7ab-f07e157f85e2
DTSTAMP:20250517T085705Z
SUMMARY:Kotlin and Compose Multiplatform patterns for iOS interop
DESCRIPTION:Kotlin Multiplatform (KMP) and\, more recently\, Compose Multip
 latform (CMP) have matured significantly in recent years and are gaining i
 ncreasingly widespread adoption. \n\nHowever iOS integration continues to 
 present its own set of challenges which also vary depending on the amount 
 of UI code that's being shared. In this talk I'll use real world examples 
 to outline a variety of different UI and non-UI patterns I've applied over 
 the last 5 years when using KMP and CMP on iOS.  \n
LOCATION:Keynote room
DTSTART:20250523T131500Z
DTEND:20250523T140000Z
END:VEVENT
BEGIN:VEVENT
UID:ae6aba2e-6298-4efc-b990-0b3a8c58c188
DTSTAMP:20250517T085705Z
SUMMARY:Fast inner dev loops for Kotlin Gradle builds
DESCRIPTION:Whether it's a Kotlin library or an Android app\, developers wa
 nt their inner loop to be fast: code\, compile\, test\, repeat. With Gradl
 e\, there are no extra steps—you run the test\, and it takes care of the r
 est\, whether you’re tweaking a single line of code or upgrading all your 
 dependencies.\n\nIn this talk\, learn how to tame the inner dev loop. We'l
 l explore the recent evolution of Gradle's performance features\, such as 
 Configuration Cache and Isolated Projects\, and how to organize your Kotli
 n build to make the most of it.
LOCATION:Hall D2
DTSTART:20250523T131500Z
DTEND:20250523T140000Z
END:VEVENT
BEGIN:VEVENT
UID:2a1ba11b-70f7-4e2e-855d-78a7ec4e46b9
DTSTAMP:20250517T085705Z
SUMMARY:Lessons learned decoupling Architecture Components from platform sp
 ecific code
DESCRIPTION:Follow along as the Android team walks you through the process 
 of taking some of their architectural building blocks\, such as SavedState 
 and System Back\, through the process of decoupling them from platform spe
 cific implementations and how they approached the task of writing good com
 mon APIs in preparation for future integrations with other platforms while 
 maintaining the quality achieved in android.
LOCATION:Auditorium 15
DTSTART:20250523T131500Z
DTEND:20250523T140000Z
END:VEVENT
BEGIN:VEVENT
UID:562638e1-aae2-478e-9fa2-e3a54d80bbe8
DTSTAMP:20250517T085705Z
SUMMARY:Kotlin Clean Architecture for Serverless: Business Logic You Can Ta
 ke Anywhere
DESCRIPTION:As cloud platforms continue to evolve\, serverless functions pr
 ovide powerful ways to build and scale applications with reduced infrastru
 cture concerns. However\, cloud-specific requirements often make it challe
 nging to keep business logic portable across different cloud providers. Th
 is session presents a variant of clean architecture designed to separate c
 ore business logic from cloud-specific code\, leveraging Kotlin’s capabili
 ties along with Spring Cloud Function and headless Gradle modules.\n\nIn t
 his talk\, I’ll demonstrate how to structure a Kotlin application for serv
 erless using a simplified clean architecture approach. This structure main
 tains cloud-agnostic business logic while allowing platform-specific imple
 mentations for integration functionality like storage. By isolating busine
 ss logic in headless modules\, developers can deploy the same core code ac
 ross multiple cloud function providers such as AWS Lambda and Azure Functi
 ons.\n\nThrough live coding\, we’ll explore practical techniques for build
 ing and deploying serverless applications with cloud-agnostic business log
 ic. \nThis session is aimed at advanced Kotlin developers interested in se
 rverless architecture\, cloud flexibility\, and clean architecture princip
 les. 
LOCATION:Auditorium 11+12
DTSTART:20250523T131500Z
DTEND:20250523T140000Z
END:VEVENT
BEGIN:VEVENT
UID:0e54b64a-43f0-4eae-b56f-c2051ee3562a
DTSTAMP:20250517T085705Z
SUMMARY:Swift concurrency for curious Kotliners
DESCRIPTION:Swift is an open-source programming language by Apple\, primari
 ly used for building apps within the Apple ecosystem.\n\nA new major versi
 on of Swift - Swift 6 was released at the end of the previous year. The st
 andout feature of the release is strict concurrency mode\, which aims to p
 revent data races.\n\nIn this talk\, we will take a quick look at Swift ac
 tors and `async`/`await` features\, which share a lot of similarities with 
 Kotlin Coroutines. We will explore what does Swift 6 do to prevent data ra
 ces\, and\, perhaps\, discuss if we can expect a similar feature in future 
 versions of Kotlin.\n\nThe talk assumes that the attendees are familiar wi
 th Kotlin Coroutines.
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250523T131500Z
DTEND:20250523T133000Z
END:VEVENT
BEGIN:VEVENT
UID:8ed8dd6c-1d14-462f-bae9-38941951f8b3
DTSTAMP:20250517T085705Z
SUMMARY:Klibs.io — the dream of creating a Kotlin Package Index
DESCRIPTION:So you want to build a Kotlin package index.. What is a package 
 anyway\, is it the same as an artifact? What makes a project a library the
 n? And why is it an index and not a repository?\n\nThis talk is a story an
 d a retrospective of developing [https://klibs.io](https://klibs.io)\n\nI 
 will share the insights I learned after processing 250\,000 KMP artifacts 
 and 1\,500 Kotlin projects. We'll discuss our library sharing ecosystem an
 d its limitations\, and I will give tips to library authors on how to stan
 d out and make their libraries more discoverable
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250523T134500Z
DTEND:20250523T140000Z
END:VEVENT
BEGIN:VEVENT
UID:93351186-2904-4e98-a485-f214b900849f
DTSTAMP:20250517T085705Z
SUMMARY:Break
LOCATION:Hall D2
DTSTART:20250523T140000Z
DTEND:20250523T141500Z
END:VEVENT
BEGIN:VEVENT
UID:2983583d-c1a8-4134-ab99-e29656ba9137
DTSTAMP:20250517T085705Z
SUMMARY:47 Refactorings in 45 minutes
DESCRIPTION:IntelliJ IDEA's refactoring support is second to none\, but the 
 Refactor This menu only has 9 items. Where is all the power hiding?\n\nJoi
 n Dmitry and Duncan on a whistle-stop live-coding tour of our favourite ID
 E's invisible refactorings. Marvel as Alt-Enter reveals refactorings befor
 e your very eyes. Gasp as they change depending on context. Wonder how com
 pletely different they can be simply by moving the cursor one character to 
 the left or right\, and feel the tension mount as they approach the deadli
 ne. Can they really show more than one refactoring a minute?
LOCATION:Keynote room
DTSTART:20250523T141500Z
DTEND:20250523T150000Z
END:VEVENT
BEGIN:VEVENT
UID:a3800ed9-1a1a-454b-b434-853a08850809
DTSTAMP:20250517T085705Z
SUMMARY:From Data to Insights: Building a Bluesky Bot powered by AI
DESCRIPTION:\nA common challenge developers face when working with data str
 eams is collecting and analyzing this data as fast as possible to uncover 
 meaningful insights or take fast actions.\n\nIn this talk\, I’ll show you 
 how I tackled this by building a Bluesky bot that turns raw data collected 
 from the Bluesky’s stream of posts into actionable insights.\n\nIn this ta
 lk you will learn how to: \n- Collect data into streams\n- Use probabilist
 ic data structures such as Bloom Filters\, TopK and Count-Min Sketch\n- Us
 e Retrieval-Augmented Generation for adding your own knowledge base into y
 our LLM queries\n- Use semantic caching for reducing LLM calls\n- Use vect
 or siilarity search to classify the data\n- Efficiently querythe data\n\nW
 hether you’re curious about GenAI\, interested in data-driven analytics\, 
 or simply love experimenting with creative tech solutions\, this session w
 ill inspire you with practical techniques and real-world applications.
LOCATION:Hall D2
DTSTART:20250523T141500Z
DTEND:20250523T150000Z
END:VEVENT
BEGIN:VEVENT
UID:3534d51a-f633-49c4-9e10-fdb38340a0eb
DTSTAMP:20250517T085705Z
SUMMARY:Stream Processing Rocks! Stream processing in Kotlin from KStreams 
 to RocksDB
DESCRIPTION:Ever wondered how to efficiently process high-velocity data str
 eams using Kafka and Kotlin? Join two engineers from SolarWinds—experts wh
 o oversee billions of observability records daily—as they share their insi
 ghts.\n\nWe'll kick off by covering what stream processing is and when you 
 should use it. Dive into practical Kotlin solutions through a simple case 
 study on stripping PII from incoming user records using Kafka Streams. We’
 ll build upon this example by utilizing Kafka's compacting topics feature 
 to distribute the user data and store it locally for rapid API responses. 
 Finally\, we’ll 'scale up' by moving that data out of memory and into Rock
 sDB\, demonstrating how to handle larger datasets effectively. By the end 
 of this talk\, you'll be equipped to build your first KStream or scale up 
 the ones you’re already building.
LOCATION:Auditorium 15
DTSTART:20250523T141500Z
DTEND:20250523T150000Z
END:VEVENT
BEGIN:VEVENT
UID:d46169e5-2eee-4511-879b-b9ebadb1ebb6
DTSTAMP:20250517T085705Z
SUMMARY:Scale your Kotlin Multiplatform projects using dependency injection
DESCRIPTION:Kotlin-inject-anvil is a dependency injection framework for Kot
 lin Multiplatform. It verifies the dependency graph at compile time and ge
 nerates the necessary code to instantiate the object graph at runtime. The 
 framework aims to provide a safe dependency injection solution without the 
 boilerplate and configurations common in many other libraries.\n\nThis tal
 k will introduce kotlin-inject-anvil\, discussing its benefits and how it 
 scales in large\, modularized codebases. We'll explore how to leverage the 
 strengths of each host platform while maximizing common Kotlin Multiplatfo
 rm code. Since each codebase is unique\, I'll demonstrate how we adapt the 
 framework for our own internal use cases at Amazon.
LOCATION:Auditorium 11+12
DTSTART:20250523T141500Z
DTEND:20250523T150000Z
END:VEVENT
BEGIN:VEVENT
UID:2726e87e-c30b-4124-b43e-646c2231a0a7
DTSTAMP:20250517T085705Z
SUMMARY:Break
LOCATION:Hall D2
DTSTART:20250523T150000Z
DTEND:20250523T151500Z
END:VEVENT
BEGIN:VEVENT
UID:ac7771d5-e710-478e-b3b5-22e095587b06
DTSTAMP:20250517T085705Z
SUMMARY:Closing Panel
LOCATION:Keynote room
DTSTART:20250523T151500Z
DTEND:20250523T160000Z
END:VEVENT
BEGIN:VEVENT
UID:f76d4bd6-851d-4f40-9ef9-272b452001dc
DTSTAMP:20250517T085705Z
SUMMARY:Registration
LOCATION:Room #173
DTSTART:20250521T060000Z
DTEND:20250521T070000Z
END:VEVENT
BEGIN:VEVENT
UID:c464b374-d474-403f-844a-20f506a21888
DTSTAMP:20250517T085705Z
SUMMARY:Spring Boot With Coroutines and Virtual Threads. Part 1.
DESCRIPTION:If you want to get the most out of Spring Boot in terms of low 
 latency\, high-throughput\, and resource efficiency\, there is no way arou
 nd virtual threads and/or reactive libraries like Webflux.\n\nHowever\, bo
 th won’t get you far: Virtual threads are limited to non-blocking operatio
 ns\, and WebFlux — even though offering all reactive qualities\, like non-
 blocking\, parallelism\, streaming\, etc. — will give you a lot of headach
 es due to its complexity\, bad readability\, and maintainability.\n\nIn th
 is workshop\, you’ll learn how Spring Boot’s coroutine support will wipe o
 ut all the downsides of the ‘raw’ WebFlux approach or the limitations of v
 irtual threads and provide you with the best of both worlds: non-blocking 
 reactive characteristics without the complexity.\n\nDuring the workshop\, 
 we will explore Kotlin’s reactive building blocks\, such as coroutines and 
 flows\, and apply them in Spring Boot. By building a non-blocking API in S
 pring Boot from scratch\, you’ll learn how to:\n\n- Use coroutines on top 
 of WebFlux and/or virtual threads.\n- Perform non-blocking remote API call
 s using WebClient or RestClient.\n- Access a database in a reactive way\, 
 either via the R2DBC or JDBC\, including framework support.\n- Apply struc
 tured concurrency in your business logic\, like requesting data in paralle
 l.\n- Create an advanced streaming API based on ServerSentEvents that comb
 ines coroutines and flow.\n\nIn addition\, we will explore virtual threads 
 in-depth and see how they can leverage the power of coroutines even more.\
 n\nAt the end of the workshop\, you’ll know all the ins and outs of progra
 mming in Spring Boot with coroutines while having experienced the tremendo
 us benefits they offer over raw virtual threads or WebFlux.\n\nWith the kn
 owledge you gain\, you can enlighten your Spring Boot project with corouti
 nes the very next day.
LOCATION:Room #173
DTSTART:20250521T070000Z
DTEND:20250521T083000Z
END:VEVENT
BEGIN:VEVENT
UID:1abe3343-f0c8-4d95-a5f4-fac6f4dbdc11
DTSTAMP:20250517T085705Z
SUMMARY:Extracting\, Transforming\, and Analyzing Data With Kotlin. Part 1.
DESCRIPTION:This workshop is designed for all Kotlin developers who need si
 mple and convenient tools within their native ecosystem to assist them whe
 n working with data\, understanding its nature\, performing any necessary 
 processing\, and presenting the results to their team or stakeholders as a 
 report or chart.\n\nIn this workshop\, you’ll learn how to build data proc
 essing pipelines in your applications. We’ll explore the best practices fo
 r extracting data from various sources\, aggregating and transforming it\, 
 and then exporting it as a collection of data classes\, displaying it as t
 ables\, or visualizing it with insightful charts.\n\nBy the end of the wor
 kshop\, you’ll be able to:\n\n- Load\, transform\, and export data using t
 he Kotlin DataFrame library.\n- Visualize data with the Kandy library to e
 ffectively convey insights.\n- Access and manipulate data from various sou
 rces: REST APIs\, SQL databases\, CSV files\, and other tabular data.\n- H
 andle both flat and hierarchical JSON-like data structures.\n- Boost your 
 code written with the help of the kotlin.collections or SQL-like framework
 s.\n- Solve practical problems by applying your skills to three real-world 
 scenarios.\n- Present the insights in Kotlin notebooks and easily share th
 em on GitHub Gists.
LOCATION:Room #174
DTSTART:20250521T070000Z
DTEND:20250521T083000Z
END:VEVENT
BEGIN:VEVENT
UID:5acce72e-ae42-447a-97fb-29cd4b9033eb
DTSTAMP:20250517T085705Z
SUMMARY:Hands-On Kotlin Web Development With Ktor. Part 1.
DESCRIPTION:Ktor is a lightweight and flexible toolkit for building HTTP ap
 plications. This workshop will use the Kotlin programming language\, the K
 tor framework\, the Exposed database access library\, OpenAI\, and several 
 other Kotlin and Java libraries to build a feature-complete AI powered web 
 application.\n\nWe’ll start with the basics by exploring the Ktor framewor
 k and learning how to build a simple web application using essential funct
 ions. We’ll cover topics like handling HTTP requests\, working with WebSoc
 kets\, database access\, authentication\, logging\, and deployment.\n\nFor 
 testing\, we will look into the APIs that Ktor provides. Finally\, we will 
 explore the API for writing plugins and use it to create a simple plugin f
 or our Ktor application.\n\nBy the end of the workshop\, you’ll be able to
 :\n  - Structure Ktor projects\n  - Test Ktor applications\n  - Create and 
 deploy RESTful services using Ktor\n  - Integrate Ktor with external libra
 ries\n\nThis will be a fast-paced workshop where attendees will spend most 
 of their time coding. You will walk away armed with a cookbook of various 
 Ktor recipes for building feature-complete AI powered web application.
LOCATION:Room #176
DTSTART:20250521T070000Z
DTEND:20250521T083000Z
END:VEVENT
BEGIN:VEVENT
UID:1dd9c8a2-64fa-4576-82ac-eb71a41710dd
DTSTAMP:20250517T085705Z
SUMMARY:Building Shared UI With Compose Multiplatform. Part 1.
DESCRIPTION:Take the next step in your cross-platform Kotlin journey with C
 ompose Multiplatform! This workshop is for developers already familiar wit
 h the basics of Kotlin Multiplatform and Jetpack Compose who are looking t
 o extend their skills by building a shared UI.\n\nWe’ll discuss how Compos
 e Multiplatform works and show you how your existing Compose skills are re
 usable across platforms. You’ll have hands-on time with a wide range of Co
 mpose features\, focusing on how they work across different platforms. Dur
 ing the workshop’s exercises\, you’ll work with Compose code\, explore API
 s\, build new features\, improve accessibility\, test the UI\, and more.\n
 \nCovering the latest available APIs and best practices\, we’ll equip you 
 with everything you need to start using Compose Multiplatform in your own 
 apps! Here is how the workshop will be structured:\n\nIntroduction\n- How 
 Compose Multiplatform works\n- Running Compose on Android\, iOS\, Desktop\
 , and Web\n- Writing basic Compose code for multiplatform use\n\nCompose b
 uilding blocks\n- Resources (localization\, fonts\, and more)\n- Image loa
 ding\n- ViewModels and architecture components\n- Navigation\n- Animations
 \n- Dependency injection\n- Theming\n\nMastering Compose Multiplatform\n- 
 Interop with native components\n- Dialogs\n- Insets\n- Accessibility\n- Te
 sting\n\nThis workshop includes exercises for participants to complete on 
 their own laptops. Using a MacBook is highly recommended for participation 
 in all exercises\, as iOS applications can only be built on macOS. Detaile
 d setup instructions will be provided prior to the workshop.
LOCATION:Room #178
DTSTART:20250521T070000Z
DTEND:20250521T083000Z
END:VEVENT
BEGIN:VEVENT
UID:78610714-8f1f-4757-84f3-83e759d8222a
DTSTAMP:20250517T085705Z
SUMMARY:Deep Dive Into Kotlin Multiplatform: Advanced Techniques for Seamle
 ss Code Sharing. Part 1.
DESCRIPTION:This is an intermediate/advanced workshop for experienced Kotli
 n Multiplatform developers. It is aimed at developers who have built proje
 cts with Kotlin Multiplatform and Jetpack Compose / Compose Multiplatform 
 and now want to progress onto more advanced topics.\n\nThe workshop aims t
 o equip attendees with the skills to write high-quality code and apps usin
 g Kotlin Multiplatform. The workshop will address the following topics:\n\
 nA Gentle(r) Introduction\n- Introducing an example project\n- Explaining 
 project structure and architecture\n- Highlighting a few key libraries use
 d in the project\n\nNative Integrations\n- Splash screens\n- Notifications
 \n- Working with files\n\nAdvanced Kotlin Multiplatform for iOS Targets\n- 
 Debugging Kotlin/Swift\n- Understanding and improving Kotlin/Swift interop
 erability\n\nCode Quality\n- Code coverage with Kover (JVM-only)\n- Modula
 rization\n\nApp Quality\n- Fixing memory leaks\n- Performance testing\n- A
 pp size optimization\n\nManaging Workflows\n- Basics of building CI/CD pip
 elines for your apps\n\nYou will need to bring a MacBook along with you to 
 participate in all the practical exercises. Installation instructions will 
 be provided one week prior to the workshop.
LOCATION:Room #179
DTSTART:20250521T070000Z
DTEND:20250521T083000Z
END:VEVENT
BEGIN:VEVENT
UID:b555198a-ff33-4e9d-867e-a23438be32ae
DTSTAMP:20250517T085705Z
SUMMARY:Refactoring to Functional Kotlin. Part 1.
DESCRIPTION:Kotlin supports both Object-oriented and functional styles of p
 rogramming\, but what should we do when we have OO code that should be fun
 ctional? Refactor\, of course!\n\nIn this workshop\, Nat and Duncan\, the 
 authors of Java to Kotlin: A Refactoring Guidebook\, take a web applicatio
 n and introduce techniques to gradually and safely migrate the code to the 
 functional style better suited to today’s architectures. Topics include:\n
 \n- Thinking in a functional way – Data\, Calculations\, and Actions\n- Mi
 grating from mutable objects to immutable data classes\n- Converting busin
 ess logic to a functional domain model\n- Where does the state live? Funct
 ional core / imperative shell\n- Choosing between functions and methods\n- 
 Functional error handling\n- Expand and Contract refactoring for safety ov
 er many commits
LOCATION:Room #180
DTSTART:20250521T070000Z
DTEND:20250521T083000Z
END:VEVENT
BEGIN:VEVENT
UID:20f78a89-aa77-4fff-8d3b-1ff42bc25940
DTSTAMP:20250517T085705Z
SUMMARY:Asynchronous Programming With Kotlin Coroutines. Part 1.
DESCRIPTION:In this workshop\, you’ll learn everything you need to know abo
 ut how to be productive with coroutines in Kotlin. We’ll start with the ba
 sics of asynchronous programming\, its differences from blocking code\, an
 d the concepts of suspending functions and coroutines. We’ll explore corou
 tine contexts\, concurrent decomposition of work via deferreds\, and struc
 tured concurrency with coroutine scopes.\n\nThe second part of the worksho
 p will be devoted to Kotlin Flows. We’ll study how Kotlin Flows are design
 ed on a basic level\, learn the difference between hot and cold flows\, di
 scuss their typical usage patterns\, and explore how they incorporate idea
 s from reactive streams. To deepen our understanding\, we’ll also take a p
 eek at some of the implementations behind flows and collectors. Throughout
 \, we’ll see how they help you in writing safe and reliable concurrent sys
 tems\, and how modern applications can use them to work with asynchronous 
 streams of data\, manage system states\, and broadcast events.\n\nThrough 
 this workshop\, you’ll enhance your coroutines-related vocabulary\, unders
 tand how to spot and avoid common problems\, and be able to effectively an
 d confidently use coroutines and flows in your own projects.
LOCATION:Room #181
DTSTART:20250521T070000Z
DTEND:20250521T083000Z
END:VEVENT
BEGIN:VEVENT
UID:c609a40c-b3ed-4601-87d8-22884597e75f
DTSTAMP:20250517T085705Z
SUMMARY:Coffee Break
LOCATION:Room #173
DTSTART:20250521T083000Z
DTEND:20250521T090000Z
END:VEVENT
BEGIN:VEVENT
UID:d8120acf-9be6-49d6-82b1-c327074578fd
DTSTAMP:20250517T085705Z
SUMMARY:Spring Boot With Coroutines and Virtual Threads. Part 2.
DESCRIPTION:If you want to get the most out of Spring Boot in terms of low 
 latency\, high-throughput\, and resource efficiency\, there is no way arou
 nd virtual threads and/or reactive libraries like Webflux.\n\nHowever\, bo
 th won’t get you far: Virtual threads are limited to non-blocking operatio
 ns\, and WebFlux — even though offering all reactive qualities\, like non-
 blocking\, parallelism\, streaming\, etc. — will give you a lot of headach
 es due to its complexity\, bad readability\, and maintainability.\n\nIn th
 is workshop\, you’ll learn how Spring Boot’s coroutine support will wipe o
 ut all the downsides of the ‘raw’ WebFlux approach or the limitations of v
 irtual threads and provide you with the best of both worlds: non-blocking 
 reactive characteristics without the complexity.\n\nDuring the workshop\, 
 we will explore Kotlin’s reactive building blocks\, such as coroutines and 
 flows\, and apply them in Spring Boot. By building a non-blocking API in S
 pring Boot from scratch\, you’ll learn how to:\n\n- Use coroutines on top 
 of WebFlux and/or virtual threads.\n- Perform non-blocking remote API call
 s using WebClient or RestClient.\n- Access a database in a reactive way\, 
 either via the R2DBC or JDBC\, including framework support.\n- Apply struc
 tured concurrency in your business logic\, like requesting data in paralle
 l.\n- Create an advanced streaming API based on ServerSentEvents that comb
 ines coroutines and flow.\n\nIn addition\, we will explore virtual threads 
 in-depth and see how they can leverage the power of coroutines even more.\
 n\nAt the end of the workshop\, you’ll know all the ins and outs of progra
 mming in Spring Boot with coroutines while having experienced the tremendo
 us benefits they offer over raw virtual threads or WebFlux.\n\nWith the kn
 owledge you gain\, you can enlighten your Spring Boot project with corouti
 nes the very next day.
LOCATION:Room #173
DTSTART:20250521T090000Z
DTEND:20250521T103000Z
END:VEVENT
BEGIN:VEVENT
UID:9a86e6ea-0e50-4051-bbba-69ee2c6e140f
DTSTAMP:20250517T085705Z
SUMMARY:Extracting\, Transforming\, and Analyzing Data With Kotlin. Part 2.
DESCRIPTION:This workshop is designed for all Kotlin developers who need si
 mple and convenient tools within their native ecosystem to assist them whe
 n working with data\, understanding its nature\, performing any necessary 
 processing\, and presenting the results to their team or stakeholders as a 
 report or chart.\n\nIn this workshop\, you’ll learn how to build data proc
 essing pipelines in your applications. We’ll explore the best practices fo
 r extracting data from various sources\, aggregating and transforming it\, 
 and then exporting it as a collection of data classes\, displaying it as t
 ables\, or visualizing it with insightful charts.\n\nBy the end of the wor
 kshop\, you’ll be able to:\n\n- Load\, transform\, and export data using t
 he Kotlin DataFrame library.\n- Visualize data with the Kandy library to e
 ffectively convey insights.\n- Access and manipulate data from various sou
 rces: REST APIs\, SQL databases\, CSV files\, and other tabular data.\n- H
 andle both flat and hierarchical JSON-like data structures.\n- Boost your 
 code written with the help of the kotlin.collections or SQL-like framework
 s.\n- Solve practical problems by applying your skills to three real-world 
 scenarios.\n- Present the insights in Kotlin notebooks and easily share th
 em on GitHub Gists.
LOCATION:Room #174
DTSTART:20250521T090000Z
DTEND:20250521T103000Z
END:VEVENT
BEGIN:VEVENT
UID:0e655fa9-b41c-4d3a-a3e4-5331311c8670
DTSTAMP:20250517T085705Z
SUMMARY:Hands-On Kotlin Web Development With Ktor. Part 2.
DESCRIPTION:Ktor is a lightweight and flexible toolkit for building HTTP ap
 plications. This workshop will use the Kotlin programming language\, the K
 tor framework\, the Exposed database access library\, OpenAI\, and several 
 other Kotlin and Java libraries to build a feature-complete AI powered web 
 application.\n\nWe’ll start with the basics by exploring the Ktor framewor
 k and learning how to build a simple web application using essential funct
 ions. We’ll cover topics like handling HTTP requests\, working with WebSoc
 kets\, database access\, authentication\, logging\, and deployment.\n\nFor 
 testing\, we will look into the APIs that Ktor provides. Finally\, we will 
 explore the API for writing plugins and use it to create a simple plugin f
 or our Ktor application.\n\nBy the end of the workshop\, you’ll be able to
 :\n  - Structure Ktor projects\n  - Test Ktor applications\n  - Create and 
 deploy RESTful services using Ktor\n  - Integrate Ktor with external libra
 ries\n\nThis will be a fast-paced workshop where attendees will spend most 
 of their time coding. You will walk away armed with a cookbook of various 
 Ktor recipes for building feature-complete AI powered web application.
LOCATION:Room #176
DTSTART:20250521T090000Z
DTEND:20250521T103000Z
END:VEVENT
BEGIN:VEVENT
UID:2a410390-87ce-4ff7-8f32-a3580219d9c2
DTSTAMP:20250517T085705Z
SUMMARY:Building Shared UI With Compose Multiplatform. Part 2.
DESCRIPTION:Take the next step in your cross-platform Kotlin journey with C
 ompose Multiplatform! This workshop is for developers already familiar wit
 h the basics of Kotlin Multiplatform and Jetpack Compose who are looking t
 o extend their skills by building a shared UI.\n\nWe’ll discuss how Compos
 e Multiplatform works and show you how your existing Compose skills are re
 usable across platforms. You’ll have hands-on time with a wide range of Co
 mpose features\, focusing on how they work across different platforms. Dur
 ing the workshop’s exercises\, you’ll work with Compose code\, explore API
 s\, build new features\, improve accessibility\, test the UI\, and more.\n
 \nCovering the latest available APIs and best practices\, we’ll equip you 
 with everything you need to start using Compose Multiplatform in your own 
 apps! Here is how the workshop will be structured:\n\nIntroduction\n- How 
 Compose Multiplatform works\n- Running Compose on Android\, iOS\, Desktop\
 , and Web\n- Writing basic Compose code for multiplatform use\n\nCompose b
 uilding blocks\n- Resources (localization\, fonts\, and more)\n- Image loa
 ding\n- ViewModels and architecture components\n- Navigation\n- Animations
 \n- Dependency injection\n- Theming\n\nMastering Compose Multiplatform\n- 
 Interop with native components\n- Dialogs\n- Insets\n- Accessibility\n- Te
 sting\n\nThis workshop includes exercises for participants to complete on 
 their own laptops. Using a MacBook is highly recommended for participation 
 in all exercises\, as iOS applications can only be built on macOS. Detaile
 d setup instructions will be provided prior to the workshop.
LOCATION:Room #178
DTSTART:20250521T090000Z
DTEND:20250521T103000Z
END:VEVENT
BEGIN:VEVENT
UID:6f09e37e-cfc2-40a3-ab58-12137c05e104
DTSTAMP:20250517T085705Z
SUMMARY:Deep Dive Into Kotlin Multiplatform: Advanced Techniques for Seamle
 ss Code Sharing. Part 2.
DESCRIPTION:This is an intermediate/advanced workshop for experienced Kotli
 n Multiplatform developers. It is aimed at developers who have built proje
 cts with Kotlin Multiplatform and Jetpack Compose / Compose Multiplatform 
 and now want to progress onto more advanced topics.\n\nThe workshop aims t
 o equip attendees with the skills to write high-quality code and apps usin
 g Kotlin Multiplatform. The workshop will address the following topics:\n\
 nA Gentle(r) Introduction\n- Introducing an example project\n- Explaining 
 project structure and architecture\n- Highlighting a few key libraries use
 d in the project\n\nNative Integrations\n- Splash screens\n- Notifications
 \n- Working with files\n\nAdvanced Kotlin Multiplatform for iOS Targets\n- 
 Debugging Kotlin/Swift\n- Understanding and improving Kotlin/Swift interop
 erability\n\nCode Quality\n- Code coverage with Kover (JVM-only)\n- Modula
 rization\n\nApp Quality\n- Fixing memory leaks\n- Performance testing\n- A
 pp size optimization\n\nManaging Workflows\n- Basics of building CI/CD pip
 elines for your apps\n\nYou will need to bring a MacBook along with you to 
 participate in all the practical exercises. Installation instructions will 
 be provided one week prior to the workshop.
LOCATION:Room #179
DTSTART:20250521T090000Z
DTEND:20250521T103000Z
END:VEVENT
BEGIN:VEVENT
UID:2d601631-4f4c-4384-a3bb-7cc147fd27ea
DTSTAMP:20250517T085705Z
SUMMARY:Refactoring to Functional Kotlin. Part 2.
DESCRIPTION:Kotlin supports both Object-oriented and functional styles of p
 rogramming\, but what should we do when we have OO code that should be fun
 ctional? Refactor\, of course!\n\nIn this workshop\, Nat and Duncan\, the 
 authors of Java to Kotlin: A Refactoring Guidebook\, take a web applicatio
 n and introduce techniques to gradually and safely migrate the code to the 
 functional style better suited to today’s architectures. Topics include:\n
 \n- Thinking in a functional way – Data\, Calculations\, and Actions\n- Mi
 grating from mutable objects to immutable data classes\n- Converting busin
 ess logic to a functional domain model\n- Where does the state live? Funct
 ional core / imperative shell\n- Choosing between functions and methods\n- 
 Functional error handling\n- Expand and Contract refactoring for safety ov
 er many commits
LOCATION:Room #180
DTSTART:20250521T090000Z
DTEND:20250521T103000Z
END:VEVENT
BEGIN:VEVENT
UID:a080ff95-17ad-4ea4-a804-c7b160d0b398
DTSTAMP:20250517T085705Z
SUMMARY:Asynchronous Programming With Kotlin Coroutines. Part 2.
DESCRIPTION:In this workshop\, you’ll learn everything you need to know abo
 ut how to be productive with coroutines in Kotlin. We’ll start with the ba
 sics of asynchronous programming\, its differences from blocking code\, an
 d the concepts of suspending functions and coroutines. We’ll explore corou
 tine contexts\, concurrent decomposition of work via deferreds\, and struc
 tured concurrency with coroutine scopes.\n\nThe second part of the worksho
 p will be devoted to Kotlin Flows. We’ll study how Kotlin Flows are design
 ed on a basic level\, learn the difference between hot and cold flows\, di
 scuss their typical usage patterns\, and explore how they incorporate idea
 s from reactive streams. To deepen our understanding\, we’ll also take a p
 eek at some of the implementations behind flows and collectors. Throughout
 \, we’ll see how they help you in writing safe and reliable concurrent sys
 tems\, and how modern applications can use them to work with asynchronous 
 streams of data\, manage system states\, and broadcast events.\n\nThrough 
 this workshop\, you’ll enhance your coroutines-related vocabulary\, unders
 tand how to spot and avoid common problems\, and be able to effectively an
 d confidently use coroutines and flows in your own projects.
LOCATION:Room #181
DTSTART:20250521T090000Z
DTEND:20250521T103000Z
END:VEVENT
BEGIN:VEVENT
UID:bbf95d5f-3b91-49bb-94af-5617fa888119
DTSTAMP:20250517T085705Z
SUMMARY:Lunch
LOCATION:Room #173
DTSTART:20250521T103000Z
DTEND:20250521T113000Z
END:VEVENT
BEGIN:VEVENT
UID:8e201033-d8ca-40dc-b9fe-64c0ad6e72e9
DTSTAMP:20250517T085705Z
SUMMARY:Spring Boot With Coroutines and Virtual Threads. Part 3.
DESCRIPTION:If you want to get the most out of Spring Boot in terms of low 
 latency\, high-throughput\, and resource efficiency\, there is no way arou
 nd virtual threads and/or reactive libraries like Webflux.\n\nHowever\, bo
 th won’t get you far: Virtual threads are limited to non-blocking operatio
 ns\, and WebFlux — even though offering all reactive qualities\, like non-
 blocking\, parallelism\, streaming\, etc. — will give you a lot of headach
 es due to its complexity\, bad readability\, and maintainability.\n\nIn th
 is workshop\, you’ll learn how Spring Boot’s coroutine support will wipe o
 ut all the downsides of the ‘raw’ WebFlux approach or the limitations of v
 irtual threads and provide you with the best of both worlds: non-blocking 
 reactive characteristics without the complexity.\n\nDuring the workshop\, 
 we will explore Kotlin’s reactive building blocks\, such as coroutines and 
 flows\, and apply them in Spring Boot. By building a non-blocking API in S
 pring Boot from scratch\, you’ll learn how to:\n\n- Use coroutines on top 
 of WebFlux and/or virtual threads.\n- Perform non-blocking remote API call
 s using WebClient or RestClient.\n- Access a database in a reactive way\, 
 either via the R2DBC or JDBC\, including framework support.\n- Apply struc
 tured concurrency in your business logic\, like requesting data in paralle
 l.\n- Create an advanced streaming API based on ServerSentEvents that comb
 ines coroutines and flow.\n\nIn addition\, we will explore virtual threads 
 in-depth and see how they can leverage the power of coroutines even more.\
 n\nAt the end of the workshop\, you’ll know all the ins and outs of progra
 mming in Spring Boot with coroutines while having experienced the tremendo
 us benefits they offer over raw virtual threads or WebFlux.\n\nWith the kn
 owledge you gain\, you can enlighten your Spring Boot project with corouti
 nes the very next day.
LOCATION:Room #173
DTSTART:20250521T113000Z
DTEND:20250521T130000Z
END:VEVENT
BEGIN:VEVENT
UID:76c8dfd7-5d58-473d-bb67-934961980c14
DTSTAMP:20250517T085705Z
SUMMARY:Extracting\, Transforming\, and Analyzing Data With Kotlin. Part 3.
DESCRIPTION:This workshop is designed for all Kotlin developers who need si
 mple and convenient tools within their native ecosystem to assist them whe
 n working with data\, understanding its nature\, performing any necessary 
 processing\, and presenting the results to their team or stakeholders as a 
 report or chart.\n\nIn this workshop\, you’ll learn how to build data proc
 essing pipelines in your applications. We’ll explore the best practices fo
 r extracting data from various sources\, aggregating and transforming it\, 
 and then exporting it as a collection of data classes\, displaying it as t
 ables\, or visualizing it with insightful charts.\n\nBy the end of the wor
 kshop\, you’ll be able to:\n\n- Load\, transform\, and export data using t
 he Kotlin DataFrame library.\n- Visualize data with the Kandy library to e
 ffectively convey insights.\n- Access and manipulate data from various sou
 rces: REST APIs\, SQL databases\, CSV files\, and other tabular data.\n- H
 andle both flat and hierarchical JSON-like data structures.\n- Boost your 
 code written with the help of the kotlin.collections or SQL-like framework
 s.\n- Solve practical problems by applying your skills to three real-world 
 scenarios.\n- Present the insights in Kotlin notebooks and easily share th
 em on GitHub Gists.
LOCATION:Room #174
DTSTART:20250521T113000Z
DTEND:20250521T130000Z
END:VEVENT
BEGIN:VEVENT
UID:96bcea61-ba82-4f78-b12b-d9e562ac9890
DTSTAMP:20250517T085705Z
SUMMARY:Hands-On Kotlin Web Development With Ktor. Part 3.
DESCRIPTION:Ktor is a lightweight and flexible toolkit for building HTTP ap
 plications. This workshop will use the Kotlin programming language\, the K
 tor framework\, the Exposed database access library\, OpenAI\, and several 
 other Kotlin and Java libraries to build a feature-complete AI powered web 
 application.\n\nWe’ll start with the basics by exploring the Ktor framewor
 k and learning how to build a simple web application using essential funct
 ions. We’ll cover topics like handling HTTP requests\, working with WebSoc
 kets\, database access\, authentication\, logging\, and deployment.\n\nFor 
 testing\, we will look into the APIs that Ktor provides. Finally\, we will 
 explore the API for writing plugins and use it to create a simple plugin f
 or our Ktor application.\n\nBy the end of the workshop\, you’ll be able to
 :\n  - Structure Ktor projects\n  - Test Ktor applications\n  - Create and 
 deploy RESTful services using Ktor\n  - Integrate Ktor with external libra
 ries\n\nThis will be a fast-paced workshop where attendees will spend most 
 of their time coding. You will walk away armed with a cookbook of various 
 Ktor recipes for building feature-complete AI powered web application.
LOCATION:Room #176
DTSTART:20250521T113000Z
DTEND:20250521T130000Z
END:VEVENT
BEGIN:VEVENT
UID:f4d18eb0-9aee-43e4-b82f-572e750d9867
DTSTAMP:20250517T085705Z
SUMMARY:Building Shared UI With Compose Multiplatform. Part 3.
DESCRIPTION:Take the next step in your cross-platform Kotlin journey with C
 ompose Multiplatform! This workshop is for developers already familiar wit
 h the basics of Kotlin Multiplatform and Jetpack Compose who are looking t
 o extend their skills by building a shared UI.\n\nWe’ll discuss how Compos
 e Multiplatform works and show you how your existing Compose skills are re
 usable across platforms. You’ll have hands-on time with a wide range of Co
 mpose features\, focusing on how they work across different platforms. Dur
 ing the workshop’s exercises\, you’ll work with Compose code\, explore API
 s\, build new features\, improve accessibility\, test the UI\, and more.\n
 \nCovering the latest available APIs and best practices\, we’ll equip you 
 with everything you need to start using Compose Multiplatform in your own 
 apps! Here is how the workshop will be structured:\n\nIntroduction\n- How 
 Compose Multiplatform works\n- Running Compose on Android\, iOS\, Desktop\
 , and Web\n- Writing basic Compose code for multiplatform use\n\nCompose b
 uilding blocks\n- Resources (localization\, fonts\, and more)\n- Image loa
 ding\n- ViewModels and architecture components\n- Navigation\n- Animations
 \n- Dependency injection\n- Theming\n\nMastering Compose Multiplatform\n- 
 Interop with native components\n- Dialogs\n- Insets\n- Accessibility\n- Te
 sting\n\nThis workshop includes exercises for participants to complete on 
 their own laptops. Using a MacBook is highly recommended for participation 
 in all exercises\, as iOS applications can only be built on macOS. Detaile
 d setup instructions will be provided prior to the workshop.
LOCATION:Room #178
DTSTART:20250521T113000Z
DTEND:20250521T130000Z
END:VEVENT
BEGIN:VEVENT
UID:93a237c4-824e-478f-901f-d5557c39363e
DTSTAMP:20250517T085705Z
SUMMARY:Deep Dive Into Kotlin Multiplatform: Advanced Techniques for Seamle
 ss Code Sharing. Part 3.
DESCRIPTION:This is an intermediate/advanced workshop for experienced Kotli
 n Multiplatform developers. It is aimed at developers who have built proje
 cts with Kotlin Multiplatform and Jetpack Compose / Compose Multiplatform 
 and now want to progress onto more advanced topics.\n\nThe workshop aims t
 o equip attendees with the skills to write high-quality code and apps usin
 g Kotlin Multiplatform. The workshop will address the following topics:\n\
 nA Gentle(r) Introduction\n- Introducing an example project\n- Explaining 
 project structure and architecture\n- Highlighting a few key libraries use
 d in the project\n\nNative Integrations\n- Splash screens\n- Notifications
 \n- Working with files\n\nAdvanced Kotlin Multiplatform for iOS Targets\n- 
 Debugging Kotlin/Swift\n- Understanding and improving Kotlin/Swift interop
 erability\n\nCode Quality\n- Code coverage with Kover (JVM-only)\n- Modula
 rization\n\nApp Quality\n- Fixing memory leaks\n- Performance testing\n- A
 pp size optimization\n\nManaging Workflows\n- Basics of building CI/CD pip
 elines for your apps\n\nYou will need to bring a MacBook along with you to 
 participate in all the practical exercises. Installation instructions will 
 be provided one week prior to the workshop.
LOCATION:Room #179
DTSTART:20250521T113000Z
DTEND:20250521T130000Z
END:VEVENT
BEGIN:VEVENT
UID:82ca99fd-cfbe-46fe-a617-ac4aed341828
DTSTAMP:20250517T085705Z
SUMMARY:Refactoring to Functional Kotlin. Part 3.
DESCRIPTION:Kotlin supports both Object-oriented and functional styles of p
 rogramming\, but what should we do when we have OO code that should be fun
 ctional? Refactor\, of course!\n\nIn this workshop\, Nat and Duncan\, the 
 authors of Java to Kotlin: A Refactoring Guidebook\, take a web applicatio
 n and introduce techniques to gradually and safely migrate the code to the 
 functional style better suited to today’s architectures. Topics include:\n
 \n- Thinking in a functional way – Data\, Calculations\, and Actions\n- Mi
 grating from mutable objects to immutable data classes\n- Converting busin
 ess logic to a functional domain model\n- Where does the state live? Funct
 ional core / imperative shell\n- Choosing between functions and methods\n- 
 Functional error handling\n- Expand and Contract refactoring for safety ov
 er many commits
LOCATION:Room #180
DTSTART:20250521T113000Z
DTEND:20250521T130000Z
END:VEVENT
BEGIN:VEVENT
UID:c78e8a37-5b08-4f5c-8469-229174564ace
DTSTAMP:20250517T085705Z
SUMMARY:Asynchronous Programming With Kotlin Coroutines. Part 3.
DESCRIPTION:In this workshop\, you’ll learn everything you need to know abo
 ut how to be productive with coroutines in Kotlin. We’ll start with the ba
 sics of asynchronous programming\, its differences from blocking code\, an
 d the concepts of suspending functions and coroutines. We’ll explore corou
 tine contexts\, concurrent decomposition of work via deferreds\, and struc
 tured concurrency with coroutine scopes.\n\nThe second part of the worksho
 p will be devoted to Kotlin Flows. We’ll study how Kotlin Flows are design
 ed on a basic level\, learn the difference between hot and cold flows\, di
 scuss their typical usage patterns\, and explore how they incorporate idea
 s from reactive streams. To deepen our understanding\, we’ll also take a p
 eek at some of the implementations behind flows and collectors. Throughout
 \, we’ll see how they help you in writing safe and reliable concurrent sys
 tems\, and how modern applications can use them to work with asynchronous 
 streams of data\, manage system states\, and broadcast events.\n\nThrough 
 this workshop\, you’ll enhance your coroutines-related vocabulary\, unders
 tand how to spot and avoid common problems\, and be able to effectively an
 d confidently use coroutines and flows in your own projects.
LOCATION:Room #181
DTSTART:20250521T113000Z
DTEND:20250521T130000Z
END:VEVENT
BEGIN:VEVENT
UID:0fa21d79-f299-4672-8896-0408c53a9a2e
DTSTAMP:20250517T085705Z
SUMMARY:Coffee Break
LOCATION:Room #173
DTSTART:20250521T130000Z
DTEND:20250521T133000Z
END:VEVENT
BEGIN:VEVENT
UID:54fad941-685d-4812-8c4b-3a81ac333a98
DTSTAMP:20250517T085705Z
SUMMARY:Spring Boot With Coroutines and Virtual Threads. Part 4.
DESCRIPTION:If you want to get the most out of Spring Boot in terms of low 
 latency\, high-throughput\, and resource efficiency\, there is no way arou
 nd virtual threads and/or reactive libraries like Webflux.\n\nHowever\, bo
 th won’t get you far: Virtual threads are limited to non-blocking operatio
 ns\, and WebFlux — even though offering all reactive qualities\, like non-
 blocking\, parallelism\, streaming\, etc. — will give you a lot of headach
 es due to its complexity\, bad readability\, and maintainability.\n\nIn th
 is workshop\, you’ll learn how Spring Boot’s coroutine support will wipe o
 ut all the downsides of the ‘raw’ WebFlux approach or the limitations of v
 irtual threads and provide you with the best of both worlds: non-blocking 
 reactive characteristics without the complexity.\n\nDuring the workshop\, 
 we will explore Kotlin’s reactive building blocks\, such as coroutines and 
 flows\, and apply them in Spring Boot. By building a non-blocking API in S
 pring Boot from scratch\, you’ll learn how to:\n\n- Use coroutines on top 
 of WebFlux and/or virtual threads.\n- Perform non-blocking remote API call
 s using WebClient or RestClient.\n- Access a database in a reactive way\, 
 either via the R2DBC or JDBC\, including framework support.\n- Apply struc
 tured concurrency in your business logic\, like requesting data in paralle
 l.\n- Create an advanced streaming API based on ServerSentEvents that comb
 ines coroutines and flow.\n\nIn addition\, we will explore virtual threads 
 in-depth and see how they can leverage the power of coroutines even more.\
 n\nAt the end of the workshop\, you’ll know all the ins and outs of progra
 mming in Spring Boot with coroutines while having experienced the tremendo
 us benefits they offer over raw virtual threads or WebFlux.\n\nWith the kn
 owledge you gain\, you can enlighten your Spring Boot project with corouti
 nes the very next day.
LOCATION:Room #173
DTSTART:20250521T133000Z
DTEND:20250521T150000Z
END:VEVENT
BEGIN:VEVENT
UID:13347437-b9a1-42c1-8aa7-dfe425c50299
DTSTAMP:20250517T085705Z
SUMMARY:Extracting\, Transforming\, and Analyzing Data With Kotlin. Part 4.
DESCRIPTION:This workshop is designed for all Kotlin developers who need si
 mple and convenient tools within their native ecosystem to assist them whe
 n working with data\, understanding its nature\, performing any necessary 
 processing\, and presenting the results to their team or stakeholders as a 
 report or chart.\n\nIn this workshop\, you’ll learn how to build data proc
 essing pipelines in your applications. We’ll explore the best practices fo
 r extracting data from various sources\, aggregating and transforming it\, 
 and then exporting it as a collection of data classes\, displaying it as t
 ables\, or visualizing it with insightful charts.\n\nBy the end of the wor
 kshop\, you’ll be able to:\n\n- Load\, transform\, and export data using t
 he Kotlin DataFrame library.\n- Visualize data with the Kandy library to e
 ffectively convey insights.\n- Access and manipulate data from various sou
 rces: REST APIs\, SQL databases\, CSV files\, and other tabular data.\n- H
 andle both flat and hierarchical JSON-like data structures.\n- Boost your 
 code written with the help of the kotlin.collections or SQL-like framework
 s.\n- Solve practical problems by applying your skills to three real-world 
 scenarios.\n- Present the insights in Kotlin notebooks and easily share th
 em on GitHub Gists.
LOCATION:Room #174
DTSTART:20250521T133000Z
DTEND:20250521T150000Z
END:VEVENT
BEGIN:VEVENT
UID:76ea859c-3fac-4c91-86cc-0ad83e7ed8c8
DTSTAMP:20250517T085705Z
SUMMARY:Hands-On Kotlin Web Development With Ktor. Part 4.
DESCRIPTION:Ktor is a lightweight and flexible toolkit for building HTTP ap
 plications. This workshop will use the Kotlin programming language\, the K
 tor framework\, the Exposed database access library\, OpenAI\, and several 
 other Kotlin and Java libraries to build a feature-complete AI powered web 
 application.\n\nWe’ll start with the basics by exploring the Ktor framewor
 k and learning how to build a simple web application using essential funct
 ions. We’ll cover topics like handling HTTP requests\, working with WebSoc
 kets\, database access\, authentication\, logging\, and deployment.\n\nFor 
 testing\, we will look into the APIs that Ktor provides. Finally\, we will 
 explore the API for writing plugins and use it to create a simple plugin f
 or our Ktor application.\n\nBy the end of the workshop\, you’ll be able to
 :\n  - Structure Ktor projects\n  - Test Ktor applications\n  - Create and 
 deploy RESTful services using Ktor\n  - Integrate Ktor with external libra
 ries\n\nThis will be a fast-paced workshop where attendees will spend most 
 of their time coding. You will walk away armed with a cookbook of various 
 Ktor recipes for building feature-complete AI powered web application.
LOCATION:Room #176
DTSTART:20250521T133000Z
DTEND:20250521T150000Z
END:VEVENT
BEGIN:VEVENT
UID:cd3797a4-e103-45ee-b1a8-c2f2511d102c
DTSTAMP:20250517T085705Z
SUMMARY:Building Shared UI With Compose Multiplatform. Part 4.
DESCRIPTION:Take the next step in your cross-platform Kotlin journey with C
 ompose Multiplatform! This workshop is for developers already familiar wit
 h the basics of Kotlin Multiplatform and Jetpack Compose who are looking t
 o extend their skills by building a shared UI.\n\nWe’ll discuss how Compos
 e Multiplatform works and show you how your existing Compose skills are re
 usable across platforms. You’ll have hands-on time with a wide range of Co
 mpose features\, focusing on how they work across different platforms. Dur
 ing the workshop’s exercises\, you’ll work with Compose code\, explore API
 s\, build new features\, improve accessibility\, test the UI\, and more.\n
 \nCovering the latest available APIs and best practices\, we’ll equip you 
 with everything you need to start using Compose Multiplatform in your own 
 apps! Here is how the workshop will be structured:\n\nIntroduction\n- How 
 Compose Multiplatform works\n- Running Compose on Android\, iOS\, Desktop\
 , and Web\n- Writing basic Compose code for multiplatform use\n\nCompose b
 uilding blocks\n- Resources (localization\, fonts\, and more)\n- Image loa
 ding\n- ViewModels and architecture components\n- Navigation\n- Animations
 \n- Dependency injection\n- Theming\n\nMastering Compose Multiplatform\n- 
 Interop with native components\n- Dialogs\n- Insets\n- Accessibility\n- Te
 sting\n\nThis workshop includes exercises for participants to complete on 
 their own laptops. Using a MacBook is highly recommended for participation 
 in all exercises\, as iOS applications can only be built on macOS. Detaile
 d setup instructions will be provided prior to the workshop.
LOCATION:Room #178
DTSTART:20250521T133000Z
DTEND:20250521T150000Z
END:VEVENT
BEGIN:VEVENT
UID:77d3c398-90f6-4e14-a200-3708cb4325e7
DTSTAMP:20250517T085705Z
SUMMARY:Deep Dive Into Kotlin Multiplatform: Advanced Techniques for Seamle
 ss Code Sharing. Part 4.
DESCRIPTION:This is an intermediate/advanced workshop for experienced Kotli
 n Multiplatform developers. It is aimed at developers who have built proje
 cts with Kotlin Multiplatform and Jetpack Compose / Compose Multiplatform 
 and now want to progress onto more advanced topics.\n\nThe workshop aims t
 o equip attendees with the skills to write high-quality code and apps usin
 g Kotlin Multiplatform. The workshop will address the following topics:\n\
 nA Gentle(r) Introduction\n- Introducing an example project\n- Explaining 
 project structure and architecture\n- Highlighting a few key libraries use
 d in the project\n\nNative Integrations\n- Splash screens\n- Notifications
 \n- Working with files\n\nAdvanced Kotlin Multiplatform for iOS Targets\n- 
 Debugging Kotlin/Swift\n- Understanding and improving Kotlin/Swift interop
 erability\n\nCode Quality\n- Code coverage with Kover (JVM-only)\n- Modula
 rization\n\nApp Quality\n- Fixing memory leaks\n- Performance testing\n- A
 pp size optimization\n\nManaging Workflows\n- Basics of building CI/CD pip
 elines for your apps\n\nYou will need to bring a MacBook along with you to 
 participate in all the practical exercises. Installation instructions will 
 be provided one week prior to the workshop.
LOCATION:Room #179
DTSTART:20250521T133000Z
DTEND:20250521T150000Z
END:VEVENT
BEGIN:VEVENT
UID:eb56018b-dca8-49fe-ac3c-65ef3fc57b58
DTSTAMP:20250517T085705Z
SUMMARY:Refactoring to Functional Kotlin. Part 4.
DESCRIPTION:Kotlin supports both Object-oriented and functional styles of p
 rogramming\, but what should we do when we have OO code that should be fun
 ctional? Refactor\, of course!\n\nIn this workshop\, Nat and Duncan\, the 
 authors of Java to Kotlin: A Refactoring Guidebook\, take a web applicatio
 n and introduce techniques to gradually and safely migrate the code to the 
 functional style better suited to today’s architectures. Topics include:\n
 \n- Thinking in a functional way – Data\, Calculations\, and Actions\n- Mi
 grating from mutable objects to immutable data classes\n- Converting busin
 ess logic to a functional domain model\n- Where does the state live? Funct
 ional core / imperative shell\n- Choosing between functions and methods\n- 
 Functional error handling\n- Expand and Contract refactoring for safety ov
 er many commits
LOCATION:Room #180
DTSTART:20250521T133000Z
DTEND:20250521T150000Z
END:VEVENT
BEGIN:VEVENT
UID:6fb2f1e4-c503-4861-93b2-7326a89a666d
DTSTAMP:20250517T085705Z
SUMMARY:Asynchronous Programming With Kotlin Coroutines. Part 4.
DESCRIPTION:In this workshop\, you’ll learn everything you need to know abo
 ut how to be productive with coroutines in Kotlin. We’ll start with the ba
 sics of asynchronous programming\, its differences from blocking code\, an
 d the concepts of suspending functions and coroutines. We’ll explore corou
 tine contexts\, concurrent decomposition of work via deferreds\, and struc
 tured concurrency with coroutine scopes.\n\nThe second part of the worksho
 p will be devoted to Kotlin Flows. We’ll study how Kotlin Flows are design
 ed on a basic level\, learn the difference between hot and cold flows\, di
 scuss their typical usage patterns\, and explore how they incorporate idea
 s from reactive streams. To deepen our understanding\, we’ll also take a p
 eek at some of the implementations behind flows and collectors. Throughout
 \, we’ll see how they help you in writing safe and reliable concurrent sys
 tems\, and how modern applications can use them to work with asynchronous 
 streams of data\, manage system states\, and broadcast events.\n\nThrough 
 this workshop\, you’ll enhance your coroutines-related vocabulary\, unders
 tand how to spot and avoid common problems\, and be able to effectively an
 d confidently use coroutines and flows in your own projects.
LOCATION:Room #181
DTSTART:20250521T133000Z
DTEND:20250521T150000Z
END:VEVENT
BEGIN:VEVENT
UID:27b57a69-370e-42ed-89f8-f317ef9dbcca
DTSTAMP:20250517T085705Z
SUMMARY:Registration
LOCATION:Keynote room
DTSTART:20250522T053000Z
DTEND:20250522T070000Z
END:VEVENT
BEGIN:VEVENT
UID:2ee8d0bc-cd54-4893-9f50-7660bd9266cc
DTSTAMP:20250517T085705Z
SUMMARY:Opening keynote
LOCATION:Keynote room
DTSTART:20250522T070000Z
DTEND:20250522T080000Z
END:VEVENT
BEGIN:VEVENT
UID:dc597384-d6a5-4ac6-b527-89b91b09ea31
DTSTAMP:20250517T085705Z
SUMMARY:Break
LOCATION:Hall D2
DTSTART:20250522T080000Z
DTEND:20250522T081500Z
END:VEVENT
BEGIN:VEVENT
UID:47b25627-5796-4ed8-a0b9-d30ae1050ce2
DTSTAMP:20250517T085705Z
SUMMARY:Kotlin and Spring: The modern server side stack
DESCRIPTION:Rod will discuss his experience switching from Java to Kotlin w
 hile building a server-side application implementing structured RAG.\n\nHe
 'll show code in a real application and reflect on the positives and negat
 ives: overwhelmingly\, positives. \n\nKotlin brings a modern language to a 
 mature\, hardened ecosystem and productive\, high quality framework. The r
 esult can be a thing of beauty. \n\n
LOCATION:Keynote room
DTSTART:20250522T081500Z
DTEND:20250522T090000Z
END:VEVENT
BEGIN:VEVENT
UID:af560bba-be20-4e7b-a8e8-75a49935025a
DTSTAMP:20250517T085705Z
SUMMARY:Code Quality at Scale: Future-Proof Your Android Codebase with KtLi
 nt and Detekt
DESCRIPTION:Managing a large\, multi-team Kotlin codebase that has grown an
 d evolved over eight years is no small feat. Introducing architectural cha
 nges and ensuring alignment across multiple autonomous teams adds another 
 layer of complexity.\n\nIn this talk\, you’ll learn strategies to build mo
 re robust\, maintainable\, and future-ready codebases\, whether you’re sca
 ling a project or working in a large team. We’ll show how integrating stat
 ic analysis tools like Ktlint and Detekt into your CI pipeline can help yo
 u establish consistent coding standards and systematically reduce technica
 l debt. As a bonus\, we’ll explore how we were able to leverage custom Det
 ekt rules to help us safely enable r8 in a multimodule Android app.
LOCATION:Hall D2
DTSTART:20250522T081500Z
DTEND:20250522T090000Z
END:VEVENT
BEGIN:VEVENT
UID:2b74ccf4-c679-4d25-88cc-f9e790224824
DTSTAMP:20250517T085705Z
SUMMARY:Deploying Kotlin Multiplatform at Google Workspace
DESCRIPTION:I like to talk you through some of the bugs we found and optimi
 zations as we launched Kotlin Multiplatform to some users with Google Work
 space.   We'll talk through some bugs\, performance issues and fixes with 
 comparisons to ObjectiveC.   As well as a Q/A with the developers of worke
 d on this.
LOCATION:Auditorium 15
DTSTART:20250522T081500Z
DTEND:20250522T090000Z
END:VEVENT
BEGIN:VEVENT
UID:081da339-8a41-4fa5-8134-17a0cc9e194e
DTSTAMP:20250517T085705Z
SUMMARY:Building an Agentic Platform with Kotlin: Powering one of Europe's 
 Largest LLM Bot
DESCRIPTION:How does one build a multi-tenant\, multi-channel enterprise ap
 plication for multiple European countries with a new and non-deterministic 
 technology such as LLMs?\n\nThis is the question my team and I asked ourse
 lves over a year and a half ago.\n\nJoin me in my talk to discover how we 
 helped build one of Europe's biggest LLM chatbots and how this led to Arc\
 , an open-sourced Kotlin-based AI framework that is now part of the Eclips
 e Foundation.\n\nWhat makes Arc interesting is how it combines Kotlin DSL 
 and scripting to enable developers to build LLM-powered agents fast and ef
 ficiently\, and most importantly\, ready for the enterprise.\n\nIn this se
 ssion\, we will go through the journey of how and why the framework was bo
 rn.\n\nWe'll take a look at some of the design decisions that were made an
 d some of the key features of the framework\, such as observability\, memo
 ry\, and tools\, highlighting how we tackle some of our biggest challenges
 .\n\nAt the end of this session\, you should have a good understanding of 
 the challenges in building an LLM application at this scale\, as well as s
 ome strategies for solving these problems.
LOCATION:Auditorium 11+12
DTSTART:20250522T081500Z
DTEND:20250522T090000Z
END:VEVENT
BEGIN:VEVENT
UID:10d6634d-0595-4c92-bda7-f77f45e0bcff
DTSTAMP:20250517T085705Z
SUMMARY:Compose Prototyping in Kotlin Notebooks
DESCRIPTION:With its unique mix of markdown and REPL-like nature\, Kotlin N
 otebooks is an excellent way to document or explore a new idea or an exist
 ing codebase. But did you know that Notebooks also support Compose and Swi
 ng?\n\nIn this lighting talk you will see how you can set up Notebooks to 
 access existing UI code or write new from scratch\, with the result being 
 shown directly in the notebook. And as a bonus on top\, all of this can sh
 ared directly as documentation on Github or in Gists.
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T081500Z
DTEND:20250522T083000Z
END:VEVENT
BEGIN:VEVENT
UID:33da0128-c209-4667-8241-501d66dd7c95
DTSTAMP:20250517T085705Z
SUMMARY:Setting up your Mac for Kotlin Multiplatform Development
DESCRIPTION:If you have not built with KMP yet\, you will probably have to 
 install some software (e.g.\, Xcode\, iOS Simulator\, Android Studio Meerk
 at | 2024.3.1 or later). We recommend that you come to KotlinConf with all 
 of your KMP software installed as these applications are large and may tak
 e hours to install. But for those who need some help in getting everything 
 set up\, please join us.
LOCATION:Room #173
DTSTART:20250522T081500Z
DTEND:20250522T090000Z
END:VEVENT
BEGIN:VEVENT
UID:550f2837-c1a2-40ca-9428-a028587b07bd
DTSTAMP:20250517T085705Z
SUMMARY:State of Kotlin/Wasm and Compose Multiplatform for Web on Modern Br
 owsers 
DESCRIPTION:Kotlin/Wasm and Compose Multiplatform for web allow Kotlin Mult
 iplatform developers to extend their reach to the modern browser. In this 
 lightning talk\, I’ll describe the current state of the platform and what 
 the JetBrains team is working on as we prepare for the Beta release.
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T084500Z
DTEND:20250522T090000Z
END:VEVENT
BEGIN:VEVENT
UID:11c7fa45-402f-49d7-83a5-767e2a3de954
DTSTAMP:20250517T085705Z
SUMMARY:Break
LOCATION:Hall D2
DTSTART:20250522T090000Z
DTEND:20250522T091500Z
END:VEVENT
BEGIN:VEVENT
UID:0508f9f8-e7bb-4640-90f9-46eca9cbb6ea
DTSTAMP:20250517T085705Z
SUMMARY:Rich Errors in Kotlin
DESCRIPTION:Kotlin's nullability model is one of its core features. In this 
 talk\, we’ll explore how this model can be generalized to restricted union 
 types specifically designed for handling error cases. \n\nAdditionally\, w
 e’ll discuss how errors can currently be represented in Kotlin\, covering 
 approaches such as nullable types\, exceptions\, sealed hierarchies\, and 
 Result-like classes.
LOCATION:Keynote room
DTSTART:20250522T091500Z
DTEND:20250522T100000Z
END:VEVENT
BEGIN:VEVENT
UID:1975230d-2371-4109-9bd7-8751784d3eb9
DTSTAMP:20250517T085705Z
SUMMARY:What’s new in Amper
DESCRIPTION:Amper is an experimental\, standalone build tool for the Kotlin 
 Multiplatform and JVM ecosystem from JetBrains. In this talk\, we'll look 
 at what Amper is already capable of. We’ll dip our toes together into the 
 design principles behind Amper\, and see how they find their reflection in 
 the major features\, choices and tradeoffs of Amper.\n\nAnd of course - I’
 ll share a sneak peek into what the team is cooking\, and what one might e
 xpect from Amper in the future!
LOCATION:Hall D2
DTSTART:20250522T091500Z
DTEND:20250522T100000Z
END:VEVENT
BEGIN:VEVENT
UID:7d7a267d-5a9d-4b7d-9f87-93cafd76240b
DTSTAMP:20250517T085705Z
SUMMARY:Next level Kotlin support in Spring Boot 4
DESCRIPTION:Spring and Kotlin teams collaborate to bring the Kotlin support 
 to the next level in the upcoming Spring Boot 4 release\, based on Spring 
 Framework 7\, to be released at the end of 2025.\n\nIn this brand new talk
 \, Sébastien will share new features that intend to improve the developer 
 experience and runtime efficiency of Spring Boot applications for Kotlin d
 evelopers.\n\nHe will cover the new Kotlin 2 baseline\, runtime efficiency 
 improvements\, better null-safety via JSpecify\, GraalVM native image spec
 ial Kotlin support\, new DSLs\, new Kotlin documentation and Spring AI Kot
 lin support.
LOCATION:Auditorium 15
DTSTART:20250522T091500Z
DTEND:20250522T100000Z
END:VEVENT
BEGIN:VEVENT
UID:fc3adadc-28cd-4e02-8f07-fce11f7af0d8
DTSTAMP:20250517T085705Z
SUMMARY:Creative UIs with Compose
DESCRIPTION:While most folks associate Compose UI with Material\, its API a
 llows us to be more expressive than ever before.\n\nMobile UIs have become 
 homogenized and stale\, but video games continue to provide a wealth of in
 novation and creativity.\n\nIn this session we'll recreate a complex user 
 interface from the game Persona 5 to showcase how to really push Compose b
 eyond Material Design. Topics include:\n- Drawing custom shapes\n- Animati
 ng path data\n- Non-standard shapes in LazyColumn/LazyRow\n- Custom effect
 s inside LazyColumn/LazyRow\n- Remaining usable and accessible when not us
 ing Material\n- How/why video games can be a source of inspiration
LOCATION:Auditorium 11+12
DTSTART:20250522T091500Z
DTEND:20250522T100000Z
END:VEVENT
BEGIN:VEVENT
UID:d81ffbfd-409d-4213-bf4b-a8c648fde17c
DTSTAMP:20250517T085705Z
SUMMARY:Model Context Protocol in Kotlin
DESCRIPTION:MCP is an open protocol that standardizes how applications prov
 ide context to LLMs. We've created a Kotlin library that allows you to use 
 this protocol and connect AI models to tooling\, like IDEs. Now we will se
 e how it works in practice.
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T091500Z
DTEND:20250522T093000Z
END:VEVENT
BEGIN:VEVENT
UID:e41d7bf1-6895-42e5-9855-549300251f47
DTSTAMP:20250517T085705Z
SUMMARY:Kotlin's Gam[e]bit: LLM-less AI for Board Games
DESCRIPTION:Discover how Kotlin can power AI without relying on large langu
 age models. In this session\, we'll explore preparing data using Kotlin No
 tebooks\, training machine learning models directly in Kotlin\, and implem
 enting a strategy-driven bot for an online board game. Whether you're a Ko
 tlin enthusiast or curious about alternative approaches to AI\, this talk 
 will show how Kotlin shines as a tool for building efficient\, specialized 
 AI systems
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T094500Z
DTEND:20250522T100000Z
END:VEVENT
BEGIN:VEVENT
UID:2d72455c-6c74-441a-b3da-ed8a8f40a5a6
DTSTAMP:20250517T085705Z
SUMMARY:Lunch
LOCATION:Keynote room
DTSTART:20250522T100000Z
DTEND:20250522T110000Z
END:VEVENT
BEGIN:VEVENT
UID:76021e29-c765-46ab-a049-23cab9c87d15
DTSTAMP:20250517T085705Z
SUMMARY:From 0 to h-AI-ro: high-speed track to AI for Kotlin developers
DESCRIPTION:With the advent of ChatGPT and other generative AI models\, art
 ificial intelligence has taken a giant leap forward\, unlocking possibilit
 ies beyond our imagination while simultaneously challenging the establishe
 d way of doing. How does this exciting (r?)evolution impact us Kotlin deve
 lopers?\n\nIn this session\, we'll take a deep dive into the world of (gen
 erative) AI — giving you a clear and practical understanding of key termin
 ology\, concepts\, and frameworks relevant to the Kotlin ecosystem\, inclu
 ding powerful tools like Kotlin notebooks.\n\nGet to know:\n- Generative A
 I 101:  Get a hands-on introduction to the core concepts of modern AI — fr
 om Large Language Models (LLMs) and Natural Language Processing (NLP) to e
 mbeddings\, vector databases\, Retrieval-Augmented Generation (RAG)\, Tool
 s\, and Prompt Engineering.\n\n- Agentic AI: Go beyond simple prompts and 
 tool calls — discover how to build intelligent\, autonomous Agents using t
 he Model Context Protocol (MCP) to orchestrate complex\, context-aware beh
 avior.\n\n- Real-world integration:  Learn how to bring AI into your Kotli
 n applications — both server-side and mobile — using frameworks like LangC
 hain4j\, Spring AI\, and MCP clients and servers.\n \nThrough interactive 
 examples and live coding\, you will gain insights into how Kotlin can be l
 everaged with cutting-edge AI technologies\, opening doors to innovative p
 ossibilities in content generation\, natural language processing\, compute
 r vision\, and more.\n\nBy the end of this session\, you will emerge with 
 a comprehensive understanding of AI's potential within the Kotlin ecosyste
 m. Armed with this knowledge\, you'll be prepared to embrace the future as 
 a H-AI-ro!
LOCATION:Keynote room
DTSTART:20250522T110000Z
DTEND:20250522T114500Z
END:VEVENT
BEGIN:VEVENT
UID:e9f9c91a-b952-4917-9b85-1733e8dde12a
DTSTAMP:20250517T085705Z
SUMMARY:The Life and Death of a Kotlin/Native Object
DESCRIPTION:Have you ever wondered what the Kotlin/Native runtime does? Wha
 t actually happens\, under the hood\, when you instantiate an object? How 
 is an object layed out? How does the runtime manage memory? What happens w
 hen an object is no longer needed?\n\nIn this talk\, you will get a look a
 t how all these problems are solved by the Kotlin/Native runtime. This is 
 a high level talk about a very low level topic\; you only need to know a b
 it of Kotlin to follow along.
LOCATION:Hall D2
DTSTART:20250522T110000Z
DTEND:20250522T114500Z
END:VEVENT
BEGIN:VEVENT
UID:e686ce26-b82b-40cf-b1fd-6db51656d50d
DTSTAMP:20250517T085705Z
SUMMARY:A (deep) dive into (shallow) immutability: Valhalla and beyond
DESCRIPTION:Immutability is getting more and more attention in modern progr
 amming\, making code easier to reason about\, safer in concurrent environm
 ents\, and more maintainable. However\, adopting immutability isn’t withou
 t challenges\, as it does improve the developer experience\, but can often 
 come with runtime costs. In Kotlin\, immutability is already a key part of 
 the language design\, but there’s significant potential to push its bounda
 ries even further.\n\nThis talk begins by exploring the current state of i
 mmutability in Kotlin. We’ll highlight what features the language already 
 provides\, examine what’s missing\, and discuss the reasons behind these d
 esign decisions. From there\, we’ll take a closer look at Project Valhalla
 \, an upcoming JVM initiative that introduces value types and other innova
 tions\, enabling new possibilities for Kotlin. We’ll discuss how Valhalla 
 can help enhance Kotlin’s immutability story and improve the programming e
 xperience without significant trade-offs.\n\nFinally\, we’ll explore the b
 roader immutability design space for Kotlin\, looking beyond Valhalla to i
 magine what future extensions could look like. We’ll discuss how new immut
 ability features could integrate with existing ones\, such as smart casts 
 and coroutines\, while maintaining the language’s pragmatic and developer-
 friendly nature.\n\nJoin this session to discover how Kotlin can evolve it
 s immutability story to better meet the needs of modern developers\, combi
 ning practicality with innovation.
LOCATION:Auditorium 15
DTSTART:20250522T110000Z
DTEND:20250522T114500Z
END:VEVENT
BEGIN:VEVENT
UID:095db96a-4fa2-4357-abaf-1eb84ce83a48
DTSTAMP:20250517T085705Z
SUMMARY:APIs: How Hard Can They Be?
DESCRIPTION:Virtually every Android developer uses AndroidX libraries. With 
 KMP\, the usage is expanding to other platforms as well. The wide adoption 
 makes API design and evolution of these libraries critical for the user ex
 perience. Join me to learn about the life of an API in AndroidX: from an i
 dea\, to a design\, to a review\, and through an API evolution. You will h
 ear about our API review process and our use of Metalava and Kotlin Binary 
 Compatibility Verification tools  to wrangle JVM\, Android\, and KMP libra
 ries.
LOCATION:Auditorium 11+12
DTSTART:20250522T110000Z
DTEND:20250522T114500Z
END:VEVENT
BEGIN:VEVENT
UID:6ca4ba99-5245-42e0-a7c3-198d2273d3a3
DTSTAMP:20250517T085705Z
SUMMARY:One Codebase\, Three Platforms: X's Experience with Kotlin Multipla
 tform
DESCRIPTION:What if you could share a single codebase across Android\, iOS\
 , and Web without sacrificing platform-specific experiences? Is it even po
 ssible? At X (formerly Twitter)\, with a tiny developer team\, we took the 
 leap with Kotlin Multiplatform to entirely rebuild one of our core feature
 s for our multi-million-user platform.\n\nIn this talk\, we'll take you th
 rough the highs and lows of adopting Kotlin Multiplatform in a real-world 
 project. Learn about our development process\, the libraries that made our 
 journey smoother\, and how we approached architecture\, navigation\, depen
 dency injection\, and UI for a consistent user experience across platforms
 .\n\nWe'll share practical lessons\, the challenges we faced\, and how Kot
 lin Multiplatform transformed our cross-platform development strategy. We'
 ll also explore one of the biggest challenges: gaining buy-in from iOS and 
 Web developers for Kotlin Multiplatform. We'll share how we addressed thei
 r concerns and built strong collaboration across teams. Whether you're cur
 ious about Kotlin Multiplatform or seeking tips to enhance your implementa
 tion\, this talk is for you!\n\nJoin us to see how Kotlin Multiplatform en
 abled us to ship faster and deliver a seamless experience\, even while tac
 kling the complexities of building for millions of users with a small\, fo
 cused team.
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T110000Z
DTEND:20250522T111500Z
END:VEVENT
BEGIN:VEVENT
UID:93e011e5-bd5a-4327-8ba8-a7e351ccfcf3
DTSTAMP:20250517T085705Z
SUMMARY: Two Years with Kotlin Multiplatform: From Zero to 55% Shared Code
DESCRIPTION:Two years ago\, StoneCo\, one of the largest fintech companies 
 in Latin America serving more than 4 million users\, embarked on a journey 
 to unify its mobile apps using Kotlin Multiplatform (KMP)\, aiming to bala
 nce the efficiency of code sharing with the seamless user experience requi
 red in the fintech sector. This talk explores our journey - how we evaluat
 ed multiple cross-platform frameworks\, overcame technical and organizatio
 nal challenges\, and achieved 55% code sharing across two large-scale mobi
 le applications.\n\nYou'll hear how we made the decision to adopt KMP\, ho
 w we trained 130 mobile engineers to embrace this paradigm shift\, and the 
 measurable impact it has had on team productivity\, developer satisfaction
 \, and app performance. Whether you're considering KMP or scaling it in yo
 ur organization\, this session will provide actionable insights from a rea
 l-world\, long-term implementation.
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T113000Z
DTEND:20250522T114500Z
END:VEVENT
BEGIN:VEVENT
UID:5f4465d9-7363-49de-bb1c-21293a9baa02
DTSTAMP:20250517T085705Z
SUMMARY:Break
LOCATION:Hall D2
DTSTART:20250522T114500Z
DTEND:20250522T120000Z
END:VEVENT
BEGIN:VEVENT
UID:e319d1b6-8cb8-44d9-8fd1-b95e4ff09355
DTSTAMP:20250517T085705Z
SUMMARY:Compose Multiplatform for iOS: Ready for Production Use
DESCRIPTION:Compose Multiplatform\, the declarative framework by JetBrains 
 for building shared UIs\, is now stable and production-ready on iOS – so i
 t’s time to start building! In this talk\, you will get an overview of the 
 technology\, and see what we’ve done to get to the stable release.\n\nThis 
 includes the evolution of our APIs\, under-the-hood changes\, and new tool
 ing that we’re premiering for building Compose Multiplatform apps in your 
 favorite development environments\, IntelliJ IDEA and Android Studio. You’
 ll see that there’s a rich ecosystem available for you that has already gr
 own to cover all major areas of app development.\n\nPutting it all togethe
 r\, you’ll see how Compose Multiplatform enables you to write production-g
 rade apps on iOS and Android while reusing much of the knowledge you alrea
 dy have – and you’ll also get some insights into what we have planned next 
 in the journey of Compose Multiplatform\, on iOS and beyond.
LOCATION:Keynote room
DTSTART:20250522T120000Z
DTEND:20250522T124500Z
END:VEVENT
BEGIN:VEVENT
UID:06aefc3a-cebd-48c0-8269-dbdb2c699b54
DTSTAMP:20250517T085705Z
SUMMARY:Extending Ktor for Server Side Development
DESCRIPTION:While Kotlin is seeing widespread adoption for Server side deve
 lopment\, Ktor\, Kotlin's minimalistic and flexible framework for server a
 nd client side development\, is sometimes overlooked\, largely because Spr
 ing Boot still offers an exhaustive range of starters. \n\nTo bridge this 
 gap\, kotlin developers can utilise Ktor's fluent Plugin API to provide al
 l the functionality they need for their own use cases\, and those of the w
 ider community.\n\nIn this session\, we will discuss developing plugins fo
 r Ktor and demonstrate a few interesting plugins that complement the stand
 ard set of Ktor’s features.\n\nYou’ll learn how to seamlessly integrate es
 sential functionalities like Kafka for message-driven architectures\, impl
 ement advanced rate limiting for traffic control\, and enhance system resi
 lience with a sophisticated Circuit Breaker plugin. Each plugin is crafted 
 to offer flexibility and ease of integration\, making your development exp
 erience smoother and more efficient.
LOCATION:Hall D2
DTSTART:20250522T120000Z
DTEND:20250522T124500Z
END:VEVENT
BEGIN:VEVENT
UID:c4be15a1-75af-4fba-a202-0a533c3cbd57
DTSTAMP:20250517T085705Z
SUMMARY:IoT development with Kotlin
DESCRIPTION:With the advent of Kotlin Multiplatform and Kotlin/Native\, com
 bined with IoT devices increasingly leveraging more powerful hardware capa
 ble of running Linux\, we now have the exciting opportunity to use Kotlin 
 for IoT development.\n\nThis talk will explore the key technologies requir
 ed for IoT devices and demonstrate how to integrate them using Kotlin. Fro
 m communication protocols like Matter\, MQTT\, and Bluetooth LE\, to essen
 tial tools and frameworks like embedded Linux\, D-Bus\, and Buildroot\, we 
 will delve into the strategies and best practices for successfully adoptin
 g Kotlin in IoT development.
LOCATION:Auditorium 15
DTSTART:20250522T120000Z
DTEND:20250522T124500Z
END:VEVENT
BEGIN:VEVENT
UID:b262c677-3de9-4025-bba9-d99746b3f543
DTSTAMP:20250517T085705Z
SUMMARY:Good Old Data
DESCRIPTION:I will be talking about data-oriented systems design: why we ne
 ed to stop hiding plain data and why object orientation no longer serves u
 s well. Starting from first principles and foundational definitions\, we’l
 l explore practical recipes and patterns for working with data in Kotlin. 
 Topics include serialization\, persistent data structures\, polymorphism\, 
 identity\, and state
LOCATION:Auditorium 11+12
DTSTART:20250522T120000Z
DTEND:20250522T124500Z
END:VEVENT
BEGIN:VEVENT
UID:f105564f-aced-455f-90cc-307ea976d6bb
DTSTAMP:20250517T085705Z
SUMMARY:Get Started With Kotlin Multiplatform for Shared Business Logic
DESCRIPTION:Kotlin Multiplatform (KMP) allows you to write code once and sh
 are it across multiple target platforms\, such as Android\, iOS\, web\, an
 d JVM. By leveraging KMP\, you can minimize code duplication\, maintain co
 nsistency\, and significantly reduce development time and effort. In this 
 Codelab\, we will walk developers through taking a standalone Android app 
 and a standalone iOS app\, extracting some business logic to a KMP Shared 
 Module\, and leveraging this shared business logic from both Android and i
 OS.
LOCATION:Room #173
DTSTART:20250522T120000Z
DTEND:20250522T124500Z
END:VEVENT
BEGIN:VEVENT
UID:04d18d56-bbea-4a66-aa6d-2e88ca57b230
DTSTAMP:20250517T085705Z
SUMMARY:The wonders of smart casting
DESCRIPTION:Smart casting sets Kotlin apart from other languages. We often 
 see its effect through null checks and when expressions\, but in this talk 
 we'll show that smart casting is capable of much more! 
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T120000Z
DTEND:20250522T121500Z
END:VEVENT
BEGIN:VEVENT
UID:fcb1c50e-bd8b-4749-a6bd-efbd2511e2fe
DTSTAMP:20250517T085705Z
SUMMARY:Building a macOS screen saver with Kotlin
DESCRIPTION:Two years ago\, sitting in the audience at KotlinConf\, I was m
 esmerised by the idle animation on the big screen. It was in the style of 
 old school DVD player screen savers\, with Kotlin's various logos through 
 the years bouncing from edge to edge.\n\nI later found out that this was a 
 pre-rendered video\, and not a screen saver that I could just grab and sta
 rt using. This meant that I had no choice but to build it myself\, as a na
 tive macOS application running on Kotlin/Native.\n\nJoin me for a tale of 
 Kotlin success and macOS failures\, as we explore just what it takes to bu
 ild a screen saver in Kotlin.\n\nWe'll see how easy it is to call native p
 latform APIs from Kotlin code\, what challenges the development of such an 
 unusual application presents\, and how macOS is very much not our friend o
 n this whole journey.
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T123000Z
DTEND:20250522T124500Z
END:VEVENT
BEGIN:VEVENT
UID:a0df5631-842e-4617-9a48-2f412405f4a8
DTSTAMP:20250517T085705Z
SUMMARY:Coffee Break
LOCATION:Keynote room
DTSTART:20250522T124500Z
DTEND:20250522T131500Z
END:VEVENT
BEGIN:VEVENT
UID:e2ed6121-ff09-48c8-9e0a-5f0dc446fb35
DTSTAMP:20250517T085705Z
SUMMARY:Building AI Agents in Kotlin
DESCRIPTION:AI agents are fully autonomous systems whose actions are dynami
 cally directed by LLMs. In agents\, LLMs are not only used for standalone 
 tasks while keeping the general flow predefined in the code — they become 
 the main actor responsible for answering how a task should be accomplished
 .\n\nThis talk will provide an overview of AI agents\, including their bui
 lding blocks and basic workflows. It will share the essential knowledge fo
 r building effective AI agents in Kotlin.
LOCATION:Keynote room
DTSTART:20250522T131500Z
DTEND:20250522T140000Z
END:VEVENT
BEGIN:VEVENT
UID:71fecd4f-513f-472e-a69b-a7f40d03172c
DTSTAMP:20250517T085705Z
SUMMARY:Building Inclusive Jetpack Compose Apps: Leveraging Kotlin and the 
 Accessibility Scanner
DESCRIPTION:Accessibility is a growing and important aspect in app developm
 ent that isn’t always prioritized. Google’s efforts include making apps mo
 re accessible which are shown in their new standard of making UIs\, using 
 Jetpack Compose. Jetpack Compose with its Kotlin-based declarative approac
 h offers a simplified path to building inclusive UIs. Within Jetpack Compo
 se\, there are powerful tools like the Accessibility Scanner to quickly id
 entify and address common accessibility issues\, improving the overall use
 r experience. This talk will show that straightforward changes yield drama
 tic improvements for user experience. Through the talk\, strategies will b
 e shown how to improve accessibility. 
LOCATION:Hall D2
DTSTART:20250522T131500Z
DTEND:20250522T140000Z
END:VEVENT
BEGIN:VEVENT
UID:81df85dd-5580-487d-8503-caadd5623bd0
DTSTAMP:20250517T085705Z
SUMMARY:Blueprints for Scale: What AWS Learned Building a Massive Multiplat
 form Project
DESCRIPTION:The AWS SDK for Kotlin is a massive multiplatform project\, spa
 nning over 300 services and targeting 8 distinct platforms.\n\nIn this ses
 sion\, we’ll share first-hand insights into managing the challenges of a l
 arge Kotlin Multiplatform project\, detailing how the AWS SDK for Kotlin w
 as designed\, developed\, and scaled. You’ll hear about the best practices 
 we adopted\, the lessons learned\, and the strategies that worked (and did
 n’t) at AWS scale.\n\nJoin us as we discuss design tradeoffs\, maintaining 
 backwards compatibility\, adding support for Kotlin Multiplatform\, automa
 ting build and release processes\, and more!
LOCATION:Auditorium 15
DTSTART:20250522T131500Z
DTEND:20250522T140000Z
END:VEVENT
BEGIN:VEVENT
UID:587d0af4-bb41-45be-9c60-3936c3901556
DTSTAMP:20250517T085705Z
SUMMARY:Introducing Compose Hot Reload
DESCRIPTION:Compose Hot Reload is a new plugin for Compose apps running on 
 the JVM\, which lets you see the results of your code changes live\, witho
 ut having to restart the app.\n\nIn this talk\, we'll look at where Compos
 e Hot Reload is today and how you can use it in your projects to make iter
 ating on UI code faster\, more convenient\, and more exciting!\n\nThen we'
 ll dive into the technical details to see how multiple JetBrains technolog
 ies came together\, step by step\, lifting a modern UI framework to the ne
 xt level. We'll also learn about all the fun issues encountered and decisi
 ons that had to be made along the way.
LOCATION:Auditorium 11+12
DTSTART:20250522T131500Z
DTEND:20250522T140000Z
END:VEVENT
BEGIN:VEVENT
UID:f18fe33d-6b98-485e-93b1-59063e3bde5d
DTSTAMP:20250517T085705Z
SUMMARY:Coroutine Debugging in IntelliJ IDEA
DESCRIPTION:During the past 1.5 years\, we’ve implemented the smooth corout
 ine debugging experience\, so it would feel almost the same as debugging s
 ynchronous code and even better! In this talk I will show you the capabili
 ties of coroutine debugger and best practices for debugging coroutines. Al
 so\, I’ll tell you a little bit about the challenges we faced while implem
 enting these improvements\, such as deep integration and communication bet
 ween the IDE and the coroutine library.
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T131500Z
DTEND:20250522T133000Z
END:VEVENT
BEGIN:VEVENT
UID:4c897d68-4636-49a3-9c9c-f37feab3aba1
DTSTAMP:20250517T085705Z
SUMMARY:How to Build Your Own Kotlin Course
DESCRIPTION:Interested in teaching Kotlin? This session introduces a compre
 hensive set of materials designed to help you build your own Kotlin course
 . These resources include presentations with speaker notes\, theory quizze
 s\, homework assignments\, and interactive in-IDE courses that give studen
 ts hands-on experience. We will also share insights from implementing thes
 e materials at two universities\, and show how they can be adapted for dif
 ferent audience levels.
LOCATION:Room #173
DTSTART:20250522T131500Z
DTEND:20250522T140000Z
END:VEVENT
BEGIN:VEVENT
UID:2a4d9bab-af64-4ddd-b1ea-cacf74752316
DTSTAMP:20250517T085705Z
SUMMARY:Coroutines and Structured Concurrency in Ktor
DESCRIPTION:Ktor is built from the ground up using Kotlin and Coroutines. I
 t allows us to leverage Structured Concurrency\, and easily build elegant 
 and robust applications.\n\nDiscover how Coroutines and CoroutineScopes wo
 rk in Ktor from the ground up\, and what patterns and best practices allow 
 building safe -and maintainable applications with Ktor in Kotlin.
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T134500Z
DTEND:20250522T140000Z
END:VEVENT
BEGIN:VEVENT
UID:e5d6ab12-168f-46dc-b9c3-bcefff5b005f
DTSTAMP:20250517T085705Z
SUMMARY:Break
LOCATION:Hall D2
DTSTART:20250522T140000Z
DTEND:20250522T141500Z
END:VEVENT
BEGIN:VEVENT
UID:9c2127a3-2e1a-4722-994c-953b0dfe00b3
DTSTAMP:20250517T085705Z
SUMMARY:Full Stream Ahead: Breaking the protocol barrier with http4k
DESCRIPTION:HTTP's request-response pattern has served us well\, but modern 
 web applications demand more. Real-time communication demands different pr
 otocols\, yet maintaining testability and simplicity remains crucial to de
 veloper experience.\n\nIn this talk\, we'll explore how http4k extends HTT
 P's capabilities through WebSocket and Server-Sent Events support and how 
 these protocols can be modelled as simple functions\, making them as testa
 ble as plain HTTP endpoints. We'll then show how these streaming capabilit
 ies open up new possibilities for server-side rendering\, bringing us full 
 circle from the days of JSP to modern reactive interfaces - all while keep
 ing the complexity on the server where it belongs.\n\nJoin us to discover 
 how http4k's streaming capabilities can enhance your web applications\, en
 abling everything from chat applications to live dashboards and reactive s
 erver-rendered interfaces.
LOCATION:Keynote room
DTSTART:20250522T141500Z
DTEND:20250522T150000Z
END:VEVENT
BEGIN:VEVENT
UID:7320116c-56ee-4588-af84-1203f56c9854
DTSTAMP:20250517T085705Z
SUMMARY:Multiplatform Settings: A case study in Multiplatform library devel
 opment
DESCRIPTION:How do I create libraries for Kotlin Multiplatform projects? Ko
 tlin lets you share common code between different target platforms\, but b
 y default only a limit set of platform-agnostic APIs are available to the 
 code. Growing the amount of APIs available required Kotlin Multiplatform l
 ibraries.\n\nI’ll talk through what it looks like to create such a library
 \, drawing from my experience building and maintaining one of my own since 
 the early days of Kotlin/Native. We'll talk about how to find shared abstr
 actions around different platform APIs\, how to handle the fast-paced evol
 ution of this environment\, and what this all felt like as a first-time li
 brary developer. When we're done\, you’ll be ready to leverage the growing 
 ecosystem as well as make your own contributions.
LOCATION:Hall D2
DTSTART:20250522T141500Z
DTEND:20250522T150000Z
END:VEVENT
BEGIN:VEVENT
UID:8726b455-759f-4dc5-8613-08b5e53254e9
DTSTAMP:20250517T085705Z
SUMMARY:Compose draw speedrun - reloaded
DESCRIPTION:Let's see how many compose drawing techniques we can demo in 45 
 minutes. This live code speed run will start simple and quickly escalate. 
 I will try out as many drawing techniques as will fit into the time and sc
 reen space in a compose desktop app. Thanks to hot reloading we will be ab
 le to see the effects as the code changes.\n\nAt the end of this talk the 
 audience will:\n\n- have a good overview of what is possible with compose 
 drawing\n- see hot reload in action\n- get access to the open source repo 
 of samples as a reference
LOCATION:Auditorium 15
DTSTART:20250522T141500Z
DTEND:20250522T150000Z
END:VEVENT
BEGIN:VEVENT
UID:08d00c33-24f9-41e1-9a6d-01d22b0e4853
DTSTAMP:20250517T085705Z
SUMMARY:LangChain4j with Quarkus
DESCRIPTION:Kotlin is loved for its expressiveness\, Quarkus for its blazin
 g-fast runtime\, and LangChain4j for integrating AI into modern applicatio
 ns. But what happens when you bring all three together? You unlock the pot
 ential to build cutting-edge\, AI-powered applications efficiently.\n\nDes
 pite the growing demand for AI-driven solutions\, integrating AI workflows 
 into existing applications remains a challenge for many Kotlin developers. 
 Pain points include complex setup\, lack of synergy between frameworks\, a
 nd maintaining high performance while leveraging AI tools.\n\nThis talk of
 fers a solution: combining LangChain4j and Quarkus to create Kotlin applic
 ations that leverage AI capabilities seamlessly. We’ll explore how to stre
 amline integration\, manage dependencies\, and use Kotlin’s idiomatic feat
 ures to simplify AI workflows.\n\nWho is this talk for? Kotlin developers 
 curious about embedding AI into their apps\, and Quarkus fans eager to exp
 lore its potential in AI-driven use cases. Attendees will leave with actio
 nable insights\, including code samples\, to build AI-powered applications 
 confidently.
LOCATION:Auditorium 11+12
DTSTART:20250522T141500Z
DTEND:20250522T150000Z
END:VEVENT
BEGIN:VEVENT
UID:b945fdc4-f39e-42ee-9d9c-5df6e0b62116
DTSTAMP:20250517T085705Z
SUMMARY:Interactive Session on Shaping Kotlin Education
DESCRIPTION:Kotlin is a popular choice for teaching programming\, and the K
 otlin Foundation Education Committee is here to support educators in using 
 it to its full potential.\n\nIn this session\, we’ll share current initiat
 ives for those teaching and learning Kotlin – whether in classrooms\, work
 shops\, or teams. You’ll learn how to get involved\, access available reso
 urces\, and connect with others in the teaching community.\nJoin us for an 
 interactive format featuring educators\, experts\, and members of the Kotl
 in Foundation Education Committee. Together\, we’ll explore how we can bet
 ter support your work\, address common challenges\, and discuss what we sh
 ould prioritize next.\n\nBring your questions!
LOCATION:Room #173
DTSTART:20250522T141500Z
DTEND:20250522T150000Z
END:VEVENT
BEGIN:VEVENT
UID:c8e55237-b9ac-476b-8993-8e0a05ccb35b
DTSTAMP:20250517T085705Z
SUMMARY:Kotlin compatibility crash course
DESCRIPTION:A new version of Kotlin is out 🎉 Let's update all the things 🚀
  \nBut... what does it really mean to update your Kotlin version?\n\nIn th
 is talk\, we'll take a look at different parts of the Kotlin ecosystem: Ko
 tlin stdlib\, Gradle Plugin\, compiler\, K/N\, JS\, etc... and the differe
 nt compatibility guarantees they offer. \n\nWe'll dive into Android and Ja
 va. They have compatibility guarantees too!\n\nWhether you're developing a
 n Android app\, a server\, a library or a Gradle plugin\, we'll see how yo
 u can use the latest tooling while still giving your users plenty of time 
 to update on their own schedule. \nAfter this talk\, you'll never be afrai
 d to see "incompatible version of metadata" in your logs anymore!
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T141500Z
DTEND:20250522T143000Z
END:VEVENT
BEGIN:VEVENT
UID:586a2b19-a051-4777-ac03-9f1747424e2c
DTSTAMP:20250517T085705Z
SUMMARY:Kotlin Worst Practices — How to Maximize Your Hassle
DESCRIPTION:Want to turn your Kotlin journey into a rollercoaster of frustr
 ation? You’re in the right place! In this session\, we’ll uncover the ulti
 mate strategies for making life harder: delightfully obtuse anti-patterns\
 , enthusiastically misusing language features\, and blissfully ignoring ec
 osystem best practices.\n\nPacked with real-world blunders\, this talk is 
 your shortcut to chaos!
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T144500Z
DTEND:20250522T150000Z
END:VEVENT
BEGIN:VEVENT
UID:20023883-fe56-4ef2-aa8a-38ef5c17630e
DTSTAMP:20250517T085705Z
SUMMARY:Break
LOCATION:Hall D2
DTSTART:20250522T150000Z
DTEND:20250522T151500Z
END:VEVENT
BEGIN:VEVENT
UID:11243be8-5374-48c7-88eb-a5f900a32400
DTSTAMP:20250517T085705Z
SUMMARY:That's Unpossible – A full stack side project webapp (including a h
 igh-fidelity UI!) all in Kotlin
DESCRIPTION:It's happened to all of us – an idea strikes for a side project 
 and you want to build a quick webapp\, but then you remember the state of 
 webdev is still a bit of a mess in 2025. Sure you could pick up one of tho
 se "all-in-one" frameworks\, but they're so heavy and complicated. And eve
 n if that worked\, you'd still need something on the frontend so you start 
 looking at the the weird world of frontend frameworks or (gasp!) writing r
 aw HTML/CSS/JavaScript.\n\nBut it doesn't have to be that hard! I'm here t
 o present a straightforward stack that gets you a full stack webapp up and 
 running fast\, using the one language we all know and love – Kotlin. Datab
 ase manipulation\, async services\, and a high fidelity UI\, all accessed 
 and built with Kotlin. And yes\, you read that right – you can have a grea
 t UI without having to write a single line of CSS\, HTML\, or JavaScript.\
 n\nI'll show you a path for building a basic webapp on top of a simple dat
 abase (Postgres)\, performing basic CRUD operations on that database (Kotl
 in Exposed)\, building business logic via async services (Kotlin Coroutine
 s)\, and constructing a high-fidelity UI to bring it all together (Vaadin 
 on Kotlin). By the end of the talk we'll have a fully functional webapp th
 at is entirely built on Kotlin.\n\nAnd let's not forget\, we're not buildi
 ng a by-the-book\, very serious webapp\, just something we're doing on the 
 side for fun. So forget about tests and forget about perfect architecture 
 – let's have some fun\, learn a few things along the way\, and get this th
 ing running!
LOCATION:Keynote room
DTSTART:20250522T151500Z
DTEND:20250522T160000Z
END:VEVENT
BEGIN:VEVENT
UID:05838dff-ca91-49fe-b076-35b844a6f395
DTSTAMP:20250517T085705Z
SUMMARY:Build your own NES Emulator... with Kotlin
DESCRIPTION:Let Fools Dream\n\nFor those who have ever wanted to recreate c
 lassic games\, this presentation covers my five-year journey to build a NE
 S emulator in Kotlin. Starting from scratch in 2020 (you can probably gues
 s why)\, I’ll share the challenges posed by the architecture of old hardwa
 re\, performance optimization (surprise\, surprise)\, and the difficulties 
 of emulating sound. I’ll also highlight which Kotlin features shine (and w
 hy concurrency isn’t one of them). This high-level overview will walk thro
 ugh each step of the process—from reading ROM formats to where GPT can hel
 p\, though it won’t write the code for us just yet. We’ll wrap up by launc
 hing Mario on the emulator (hopefully without a call from Nintendo).
LOCATION:Hall D2
DTSTART:20250522T151500Z
DTEND:20250522T160000Z
END:VEVENT
BEGIN:VEVENT
UID:cdb5b2b3-1bdf-48a2-8336-0ffee51859ee
DTSTAMP:20250517T085705Z
SUMMARY:Making native SDKs Multiplatform at RevenueCat
DESCRIPTION:In the rapidly evolving Kotlin Multiplatform ecosystem a critic
 al gap has been the lack of a unified in-app purchase and subscription sol
 ution. Until now\, that is. The RevenueCat SDK for Kotlin Multiplatform al
 lows you to write your subscription code once and run it on both Android a
 nd iOS. But how did we build it? We have existing native SDKs for both And
 roid and iOS\, and did not want to rewrite all core logic. This talk will 
 cover the strategies\, pitfalls and learnings of our approach to bringing 
 native SDKs to Kotlin Multiplatform.\n\n
LOCATION:Auditorium 15
DTSTART:20250522T151500Z
DTEND:20250522T160000Z
END:VEVENT
BEGIN:VEVENT
UID:78ed6043-6e4a-44b6-8ecd-b9360715ee72
DTSTAMP:20250517T085705Z
SUMMARY:Writing Your Third Kotlin Compiler Plugin
DESCRIPTION:Compiler plugins have become an integral part of a developer’s 
 experience with the Kotlin programming language. Areas like UI development 
 (Jetpack Compose)\, backend development (Spring Boot / Kotlin Serializatio
 n)\, and even testing (Power-Assert) all leverage compiler plugins. But wh
 at is a Kotlin compiler plugin and what can it do? Let’s learn by writing 
 one!\n\nIn this talk\, we’ll discuss use cases for compiler plugins and le
 arn how they integrate with the Kotlin compiler. Then we’ll explore everyt
 hing related to how code is represented within the Kotlin compiler\, inclu
 ding how to inspect\, navigate\, transform\, and create these representati
 ons. When we’re done\, we’ll have written a compiler plugin from scratch w
 hich can navigate the project code\, inspect annotations\, generate boiler
 plate\, and even report errors!
LOCATION:Auditorium 11+12
DTSTART:20250522T151500Z
DTEND:20250522T160000Z
END:VEVENT
BEGIN:VEVENT
UID:5f6094a7-2d2c-43ab-a694-864e71579416
DTSTAMP:20250517T085705Z
SUMMARY:Party
LOCATION:Keynote room
DTSTART:20250522T160000Z
DTEND:20250522T200000Z
END:VEVENT
BEGIN:VEVENT
UID:ec3f8016-0f6d-468d-975f-16cef46bf096
DTSTAMP:20250517T085705Z
SUMMARY:Registration
LOCATION:Keynote room
DTSTART:20250523T060000Z
DTEND:20250523T070000Z
END:VEVENT
BEGIN:VEVENT
UID:6562826b-1af7-4a8c-a35f-33d224b85992
DTSTAMP:20250517T085705Z
SUMMARY:Qualities of a Well-Functioning System
DESCRIPTION:“We can't impose our will on a system. We can listen to what th
 e system tells us\, and discover how its properties and our values can wor
 k together to bring forth something much better than could ever be produce
 d by our will alone.” -- Donella Meadows\n\nRelational complexity in softw
 are is constantly increasing. Data pipelines become a mesh. A monoliths be
 comes microservices. Synchronous database transactions become event-driven 
 architectures. Infrastructure becomes DevOps. Software is becoming systems 
 of software.\n\nAs technology professionals\, we are trapped between the d
 esire for control and the reality of systems. Increasingly\, we act amidst 
 ambiguity and uncertainty. We diversify and expand our skillset.  Systems 
 challenge our thinking patterns and core mental models. \n\nFortunately\, 
 there are some core principles for designing healthy systems. I don't mean 
 (strictly) scalability or microservices. Three qualities are inherent in w
 ell-functioning systems: resilience\, self-organization and hierarchy. \n\
 nEach of the qualities\, guaranteed\, differ from your current definition. 
 In this keynote\, we will explore them from a systems point of view.
LOCATION:Keynote room
DTSTART:20250523T070000Z
DTEND:20250523T080000Z
END:VEVENT
BEGIN:VEVENT
UID:159cfa51-6a29-40e2-b79d-be16cb7fbaab
DTSTAMP:20250517T085705Z
SUMMARY:Break
LOCATION:Hall D2
DTSTART:20250523T080000Z
DTEND:20250523T081500Z
END:VEVENT
BEGIN:VEVENT
UID:4e7677ad-a745-4006-8f10-da872c74b3c3
DTSTAMP:20250517T085705Z
SUMMARY:Dissecting Kotlin: Surveying the Latest Stable and Experimental
DESCRIPTION:As Kotlin evolves\, not only do the features available to us as 
 developers evolve\, but so does our understanding of what idiomatic Kotlin 
 is\, how we can best leverage new and old features and the semantic and pe
 rformance impacts of our implementation choices.\n\nIn this session\, we w
 ill examine some of the features released over the last couple of years in 
 Kotlin\, dive into their implementations\, explore where we may need them 
 and how we might use them\, and discuss how these features fit into the br
 oader ideas and themes of Kotlin as a language.
LOCATION:Keynote room
DTSTART:20250523T081500Z
DTEND:20250523T090000Z
END:VEVENT
BEGIN:VEVENT
UID:9687ee67-eb3d-421d-8be0-6d213354ed0b
DTSTAMP:20250517T085705Z
SUMMARY:Dependencies and Kotlin/Native
DESCRIPTION:In the JVM world\, the virtual machine and its class loaders do 
 the heavy lifting of linking and loading our applications with dependencie
 s. When we use Kotlin Multiplatform to produce a native binary\, we lose t
 he simplicity of JAR archives and .class files.\n\nIn this session\, we'll 
 explore the differences between how JVM and native platforms handle depend
 encies. We'll look at some of the common blockers that native platforms th
 row our way and possible workarounds. We'll also compare dependency manage
 ment tools used on Apple platforms like CocoaPods and Swift Package Manage
 r to see their strengths and weaknesses.\n\nLearn how native dependencies 
 interact\, how they are loaded and the unexpected complexities of the nati
 ve world.
LOCATION:Hall D2
DTSTART:20250523T081500Z
DTEND:20250523T090000Z
END:VEVENT
BEGIN:VEVENT
UID:a4f73879-d65f-4ce8-ace8-6e02fa7cf7aa
DTSTAMP:20250517T085705Z
SUMMARY:Collect Like a Pro: a deep dive on the Android lifecycle-aware coro
 utines APIs
DESCRIPTION:Collecting in a lifecycle-aware manner is essential for saving 
 system resources. Since coroutines and flows are the recommended solution 
 for asynchronous programming on Android\, there are APIs that do most of t
 he heavy-lifting work for you. Namely: repeatOnLifecycle\, flowWithLifecyc
 le\, and Compose’s collectAsStateWithLifecycle. When building for Android\
 , you should include these libraries in your toolbox. But even if you’re d
 oing KMP\, you should keep this in mind.\n\nIn this talk\, we’ll see the d
 ifferent lifecycle-aware coroutines APIs\, the problems they solve\, and w
 hich types of flows can make your system waste resources—Disclaimer! A col
 d flow backed by a Channel or Flow operators with buffers might be under i
 nvestigation. Prepare to roll up your sleeves as we dissect their implemen
 tation details and learn low-level coroutines and Compose APIs. But the jo
 urney doesn't end there! To help you think as a library developer\, we’ll 
 explore an API regret that never made it into stable to protect developers 
 from misusing the API and force them respect coroutines’ structure concurr
 ency.\n\nBy the end of the talk\, you'll understand the importance of coll
 ecting in a lifecycle-aware manner\, use low-level coroutines APIs to buil
 d your own APIs\, and design APIs that respect structure concurrency and p
 rotect your users from misuse.
LOCATION:Auditorium 15
DTSTART:20250523T081500Z
DTEND:20250523T090000Z
END:VEVENT
BEGIN:VEVENT
UID:32b511f3-8b0d-4257-b2b2-ce8b7921c1f6
DTSTAMP:20250517T085705Z
SUMMARY:Taming Asynchronous Beasts: Debugging and Performance Tuning in a C
 oroutine World
DESCRIPTION:Asynchronous code can be challenging to debug and optimize\, es
 pecially when dealing with complex coroutine hierarchies and flow transfor
 mations. This session reveals practical techniques for tracking down elusi
 ve bugs\, optimizing performance\, and maintaining reliability in coroutin
 e-heavy applications.\n\nDrawing from real production experience\, we'll e
 xplore advanced debugging techniques\, common performance pitfalls\, and p
 ractical solutions for the most challenging scenarios. You'll learn how to 
 effectively use built-in tools\, recognize problematic patterns\, and impl
 ement proven optimization strategies.
LOCATION:Auditorium 11+12
DTSTART:20250523T081500Z
DTEND:20250523T090000Z
END:VEVENT
BEGIN:VEVENT
UID:86d27b4f-9314-46ae-a3e0-b8c5dbc59aa1
DTSTAMP:20250517T085705Z
SUMMARY:Leveraging KMP for navigation in the McDonalds App.
DESCRIPTION:KMP is well known as THE domain layer framework for Android and 
 iOS. But why not take it further! In our pursuit to create the slimmest po
 ssible android and iOS apps\, where KMP handles everything except the UI. 
 Our next step is taking control of the navigation system. But Handling and
 roid and iOS navigation from a cross platform environment is not easy. In 
 this talk we tell you how it is done\, what challenges we overcame and whe
 re we are now.!
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250523T081500Z
DTEND:20250523T083000Z
END:VEVENT
BEGIN:VEVENT
UID:781d912c-28ce-4b0b-8a0b-09ff6f54baa9
DTSTAMP:20250517T085705Z
SUMMARY:Kotlin Multiplatform's Cross-Platform Brilliance at Norway's 377-Ye
 ar-Old National Postal Service
DESCRIPTION:Do you have a complex business rule-set problem? You know the k
 ind where you have business rules (logic) spread across multiple platforms
 \, systems and applications? Some of them might even be alter egos of the 
 same rule hiding in different apps. You never know which one might turn up 
 where\, there is no single source of truth\, solving errors takes hours of 
 debugging\, and making changes requires (oftentimes) painful coordination 
 across teams and applications (ugh).\n\nWe faced this exact challenge at P
 osten Bring As - Norwegian National Postal Service founded way back in 164
 7 - a 377-year-old institution with software spanning more generations tha
 n most families! Our business logic was scattered across multiple platform
 s\, some almost as old as the company itself (well\, not quite\, but it su
 re felt like it).\n\nIn my session I’m spilling the tea. We discover how t
 he team at century-old Norwegian postal services giant tackled modern chal
 lenges with cutting-edge technology.\n\nWe’ll look through real-world use 
 cases at Posten Bring. We’ll reflect on what we did - key learnings\, what 
 went well and most importantly - what didn’t quite go as planned. We’ll al
 so look through some resources to get started. We'll learn how KMP provide
 s a unified framework for code sharing and execution across various platfo
 rms to solve the challenge of different codebases targeting different runt
 imes.\n\nThis talk is for you if troublesome and unruly business logic kee
 ps you up at night and you want that to end NOW. It is also for you if you 
 like to hear a good story.
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250523T084500Z
DTEND:20250523T090000Z
END:VEVENT
BEGIN:VEVENT
UID:fc7f07db-406e-4704-a997-2ded63173f13
DTSTAMP:20250517T085705Z
SUMMARY:Break
LOCATION:Hall D2
DTSTART:20250523T090000Z
DTEND:20250523T091500Z
END:VEVENT
BEGIN:VEVENT
UID:62853cd7-b1b2-4332-9d64-41722bd3b423
DTSTAMP:20250517T085705Z
SUMMARY:Designing Kotlin Beyond Type-Inference
DESCRIPTION:Kotlin programmers regularly elide uninformative types from the
 ir programs. This makes Kotlin programs faster to develop\, easier to read
 \, and less effort to maintain. It also means the Kotlin language needs to 
 be designed so that its compilers can reliably accept programs without the
 se typing hints. We think of this as type-inference\, but—by definition—ty
 pe-inference means determining these missing types can be filled in such t
 hat the program type-checks.\n\nBut what if we can determine a program is 
 safe without determining these missing types? What if we can do so even wh
 en it such types do not exist? And what if we can do so more efficiently t
 han any type-inference algorithm can?\nIn researching Kotlin's next-genera
 tion typing algorithms\, we have discovered we can efficiently exceed the 
 capabilities of type-inference and type-checking. We have developed a type
 -"outference" algorithm that efficiently decides "type-consistency"\, whic
 h all type-inferable/checkable programs satisfy (but not vice versa).\n\nW
 hile type-inference still has its place in user feedback and compilation\, 
 type-consistency is a much more flexible property\, and type-outference of
 fers clear guidelines on how to design features for efficient validation. 
 In this talk\, after introducing these concepts\, we will provide a behind
 -the-scenes look into how they guide the design of various expected and hy
 pothetical features for Kotlin\, such as union types for errors\, conditio
 nal inheritance for type-safe equality with value types\, and implicit pol
 ymorphism for non-escaping references.
LOCATION:Keynote room
DTSTART:20250523T091500Z
DTEND:20250523T100000Z
END:VEVENT
BEGIN:VEVENT
UID:702e8b0f-0ddf-4c6f-b32a-36d553281554
DTSTAMP:20250517T085705Z
SUMMARY:Build Websites in Kotlin & Compose HTML with Kobweb
DESCRIPTION:Want to build a website using Kotlin? Kobweb is a modern web fr
 amework that makes web development enjoyable by leveraging Compose HTML an
 d drawing inspiration from Jetpack Compose.\nWith Kobweb\, you can create 
 a portfolio site\, product landing page\, personal blog\, and more—all whi
 le benefiting from Kotlin’s concise\, expressive\, and type-safe syntax.\n
 In this live coding session\, we’ll introduce the fundamentals of Kobweb a
 nd Compose HTML\, walking you through the process of building a functional 
 website using Kotlin/JS. By the end\, you’ll see just how easy it is to de
 velop and export a traditional website—embracing HTML\, CSS\, and the DOM 
 through a Kotlin-first\, Compose-powered approach.\nThis talk is designed 
 for beginners\, and no prior web development experience is required.\nIf y
 ou’re curious about web development and want to explore a Kotlin-powered\, 
 type-safe\, Compose API for building modern websites\, this session is the 
 perfect place to start!
LOCATION:Hall D2
DTSTART:20250523T091500Z
DTEND:20250523T100000Z
END:VEVENT
BEGIN:VEVENT
UID:33324ef3-ed01-4b14-8214-430d7216eee8
DTSTAMP:20250517T085705Z
SUMMARY:Duolingo + KMP: A Case Study in Developer Productivity
DESCRIPTION:Duolingo ships weekly on iOS and Android to 40M+ Daily Active U
 sers across 176 countries. Shipping fast is important to us and Kotlin Mul
 tiplatform is starting to play a huge role in how we accomplish this!\n\nI
 n this talk\, we’ll:\n- Discuss how we shipped Video Call\, Math\, Adventu
 res and more across Android\, iOS\, and Web\n- Propose what potential upco
 ming projects could benefit from KMP and the rubric we use\n- Share the ch
 allenges faced and lessons learned along the way\n\n…and more!
LOCATION:Auditorium 15
DTSTART:20250523T091500Z
DTEND:20250523T100000Z
END:VEVENT
BEGIN:VEVENT
UID:7c2d7256-b1b9-457b-b206-5031e3df7d06
DTSTAMP:20250517T085705Z
SUMMARY:Exposed 1.0: Stable\, Scalable\, and Looking Forward
DESCRIPTION:Exposed is a database access library that provides a type-safe 
 SQL DSL\, a powerful ORM\, and reliable database interactions as a seamles
 s extension of any Kotlin developer’s code.\n\nThe team behind the library 
 has been working towards its first stable version and recently published a 
 beta release. This talk aims to provide a detailed insight into what stabi
 lity will mean for the library\, as well as to highlight the enhanced feat
 ures that have been implemented over time.\n\nWe’ll also cover the introdu
 ction of support for non-blocking database operations using R2DBC with Kot
 lin coroutines\, as well as the challenges encountered during its developm
 ent.\n\nLastly\, to share a look into the future of Exposed\, we’ll touch 
 on planned features for later stable versions\, like integrated support fo
 r database migrations\, which address the library’s position as a database 
 access solution in Kotlin Multiplatform development.
LOCATION:Auditorium 11+12
DTSTART:20250523T091500Z
DTEND:20250523T100000Z
END:VEVENT
BEGIN:VEVENT
UID:178ccfe2-899a-4bc5-b407-cb2528531b2d
DTSTAMP:20250517T085705Z
SUMMARY:Get Started With Kotlin Multiplatform for Shared Business Logic 
DESCRIPTION:Kotlin Multiplatform (KMP) allows you to write code once and sh
 are it across multiple target platforms\, such as Android\, iOS\, web\, an
 d JVM. By leveraging KMP\, you can minimize code duplication\, maintain co
 nsistency\, and significantly reduce development time and effort. In this 
 Codelab\, we will walk developers through taking a standalone Android app 
 and a standalone iOS app\, extracting some business logic to a KMP Shared 
 Module\, and leveraging this shared business logic from both Android and i
 OS.
LOCATION:Room #173
DTSTART:20250523T091500Z
DTEND:20250523T100000Z
END:VEVENT
BEGIN:VEVENT
UID:1c10630c-56e8-4c5d-8dda-315395e1b130
DTSTAMP:20250517T085705Z
SUMMARY:Getting your Gradle setup right\, at the right time
DESCRIPTION:Let’s address the elephant in the room - setting up a Gradle pr
 oject in a proper scalable way is hard. What’s even more challenging is do
 ing this once the project is already scaled and running. What’s nearly imp
 ossible is learning what “a good scalable setup” actually means on your ow
 n.\n\nSo what does a good scalable setup mean? Are the best practices univ
 ersal for all types of project? Are there Kotlin specific best practices? 
 When and how should you introduce them? Let’s dive in!
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250523T091500Z
DTEND:20250523T093000Z
END:VEVENT
BEGIN:VEVENT
UID:5b20ac2b-6e30-473f-b268-f03e436a6dc9
DTSTAMP:20250517T085705Z
SUMMARY:Build your Kotlin and Android apps with Buck2
DESCRIPTION:We're happy to announce that Buck2\, a large-scale open source 
 build system from Meta\, now supports Kotlin and Android. Buck2  builds al
 l Android applications at Meta with a focus on fast incremental iterations 
 with code. \nWe will start building an app from basics and then learn some 
 advance buck2 capabilities\, like Remote Execution\, Source-only ABI\, and 
 Build Tools API integrations  
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250523T094500Z
DTEND:20250523T100000Z
END:VEVENT
BEGIN:VEVENT
UID:fd565f07-7f75-4089-8df4-ced64991f8c1
DTSTAMP:20250517T085705Z
SUMMARY:Lunch
LOCATION:Keynote room
DTSTART:20250523T100000Z
DTEND:20250523T110000Z
END:VEVENT
BEGIN:VEVENT
UID:bcddb9f0-bb60-4b7d-bd0f-ca7ec5049d9c
DTSTAMP:20250517T085705Z
SUMMARY:The Easing Symphony: AnimationSpec in detail!
DESCRIPTION:Let's take a deeper look at AnimationSpec and learn how to use 
 it to customize animations! With music!\n\nUsing Compose Multiplatform\, w
 e'll go over the different AnimationSpec types we have\, and which persona
 lization options they offer. We'll cover topics from how to use AnimationS
 pec\, to how to create your own easing curves. And since animations are me
 ant to be fun\, we'll do all of this while creating a music visualizer!\n\
 nAfter this talk\, you'll have a better understanding on how powerful anim
 ationSpec is\, and how you can use it to create complex and fun animations
 .\n\nKeep it fun\, keep it animated! :)\n
LOCATION:Keynote room
DTSTART:20250523T110000Z
DTEND:20250523T114500Z
END:VEVENT
BEGIN:VEVENT
UID:8c613a72-152b-40ff-95e3-47804af3206e
DTSTAMP:20250517T085705Z
SUMMARY:Project Sparkles: How Compose for Desktop is changing Android Studi
 o and IntelliJ
DESCRIPTION:Many of us use Android Studio and IntelliJ every day\, and appr
 eciate how its rich feature set makes our job easier. Most people know tha
 t both products are built on the IntelliJ Platform\, the same that underpi
 ns the popular IDEs from JetBrains\, which has seen lasting success for ov
 er 20 years. It’s a solid\, expansive\, and by far the best foundation on 
 which we could stand on to deliver developer goodies.\n\nHowever\, some pa
 rts of the IntelliJ Platform show the signs of time\; in particular its UI 
 framework\, Swing\, is proving the most limiting\, having been around for 
 almost 30 years. Don’t get us wrong — it works\, and the IDEs themselves p
 rove you can ship complex UIs by using Swing on the IntelliJ Platform. But 
 as we looked at how nice it is to develop UIs on desktop by using Compose 
 for Desktop\, we thought: why don’t we do the same?\n\nEnter Project Spark
 les\, which aims at gradually introducing new high-quality\, polished UI s
 urfaces in Android Studio and IntelliJ\, developed in Compose for Desktop\
 , with all the bells and whistles you can expect from a top-tier interface
 . In this talk\, we’ll cover how Project Sparkles is impacting the develop
 ment of Android Studio and IntelliJ\, addressing long-standing user feedba
 ck\, and how Google and JetBrains are working together to build a framewor
 k to make your favorite IDE even better and easier to understand.\n\nWe’ll 
 demonstrate a few examples of features already shipping that are powered b
 y Project Sparkles\, explain what our goals and ambitions are\, and even s
 how some sneak peeks of things you may see in a future IDE version. We wil
 l also cover a roadmap on when developers can expect to use Compose for De
 sktop as a supported UI framework for IntelliJ plugin development!\n\nUI e
 nthusiasts\, assemble!
LOCATION:Hall D2
DTSTART:20250523T110000Z
DTEND:20250523T114500Z
END:VEVENT
BEGIN:VEVENT
UID:38446e1a-0e60-4d5b-9925-bd31eb05fcd9
DTSTAMP:20250517T085705Z
SUMMARY:Don't forget your values!
DESCRIPTION:No one likes to be forgotten\, and the results of most non-unit 
 function calls are no exception here. 'Check return value' or 'ignored cal
 l result' may sound familiar — those are popular Java linters' rules. Howe
 ver\, in our view\, this inspection is so crucial that it deserves its pla
 ce among compiler diagnostics. In this talk\, we'll explore the challenges 
 and complexities down the road of making a brand-new language feature. And
 \, of course\, how you can use it for your benefit.
LOCATION:Auditorium 15
DTSTART:20250523T110000Z
DTEND:20250523T114500Z
END:VEVENT
BEGIN:VEVENT
UID:9991b120-5d73-4992-a7b2-8d5cea37193d
DTSTAMP:20250517T085705Z
SUMMARY:Event-Driven Analytics: Building Real-Time Dashboards with Apache F
 link and Ktor
DESCRIPTION:The ability to process continuous data streams and deliver real
 -time insights has become crucial in modern application architectures. As 
 a developer you are probably very comfortable with RESTful services\, and 
 shifting to event-driven thinking opens new possibilities for responsivene
 ss and scalability (as well as new challenges and growing paints).\n\nThis 
 talk will explore building real-time analytics dashboards by combining Apa
 che Flink's powerful stream processing capabilities with Ktor's flexible w
 eb framework. We'll journey through the mental model transformation from r
 equest/response patterns to continuous event flows\, demonstrating how thi
 s shift enables truly reactive applications.\n\nYou'll learn:\n* How Apach
 e Flink handles stateful stream processing\, offering advantages for compl
 ex analytics use cases\n* Leveraging Flink's Table API and SQL capabilitie
 s to express complex transformations with familiar syntax\n* Implementing 
 real-time dashboards with Ktor and other Kotlin libraries\n\nBy the end of 
 this session\, you'll understand how to bridge the gap between powerful ba
 ckend stream processing and engaging user interfaces\, all while staying i
 n the Kotlin ecosystem. Regardless\, if you're a seasoned data streaming e
 ngineer or just beginning to explore beyond REST\, you'll bring home pract
 ical techniques for delivering real-time insights to your users.\n
LOCATION:Auditorium 11+12
DTSTART:20250523T110000Z
DTEND:20250523T114500Z
END:VEVENT
BEGIN:VEVENT
UID:792957f4-9cae-4a49-a038-963f4ff3b4b6
DTSTAMP:20250517T085705Z
SUMMARY:JSpecify: Java Nullness Annotations and Kotlin
DESCRIPTION:Q: Why should I care about Java nullness annotations?\n\nA: Bec
 ause they’ll make Kotlin code that uses Java libraries safer\, and because 
 they’ll make it easier to convert Java code to Kotlin.\n\nJSpecify release
 d a set of nullness annotations for Java in July. Unlike all the other nul
 lness annotations for Java\, JSpecify’s are defined by tool-agnostic speci
 fication. That means that all the Java nullness analyzers will agree on wh
 at they mean\, and the Kotlin compiler will too. And that means that your 
 Kotlin code will be able to use null-safe types instead of platform types 
 when it depends on well-annotated Java libraries.\n\nIn this talk\, we’ll 
 explain how Java nullness annotations will help you\, and how JSpecify’s w
 ork. We’ll also tease upcoming projects that aren’t about nullness but mig
 ht help your Kotlin code too.\n\n
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250523T113000Z
DTEND:20250523T114500Z
END:VEVENT
BEGIN:VEVENT
UID:5c0184e8-36d3-4c5a-b48d-2a407671eeb9
DTSTAMP:20250517T085705Z
SUMMARY:Break
LOCATION:Hall D2
DTSTART:20250523T114500Z
DTEND:20250523T120000Z
END:VEVENT
BEGIN:VEVENT
UID:a280f889-ffb2-4bd9-aec5-c76452da2d59
DTSTAMP:20250517T085705Z
SUMMARY:Large Scale Changes with AI - Migrating millions of lines of Java t
 o Kotlin at Uber
DESCRIPTION:Uber has one of the largest Android codebases in the world\, an
 d while Kotlin is first class\, millions of lines of Java remain to be con
 verted. Come along for the ride as we walk you through the tooling and pro
 cesses we've built and integrated while working with the community to safe
 ly mass migrate our production Java code to Kotlin code\, which we're now 
 utilizing to scale out more migrations to other technologies. \n\nWe'll co
 ver the motivations for tackling a migration of this magnitude\, the chall
 enges for LSCs (Large Scale Changes) in huge monorepos and organizations\, 
 generating migration data sets to power cutting-edge AI tools\, using agen
 tic systems and pipelines to deterministically tackle the migrations at sc
 ale\, the risks and mitigations for migrating this much production code\, 
 how to manage thousands of PRs\, and where we'll be taking this technology 
 next.
LOCATION:Keynote room
DTSTART:20250523T120000Z
DTEND:20250523T124500Z
END:VEVENT
BEGIN:VEVENT
UID:262cc2aa-b145-4339-b296-0f8d8430ad0b
DTSTAMP:20250517T085705Z
SUMMARY:Data Analysis for finance in Kotlin
DESCRIPTION:Data representation and analysis in finance has a large literat
 ure already present in R and Python\, two of the most common suspects. The
 y have the community\, tooling and a long tradition. But what about Kotlin 
 with some of the libraries in the family\, like DataFrame and Kandy? Kotli
 n\, traditionally known for its focus in mobile and backend development\, 
 has emerged as a strong contender in the data science space. This session 
 explores the potential of Kotlin for financial data analysis\, focusing on 
 the use of the DataFrame library and the Kandy visualization framework.\n\
 nWe will demonstrate how Kotlin provides a rich\, statically typed languag
 e environment\, ensuring safety\, conciseness\, and performance in handlin
 g large datasets commonly encountered in financial contexts. DataFrame pro
 vides the capacity to manipulate structured data\, while Kandy enables hig
 h-quality visualizations.\n\nThis presentation will also provide a compara
 tive analysis between Kotlin\, R\, and Python. We will examine common use 
 cases such as dividend history\, stock valuation based on price and yields
 . While R and Python have established ecosystems for data science\, Kotlin
 's performance\, tooling\, and modern features offer new possibilities for 
 finance professionals looking for a more efficient alternative.\n\n\n
LOCATION:Hall D2
DTSTART:20250523T120000Z
DTEND:20250523T124500Z
END:VEVENT
BEGIN:VEVENT
UID:98e12178-4e96-49f0-81dc-d0378cbb5ae3
DTSTAMP:20250517T085705Z
SUMMARY:Simplifying Full-Stack Kotlin: A Fresh Take with HTMX and Ktor
DESCRIPTION:Being a full-stack developer is valuable in today's tech landsc
 ape - you can own features end-to-end\, make holistic architectural decisi
 ons\, and adapt quickly to changing project needs. This versatility is esp
 ecially crucial in smaller teams and startups.\n\nHowever\, the role can b
 e intimidating. The list of technologies one is expected to master is exte
 nsive: Kubernetes\, Postgres\, Kotlin\, Gradle\, Ktor\, React\, Remix\, No
 de.js\, and NPM. Even the most experienced developers struggle to keep up 
 with it all.\n\nPerhaps we should step back and examine this problem from 
 a fresh perspective. Do we truly need all these technologies? After all\, 
 HTML and CSS remain relatively stable\, unlike frameworks that seem to cha
 nge every six months.\n\nMany applications don't require the complexity of 
 a modern Javascript Single Page Application (SPA). Everything eventually r
 enders to HTML anyway! Using technologies like HTML\, CSS\, HTMX\, AlpineJ
 S\, and Unpoly\, you can achieve 98% of SPA functionality with minimal fro
 ntend code and less complexity. These tools enhance and build upon HTML an
 d CSS rather than trying to replace them.\n\nIn this presentation\, I'll s
 how how HTMX and kotlinx.html combine beautifully with Ktor to create mode
 rn\, interactive web applications. You'll see how these technologies work 
 together seamlessly - Ktor's powerful backend capabilities\, kotlinx.html'
 s type-safe HTML generation\, and HTMX's elegant approach to frontend inte
 ractions. This stack offers a refreshingly simple way to build dynamic web 
 applications while keeping your codebase clean and maintainable.
LOCATION:Auditorium 15
DTSTART:20250523T120000Z
DTEND:20250523T124500Z
END:VEVENT
BEGIN:VEVENT
UID:33cea9a5-3c47-430c-b2e2-cc9e08154241
DTSTAMP:20250517T085705Z
SUMMARY:Swift Export - a peek under the hood
DESCRIPTION:One of the most anticipated features in Kotlin Multiplatform—Sw
 ift Export! It’s been a year since we announced its development. Join us a
 s we explore the challenges the team has faced\, why it’s taking so long\, 
 and\, most importantly\, how you can preview Swift Export in your own proj
 ects.
LOCATION:Auditorium 11+12
DTSTART:20250523T120000Z
DTEND:20250523T124500Z
END:VEVENT
BEGIN:VEVENT
UID:19184d83-d67c-472b-8de2-dafbfe3541c6
DTSTAMP:20250517T085705Z
SUMMARY:Building immersive VR apps for Meta Quest with Jetpack Compose
DESCRIPTION:Virtual Reality (VR) is rapidly becoming the future of interact
 ions and immersive experiences\, transforming how we engage with apps and 
 content. As VR technology continues to evolve and become mainstream\, devi
 ces like the Meta Quest offer powerful opportunities for creating highly i
 mmersive and interactive experiences. \n\nIn this talk\, we will explore h
 ow to leverage Jetpack Compose to build VR applications for the Meta Quest
 .\n\nWe will dive into the unique challenges of VR development\, such as s
 patial UI design\, handling new input methods for seamless experiences. A 
 key focus of this session will be on converting existing Android apps into 
 immersive VR apps\, demonstrating how to adapt traditional 2D UIs into spa
 tially aware interfaces suitable for VR environments. \n\nAs a bonus\, we 
 will take a brief tour of how to integrate 3D objects and scenes seamlessl
 y in the VR experiences. You will learn how to combine both UI elements an
 d 3D content further enhancing immersion and interaction.\n\nBy the end of 
 the session\, you will be equipped with practical knowledge you can use to 
 create or adapt your existing apps into VR for the Meta Quest with Jetpack 
 Compose along with practical tips and best practices for immersive experie
 nces.
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250523T120000Z
DTEND:20250523T121500Z
END:VEVENT
BEGIN:VEVENT
UID:3f59fb5e-d746-432b-9e0a-f4e31ad3a66b
DTSTAMP:20250517T085705Z
SUMMARY:Migrating Room to Room KMP
DESCRIPTION:This Codelab builds off the “Get Started With Kotlin Multiplatf
 orm for Shared Business Logic” Codelab\, and allows the developer to migra
 te a Room database to a Room KMP database within the KMP Shared Module\, a
 nd then leverage this Room KMP database from the Android and iOS app.
LOCATION:Room #173
DTSTART:20250523T120000Z
DTEND:20250523T124500Z
END:VEVENT
BEGIN:VEVENT
UID:fe21cf18-8398-4f81-bf57-81b162e096fd
DTSTAMP:20250517T085705Z
SUMMARY:Bringing Maps to Compose Multiplatform with MapLibre Compose
DESCRIPTION:Working with maps in a Kotlin Multiplatform app can be tricky—d
 ifferent platform APIs\, inconsistent features\, and duplicated code add u
 nwelcome complexity. MapLibre Compose simplifies this process by providing 
 a consistent\, declarative API built on top of MapLibre and Compose Multip
 latform.\n\nWe’ll use practical examples to explore the design and impleme
 ntation of MapLibre Compose\, how it leverages the Compose runtime to decl
 aratively express the powerful mapping capabilities of MapLibre\, and how 
 it uses Kotlin Multiplatform to help developers write map-based UI code on
 ce and run it seamlessly on Android\, iOS\, and beyond without code duplic
 ation.\n\nFor developers working with Compose Multiplatform\, this talk wi
 ll showcase how MapLibre Compose can help add mapping features to your app
 s. You'll gain a clear understanding of its capabilities\, its design prin
 ciples\, and how it can help you create richer user experiences across pla
 tforms.
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250523T123000Z
DTEND:20250523T124500Z
END:VEVENT
BEGIN:VEVENT
UID:b6237268-64fc-4c05-ab81-d392f9cb700e
DTSTAMP:20250517T085705Z
SUMMARY:Coffee Break
LOCATION:Keynote room
DTSTART:20250523T124500Z
DTEND:20250523T131500Z
END:VEVENT
BEGIN:VEVENT
UID:62c4d8bc-430d-4453-a15b-7c2b4d1bae6c
DTSTAMP:20250517T085705Z
SUMMARY:Kotlin and Compose Multiplatform patterns for iOS interop
DESCRIPTION:Kotlin Multiplatform (KMP) and\, more recently\, Compose Multip
 latform (CMP) have matured significantly in recent years and are gaining i
 ncreasingly widespread adoption. \n\nHowever iOS integration continues to 
 present its own set of challenges which also vary depending on the amount 
 of UI code that's being shared. In this talk I'll use real world examples 
 to outline a variety of different UI and non-UI patterns I've applied over 
 the last 5 years when using KMP and CMP on iOS.  \n
LOCATION:Keynote room
DTSTART:20250523T131500Z
DTEND:20250523T140000Z
END:VEVENT
BEGIN:VEVENT
UID:fcbaed30-8d23-4093-b335-8f7a25508dcf
DTSTAMP:20250517T085705Z
SUMMARY:Fast inner dev loops for Kotlin Gradle builds
DESCRIPTION:Whether it's a Kotlin library or an Android app\, developers wa
 nt their inner loop to be fast: code\, compile\, test\, repeat. With Gradl
 e\, there are no extra steps—you run the test\, and it takes care of the r
 est\, whether you’re tweaking a single line of code or upgrading all your 
 dependencies.\n\nIn this talk\, learn how to tame the inner dev loop. We'l
 l explore the recent evolution of Gradle's performance features\, such as 
 Configuration Cache and Isolated Projects\, and how to organize your Kotli
 n build to make the most of it.
LOCATION:Hall D2
DTSTART:20250523T131500Z
DTEND:20250523T140000Z
END:VEVENT
BEGIN:VEVENT
UID:3aa6ccf4-a693-4c3c-83ff-4d3247cb22b0
DTSTAMP:20250517T085705Z
SUMMARY:Lessons learned decoupling Architecture Components from platform sp
 ecific code
DESCRIPTION:Follow along as the Android team walks you through the process 
 of taking some of their architectural building blocks\, such as SavedState 
 and System Back\, through the process of decoupling them from platform spe
 cific implementations and how they approached the task of writing good com
 mon APIs in preparation for future integrations with other platforms while 
 maintaining the quality achieved in android.
LOCATION:Auditorium 15
DTSTART:20250523T131500Z
DTEND:20250523T140000Z
END:VEVENT
BEGIN:VEVENT
UID:0102ed50-72ec-44a6-80a7-6300bdcb3639
DTSTAMP:20250517T085705Z
SUMMARY:Kotlin Clean Architecture for Serverless: Business Logic You Can Ta
 ke Anywhere
DESCRIPTION:As cloud platforms continue to evolve\, serverless functions pr
 ovide powerful ways to build and scale applications with reduced infrastru
 cture concerns. However\, cloud-specific requirements often make it challe
 nging to keep business logic portable across different cloud providers. Th
 is session presents a variant of clean architecture designed to separate c
 ore business logic from cloud-specific code\, leveraging Kotlin’s capabili
 ties along with Spring Cloud Function and headless Gradle modules.\n\nIn t
 his talk\, I’ll demonstrate how to structure a Kotlin application for serv
 erless using a simplified clean architecture approach. This structure main
 tains cloud-agnostic business logic while allowing platform-specific imple
 mentations for integration functionality like storage. By isolating busine
 ss logic in headless modules\, developers can deploy the same core code ac
 ross multiple cloud function providers such as AWS Lambda and Azure Functi
 ons.\n\nThrough live coding\, we’ll explore practical techniques for build
 ing and deploying serverless applications with cloud-agnostic business log
 ic. \nThis session is aimed at advanced Kotlin developers interested in se
 rverless architecture\, cloud flexibility\, and clean architecture princip
 les. 
LOCATION:Auditorium 11+12
DTSTART:20250523T131500Z
DTEND:20250523T140000Z
END:VEVENT
BEGIN:VEVENT
UID:c2fa6b36-a674-4682-8255-0e498550600e
DTSTAMP:20250517T085705Z
SUMMARY:Swift concurrency for curious Kotliners
DESCRIPTION:Swift is an open-source programming language by Apple\, primari
 ly used for building apps within the Apple ecosystem.\n\nA new major versi
 on of Swift - Swift 6 was released at the end of the previous year. The st
 andout feature of the release is strict concurrency mode\, which aims to p
 revent data races.\n\nIn this talk\, we will take a quick look at Swift ac
 tors and `async`/`await` features\, which share a lot of similarities with 
 Kotlin Coroutines. We will explore what does Swift 6 do to prevent data ra
 ces\, and\, perhaps\, discuss if we can expect a similar feature in future 
 versions of Kotlin.\n\nThe talk assumes that the attendees are familiar wi
 th Kotlin Coroutines.
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250523T131500Z
DTEND:20250523T133000Z
END:VEVENT
BEGIN:VEVENT
UID:fbe53619-0e10-48c2-9549-07ef373804e1
DTSTAMP:20250517T085705Z
SUMMARY:Klibs.io — the dream of creating a Kotlin Package Index
DESCRIPTION:So you want to build a Kotlin package index.. What is a package 
 anyway\, is it the same as an artifact? What makes a project a library the
 n? And why is it an index and not a repository?\n\nThis talk is a story an
 d a retrospective of developing [https://klibs.io](https://klibs.io)\n\nI 
 will share the insights I learned after processing 250\,000 KMP artifacts 
 and 1\,500 Kotlin projects. We'll discuss our library sharing ecosystem an
 d its limitations\, and I will give tips to library authors on how to stan
 d out and make their libraries more discoverable
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250523T134500Z
DTEND:20250523T140000Z
END:VEVENT
BEGIN:VEVENT
UID:5f8d76e2-9765-4e82-aa6f-bb1debf00b69
DTSTAMP:20250517T085705Z
SUMMARY:Break
LOCATION:Hall D2
DTSTART:20250523T140000Z
DTEND:20250523T141500Z
END:VEVENT
BEGIN:VEVENT
UID:8bec6662-03f0-4d62-b42e-29f1e89a9954
DTSTAMP:20250517T085705Z
SUMMARY:47 Refactorings in 45 minutes
DESCRIPTION:IntelliJ IDEA's refactoring support is second to none\, but the 
 Refactor This menu only has 9 items. Where is all the power hiding?\n\nJoi
 n Dmitry and Duncan on a whistle-stop live-coding tour of our favourite ID
 E's invisible refactorings. Marvel as Alt-Enter reveals refactorings befor
 e your very eyes. Gasp as they change depending on context. Wonder how com
 pletely different they can be simply by moving the cursor one character to 
 the left or right\, and feel the tension mount as they approach the deadli
 ne. Can they really show more than one refactoring a minute?
LOCATION:Keynote room
DTSTART:20250523T141500Z
DTEND:20250523T150000Z
END:VEVENT
BEGIN:VEVENT
UID:325e7bbf-4eb9-4df5-bf27-8e8787851f83
DTSTAMP:20250517T085705Z
SUMMARY:From Data to Insights: Building a Bluesky Bot powered by AI
DESCRIPTION:\nA common challenge developers face when working with data str
 eams is collecting and analyzing this data as fast as possible to uncover 
 meaningful insights or take fast actions.\n\nIn this talk\, I’ll show you 
 how I tackled this by building a Bluesky bot that turns raw data collected 
 from the Bluesky’s stream of posts into actionable insights.\n\nIn this ta
 lk you will learn how to: \n- Collect data into streams\n- Use probabilist
 ic data structures such as Bloom Filters\, TopK and Count-Min Sketch\n- Us
 e Retrieval-Augmented Generation for adding your own knowledge base into y
 our LLM queries\n- Use semantic caching for reducing LLM calls\n- Use vect
 or siilarity search to classify the data\n- Efficiently querythe data\n\nW
 hether you’re curious about GenAI\, interested in data-driven analytics\, 
 or simply love experimenting with creative tech solutions\, this session w
 ill inspire you with practical techniques and real-world applications.
LOCATION:Hall D2
DTSTART:20250523T141500Z
DTEND:20250523T150000Z
END:VEVENT
BEGIN:VEVENT
UID:a75bf67f-ffe5-451d-b7a4-383a259008bb
DTSTAMP:20250517T085705Z
SUMMARY:Stream Processing Rocks! Stream processing in Kotlin from KStreams 
 to RocksDB
DESCRIPTION:Ever wondered how to efficiently process high-velocity data str
 eams using Kafka and Kotlin? Join two engineers from SolarWinds—experts wh
 o oversee billions of observability records daily—as they share their insi
 ghts.\n\nWe'll kick off by covering what stream processing is and when you 
 should use it. Dive into practical Kotlin solutions through a simple case 
 study on stripping PII from incoming user records using Kafka Streams. We’
 ll build upon this example by utilizing Kafka's compacting topics feature 
 to distribute the user data and store it locally for rapid API responses. 
 Finally\, we’ll 'scale up' by moving that data out of memory and into Rock
 sDB\, demonstrating how to handle larger datasets effectively. By the end 
 of this talk\, you'll be equipped to build your first KStream or scale up 
 the ones you’re already building.
LOCATION:Auditorium 15
DTSTART:20250523T141500Z
DTEND:20250523T150000Z
END:VEVENT
BEGIN:VEVENT
UID:47e494fc-9830-4f5f-80a6-ca58cf0f5aaf
DTSTAMP:20250517T085705Z
SUMMARY:Scale your Kotlin Multiplatform projects using dependency injection
DESCRIPTION:Kotlin-inject-anvil is a dependency injection framework for Kot
 lin Multiplatform. It verifies the dependency graph at compile time and ge
 nerates the necessary code to instantiate the object graph at runtime. The 
 framework aims to provide a safe dependency injection solution without the 
 boilerplate and configurations common in many other libraries.\n\nThis tal
 k will introduce kotlin-inject-anvil\, discussing its benefits and how it 
 scales in large\, modularized codebases. We'll explore how to leverage the 
 strengths of each host platform while maximizing common Kotlin Multiplatfo
 rm code. Since each codebase is unique\, I'll demonstrate how we adapt the 
 framework for our own internal use cases at Amazon.
LOCATION:Auditorium 11+12
DTSTART:20250523T141500Z
DTEND:20250523T150000Z
END:VEVENT
BEGIN:VEVENT
UID:94fee845-1ea4-406d-a021-a7071f93ce77
DTSTAMP:20250517T085705Z
SUMMARY:Break
LOCATION:Hall D2
DTSTART:20250523T150000Z
DTEND:20250523T151500Z
END:VEVENT
BEGIN:VEVENT
UID:69410e75-10ea-4231-9302-b8cadfb61f87
DTSTAMP:20250517T085705Z
SUMMARY:Closing Panel
LOCATION:Keynote room
DTSTART:20250523T151500Z
DTEND:20250523T160000Z
END:VEVENT
BEGIN:VEVENT
UID:a4f69340-b3c9-4146-8204-3a42fbb2aa86
DTSTAMP:20250517T085705Z
SUMMARY:Registration
LOCATION:Room #173
DTSTART:20250521T060000Z
DTEND:20250521T070000Z
END:VEVENT
BEGIN:VEVENT
UID:cc05f71c-01d9-44a3-a22b-ea65f68db4f1
DTSTAMP:20250517T085705Z
SUMMARY:Spring Boot With Coroutines and Virtual Threads. Part 1.
DESCRIPTION:If you want to get the most out of Spring Boot in terms of low 
 latency\, high-throughput\, and resource efficiency\, there is no way arou
 nd virtual threads and/or reactive libraries like Webflux.\n\nHowever\, bo
 th won’t get you far: Virtual threads are limited to non-blocking operatio
 ns\, and WebFlux — even though offering all reactive qualities\, like non-
 blocking\, parallelism\, streaming\, etc. — will give you a lot of headach
 es due to its complexity\, bad readability\, and maintainability.\n\nIn th
 is workshop\, you’ll learn how Spring Boot’s coroutine support will wipe o
 ut all the downsides of the ‘raw’ WebFlux approach or the limitations of v
 irtual threads and provide you with the best of both worlds: non-blocking 
 reactive characteristics without the complexity.\n\nDuring the workshop\, 
 we will explore Kotlin’s reactive building blocks\, such as coroutines and 
 flows\, and apply them in Spring Boot. By building a non-blocking API in S
 pring Boot from scratch\, you’ll learn how to:\n\n- Use coroutines on top 
 of WebFlux and/or virtual threads.\n- Perform non-blocking remote API call
 s using WebClient or RestClient.\n- Access a database in a reactive way\, 
 either via the R2DBC or JDBC\, including framework support.\n- Apply struc
 tured concurrency in your business logic\, like requesting data in paralle
 l.\n- Create an advanced streaming API based on ServerSentEvents that comb
 ines coroutines and flow.\n\nIn addition\, we will explore virtual threads 
 in-depth and see how they can leverage the power of coroutines even more.\
 n\nAt the end of the workshop\, you’ll know all the ins and outs of progra
 mming in Spring Boot with coroutines while having experienced the tremendo
 us benefits they offer over raw virtual threads or WebFlux.\n\nWith the kn
 owledge you gain\, you can enlighten your Spring Boot project with corouti
 nes the very next day.
LOCATION:Room #173
DTSTART:20250521T070000Z
DTEND:20250521T083000Z
END:VEVENT
BEGIN:VEVENT
UID:c3bc52ef-2258-49b3-b014-b26b89c1eb6f
DTSTAMP:20250517T085705Z
SUMMARY:Extracting\, Transforming\, and Analyzing Data With Kotlin. Part 1.
DESCRIPTION:This workshop is designed for all Kotlin developers who need si
 mple and convenient tools within their native ecosystem to assist them whe
 n working with data\, understanding its nature\, performing any necessary 
 processing\, and presenting the results to their team or stakeholders as a 
 report or chart.\n\nIn this workshop\, you’ll learn how to build data proc
 essing pipelines in your applications. We’ll explore the best practices fo
 r extracting data from various sources\, aggregating and transforming it\, 
 and then exporting it as a collection of data classes\, displaying it as t
 ables\, or visualizing it with insightful charts.\n\nBy the end of the wor
 kshop\, you’ll be able to:\n\n- Load\, transform\, and export data using t
 he Kotlin DataFrame library.\n- Visualize data with the Kandy library to e
 ffectively convey insights.\n- Access and manipulate data from various sou
 rces: REST APIs\, SQL databases\, CSV files\, and other tabular data.\n- H
 andle both flat and hierarchical JSON-like data structures.\n- Boost your 
 code written with the help of the kotlin.collections or SQL-like framework
 s.\n- Solve practical problems by applying your skills to three real-world 
 scenarios.\n- Present the insights in Kotlin notebooks and easily share th
 em on GitHub Gists.
LOCATION:Room #174
DTSTART:20250521T070000Z
DTEND:20250521T083000Z
END:VEVENT
BEGIN:VEVENT
UID:296be62e-5a18-4c0b-ab00-1ab233c8d065
DTSTAMP:20250517T085705Z
SUMMARY:Hands-On Kotlin Web Development With Ktor. Part 1.
DESCRIPTION:Ktor is a lightweight and flexible toolkit for building HTTP ap
 plications. This workshop will use the Kotlin programming language\, the K
 tor framework\, the Exposed database access library\, OpenAI\, and several 
 other Kotlin and Java libraries to build a feature-complete AI powered web 
 application.\n\nWe’ll start with the basics by exploring the Ktor framewor
 k and learning how to build a simple web application using essential funct
 ions. We’ll cover topics like handling HTTP requests\, working with WebSoc
 kets\, database access\, authentication\, logging\, and deployment.\n\nFor 
 testing\, we will look into the APIs that Ktor provides. Finally\, we will 
 explore the API for writing plugins and use it to create a simple plugin f
 or our Ktor application.\n\nBy the end of the workshop\, you’ll be able to
 :\n  - Structure Ktor projects\n  - Test Ktor applications\n  - Create and 
 deploy RESTful services using Ktor\n  - Integrate Ktor with external libra
 ries\n\nThis will be a fast-paced workshop where attendees will spend most 
 of their time coding. You will walk away armed with a cookbook of various 
 Ktor recipes for building feature-complete AI powered web application.
LOCATION:Room #176
DTSTART:20250521T070000Z
DTEND:20250521T083000Z
END:VEVENT
BEGIN:VEVENT
UID:f24c5add-9728-4cda-ade2-7a2c4f0d2ab8
DTSTAMP:20250517T085705Z
SUMMARY:Building Shared UI With Compose Multiplatform. Part 1.
DESCRIPTION:Take the next step in your cross-platform Kotlin journey with C
 ompose Multiplatform! This workshop is for developers already familiar wit
 h the basics of Kotlin Multiplatform and Jetpack Compose who are looking t
 o extend their skills by building a shared UI.\n\nWe’ll discuss how Compos
 e Multiplatform works and show you how your existing Compose skills are re
 usable across platforms. You’ll have hands-on time with a wide range of Co
 mpose features\, focusing on how they work across different platforms. Dur
 ing the workshop’s exercises\, you’ll work with Compose code\, explore API
 s\, build new features\, improve accessibility\, test the UI\, and more.\n
 \nCovering the latest available APIs and best practices\, we’ll equip you 
 with everything you need to start using Compose Multiplatform in your own 
 apps! Here is how the workshop will be structured:\n\nIntroduction\n- How 
 Compose Multiplatform works\n- Running Compose on Android\, iOS\, Desktop\
 , and Web\n- Writing basic Compose code for multiplatform use\n\nCompose b
 uilding blocks\n- Resources (localization\, fonts\, and more)\n- Image loa
 ding\n- ViewModels and architecture components\n- Navigation\n- Animations
 \n- Dependency injection\n- Theming\n\nMastering Compose Multiplatform\n- 
 Interop with native components\n- Dialogs\n- Insets\n- Accessibility\n- Te
 sting\n\nThis workshop includes exercises for participants to complete on 
 their own laptops. Using a MacBook is highly recommended for participation 
 in all exercises\, as iOS applications can only be built on macOS. Detaile
 d setup instructions will be provided prior to the workshop.
LOCATION:Room #178
DTSTART:20250521T070000Z
DTEND:20250521T083000Z
END:VEVENT
BEGIN:VEVENT
UID:f866fb4e-b38f-4ee6-9bca-3ea88a6c39c3
DTSTAMP:20250517T085705Z
SUMMARY:Deep Dive Into Kotlin Multiplatform: Advanced Techniques for Seamle
 ss Code Sharing. Part 1.
DESCRIPTION:This is an intermediate/advanced workshop for experienced Kotli
 n Multiplatform developers. It is aimed at developers who have built proje
 cts with Kotlin Multiplatform and Jetpack Compose / Compose Multiplatform 
 and now want to progress onto more advanced topics.\n\nThe workshop aims t
 o equip attendees with the skills to write high-quality code and apps usin
 g Kotlin Multiplatform. The workshop will address the following topics:\n\
 nA Gentle(r) Introduction\n- Introducing an example project\n- Explaining 
 project structure and architecture\n- Highlighting a few key libraries use
 d in the project\n\nNative Integrations\n- Splash screens\n- Notifications
 \n- Working with files\n\nAdvanced Kotlin Multiplatform for iOS Targets\n- 
 Debugging Kotlin/Swift\n- Understanding and improving Kotlin/Swift interop
 erability\n\nCode Quality\n- Code coverage with Kover (JVM-only)\n- Modula
 rization\n\nApp Quality\n- Fixing memory leaks\n- Performance testing\n- A
 pp size optimization\n\nManaging Workflows\n- Basics of building CI/CD pip
 elines for your apps\n\nYou will need to bring a MacBook along with you to 
 participate in all the practical exercises. Installation instructions will 
 be provided one week prior to the workshop.
LOCATION:Room #179
DTSTART:20250521T070000Z
DTEND:20250521T083000Z
END:VEVENT
BEGIN:VEVENT
UID:3cacb49c-4546-4120-b677-35ae98f48d30
DTSTAMP:20250517T085705Z
SUMMARY:Refactoring to Functional Kotlin. Part 1.
DESCRIPTION:Kotlin supports both Object-oriented and functional styles of p
 rogramming\, but what should we do when we have OO code that should be fun
 ctional? Refactor\, of course!\n\nIn this workshop\, Nat and Duncan\, the 
 authors of Java to Kotlin: A Refactoring Guidebook\, take a web applicatio
 n and introduce techniques to gradually and safely migrate the code to the 
 functional style better suited to today’s architectures. Topics include:\n
 \n- Thinking in a functional way – Data\, Calculations\, and Actions\n- Mi
 grating from mutable objects to immutable data classes\n- Converting busin
 ess logic to a functional domain model\n- Where does the state live? Funct
 ional core / imperative shell\n- Choosing between functions and methods\n- 
 Functional error handling\n- Expand and Contract refactoring for safety ov
 er many commits
LOCATION:Room #180
DTSTART:20250521T070000Z
DTEND:20250521T083000Z
END:VEVENT
BEGIN:VEVENT
UID:59b530a1-d6ab-4485-90b8-5b8fca1b4931
DTSTAMP:20250517T085705Z
SUMMARY:Asynchronous Programming With Kotlin Coroutines. Part 1.
DESCRIPTION:In this workshop\, you’ll learn everything you need to know abo
 ut how to be productive with coroutines in Kotlin. We’ll start with the ba
 sics of asynchronous programming\, its differences from blocking code\, an
 d the concepts of suspending functions and coroutines. We’ll explore corou
 tine contexts\, concurrent decomposition of work via deferreds\, and struc
 tured concurrency with coroutine scopes.\n\nThe second part of the worksho
 p will be devoted to Kotlin Flows. We’ll study how Kotlin Flows are design
 ed on a basic level\, learn the difference between hot and cold flows\, di
 scuss their typical usage patterns\, and explore how they incorporate idea
 s from reactive streams. To deepen our understanding\, we’ll also take a p
 eek at some of the implementations behind flows and collectors. Throughout
 \, we’ll see how they help you in writing safe and reliable concurrent sys
 tems\, and how modern applications can use them to work with asynchronous 
 streams of data\, manage system states\, and broadcast events.\n\nThrough 
 this workshop\, you’ll enhance your coroutines-related vocabulary\, unders
 tand how to spot and avoid common problems\, and be able to effectively an
 d confidently use coroutines and flows in your own projects.
LOCATION:Room #181
DTSTART:20250521T070000Z
DTEND:20250521T083000Z
END:VEVENT
BEGIN:VEVENT
UID:9a4b4659-405c-440b-a1b5-4ad7fc5eb02c
DTSTAMP:20250517T085705Z
SUMMARY:Coffee Break
LOCATION:Room #173
DTSTART:20250521T083000Z
DTEND:20250521T090000Z
END:VEVENT
BEGIN:VEVENT
UID:49f06a07-8f79-45ae-a5aa-c5a67a0cccde
DTSTAMP:20250517T085705Z
SUMMARY:Spring Boot With Coroutines and Virtual Threads. Part 2.
DESCRIPTION:If you want to get the most out of Spring Boot in terms of low 
 latency\, high-throughput\, and resource efficiency\, there is no way arou
 nd virtual threads and/or reactive libraries like Webflux.\n\nHowever\, bo
 th won’t get you far: Virtual threads are limited to non-blocking operatio
 ns\, and WebFlux — even though offering all reactive qualities\, like non-
 blocking\, parallelism\, streaming\, etc. — will give you a lot of headach
 es due to its complexity\, bad readability\, and maintainability.\n\nIn th
 is workshop\, you’ll learn how Spring Boot’s coroutine support will wipe o
 ut all the downsides of the ‘raw’ WebFlux approach or the limitations of v
 irtual threads and provide you with the best of both worlds: non-blocking 
 reactive characteristics without the complexity.\n\nDuring the workshop\, 
 we will explore Kotlin’s reactive building blocks\, such as coroutines and 
 flows\, and apply them in Spring Boot. By building a non-blocking API in S
 pring Boot from scratch\, you’ll learn how to:\n\n- Use coroutines on top 
 of WebFlux and/or virtual threads.\n- Perform non-blocking remote API call
 s using WebClient or RestClient.\n- Access a database in a reactive way\, 
 either via the R2DBC or JDBC\, including framework support.\n- Apply struc
 tured concurrency in your business logic\, like requesting data in paralle
 l.\n- Create an advanced streaming API based on ServerSentEvents that comb
 ines coroutines and flow.\n\nIn addition\, we will explore virtual threads 
 in-depth and see how they can leverage the power of coroutines even more.\
 n\nAt the end of the workshop\, you’ll know all the ins and outs of progra
 mming in Spring Boot with coroutines while having experienced the tremendo
 us benefits they offer over raw virtual threads or WebFlux.\n\nWith the kn
 owledge you gain\, you can enlighten your Spring Boot project with corouti
 nes the very next day.
LOCATION:Room #173
DTSTART:20250521T090000Z
DTEND:20250521T103000Z
END:VEVENT
BEGIN:VEVENT
UID:c1eee4ac-ab15-4bc6-98b6-88b23a5f85a5
DTSTAMP:20250517T085705Z
SUMMARY:Extracting\, Transforming\, and Analyzing Data With Kotlin. Part 2.
DESCRIPTION:This workshop is designed for all Kotlin developers who need si
 mple and convenient tools within their native ecosystem to assist them whe
 n working with data\, understanding its nature\, performing any necessary 
 processing\, and presenting the results to their team or stakeholders as a 
 report or chart.\n\nIn this workshop\, you’ll learn how to build data proc
 essing pipelines in your applications. We’ll explore the best practices fo
 r extracting data from various sources\, aggregating and transforming it\, 
 and then exporting it as a collection of data classes\, displaying it as t
 ables\, or visualizing it with insightful charts.\n\nBy the end of the wor
 kshop\, you’ll be able to:\n\n- Load\, transform\, and export data using t
 he Kotlin DataFrame library.\n- Visualize data with the Kandy library to e
 ffectively convey insights.\n- Access and manipulate data from various sou
 rces: REST APIs\, SQL databases\, CSV files\, and other tabular data.\n- H
 andle both flat and hierarchical JSON-like data structures.\n- Boost your 
 code written with the help of the kotlin.collections or SQL-like framework
 s.\n- Solve practical problems by applying your skills to three real-world 
 scenarios.\n- Present the insights in Kotlin notebooks and easily share th
 em on GitHub Gists.
LOCATION:Room #174
DTSTART:20250521T090000Z
DTEND:20250521T103000Z
END:VEVENT
BEGIN:VEVENT
UID:1abcfd02-fcd1-4730-a782-92c70ce21343
DTSTAMP:20250517T085705Z
SUMMARY:Hands-On Kotlin Web Development With Ktor. Part 2.
DESCRIPTION:Ktor is a lightweight and flexible toolkit for building HTTP ap
 plications. This workshop will use the Kotlin programming language\, the K
 tor framework\, the Exposed database access library\, OpenAI\, and several 
 other Kotlin and Java libraries to build a feature-complete AI powered web 
 application.\n\nWe’ll start with the basics by exploring the Ktor framewor
 k and learning how to build a simple web application using essential funct
 ions. We’ll cover topics like handling HTTP requests\, working with WebSoc
 kets\, database access\, authentication\, logging\, and deployment.\n\nFor 
 testing\, we will look into the APIs that Ktor provides. Finally\, we will 
 explore the API for writing plugins and use it to create a simple plugin f
 or our Ktor application.\n\nBy the end of the workshop\, you’ll be able to
 :\n  - Structure Ktor projects\n  - Test Ktor applications\n  - Create and 
 deploy RESTful services using Ktor\n  - Integrate Ktor with external libra
 ries\n\nThis will be a fast-paced workshop where attendees will spend most 
 of their time coding. You will walk away armed with a cookbook of various 
 Ktor recipes for building feature-complete AI powered web application.
LOCATION:Room #176
DTSTART:20250521T090000Z
DTEND:20250521T103000Z
END:VEVENT
BEGIN:VEVENT
UID:7945871a-a54a-40cf-b6e5-032af4db7d39
DTSTAMP:20250517T085705Z
SUMMARY:Building Shared UI With Compose Multiplatform. Part 2.
DESCRIPTION:Take the next step in your cross-platform Kotlin journey with C
 ompose Multiplatform! This workshop is for developers already familiar wit
 h the basics of Kotlin Multiplatform and Jetpack Compose who are looking t
 o extend their skills by building a shared UI.\n\nWe’ll discuss how Compos
 e Multiplatform works and show you how your existing Compose skills are re
 usable across platforms. You’ll have hands-on time with a wide range of Co
 mpose features\, focusing on how they work across different platforms. Dur
 ing the workshop’s exercises\, you’ll work with Compose code\, explore API
 s\, build new features\, improve accessibility\, test the UI\, and more.\n
 \nCovering the latest available APIs and best practices\, we’ll equip you 
 with everything you need to start using Compose Multiplatform in your own 
 apps! Here is how the workshop will be structured:\n\nIntroduction\n- How 
 Compose Multiplatform works\n- Running Compose on Android\, iOS\, Desktop\
 , and Web\n- Writing basic Compose code for multiplatform use\n\nCompose b
 uilding blocks\n- Resources (localization\, fonts\, and more)\n- Image loa
 ding\n- ViewModels and architecture components\n- Navigation\n- Animations
 \n- Dependency injection\n- Theming\n\nMastering Compose Multiplatform\n- 
 Interop with native components\n- Dialogs\n- Insets\n- Accessibility\n- Te
 sting\n\nThis workshop includes exercises for participants to complete on 
 their own laptops. Using a MacBook is highly recommended for participation 
 in all exercises\, as iOS applications can only be built on macOS. Detaile
 d setup instructions will be provided prior to the workshop.
LOCATION:Room #178
DTSTART:20250521T090000Z
DTEND:20250521T103000Z
END:VEVENT
BEGIN:VEVENT
UID:144dd191-f44d-4359-8b20-b198a3fde434
DTSTAMP:20250517T085705Z
SUMMARY:Deep Dive Into Kotlin Multiplatform: Advanced Techniques for Seamle
 ss Code Sharing. Part 2.
DESCRIPTION:This is an intermediate/advanced workshop for experienced Kotli
 n Multiplatform developers. It is aimed at developers who have built proje
 cts with Kotlin Multiplatform and Jetpack Compose / Compose Multiplatform 
 and now want to progress onto more advanced topics.\n\nThe workshop aims t
 o equip attendees with the skills to write high-quality code and apps usin
 g Kotlin Multiplatform. The workshop will address the following topics:\n\
 nA Gentle(r) Introduction\n- Introducing an example project\n- Explaining 
 project structure and architecture\n- Highlighting a few key libraries use
 d in the project\n\nNative Integrations\n- Splash screens\n- Notifications
 \n- Working with files\n\nAdvanced Kotlin Multiplatform for iOS Targets\n- 
 Debugging Kotlin/Swift\n- Understanding and improving Kotlin/Swift interop
 erability\n\nCode Quality\n- Code coverage with Kover (JVM-only)\n- Modula
 rization\n\nApp Quality\n- Fixing memory leaks\n- Performance testing\n- A
 pp size optimization\n\nManaging Workflows\n- Basics of building CI/CD pip
 elines for your apps\n\nYou will need to bring a MacBook along with you to 
 participate in all the practical exercises. Installation instructions will 
 be provided one week prior to the workshop.
LOCATION:Room #179
DTSTART:20250521T090000Z
DTEND:20250521T103000Z
END:VEVENT
BEGIN:VEVENT
UID:b9d764f7-b948-4708-a774-1e8d38fc90e7
DTSTAMP:20250517T085705Z
SUMMARY:Refactoring to Functional Kotlin. Part 2.
DESCRIPTION:Kotlin supports both Object-oriented and functional styles of p
 rogramming\, but what should we do when we have OO code that should be fun
 ctional? Refactor\, of course!\n\nIn this workshop\, Nat and Duncan\, the 
 authors of Java to Kotlin: A Refactoring Guidebook\, take a web applicatio
 n and introduce techniques to gradually and safely migrate the code to the 
 functional style better suited to today’s architectures. Topics include:\n
 \n- Thinking in a functional way – Data\, Calculations\, and Actions\n- Mi
 grating from mutable objects to immutable data classes\n- Converting busin
 ess logic to a functional domain model\n- Where does the state live? Funct
 ional core / imperative shell\n- Choosing between functions and methods\n- 
 Functional error handling\n- Expand and Contract refactoring for safety ov
 er many commits
LOCATION:Room #180
DTSTART:20250521T090000Z
DTEND:20250521T103000Z
END:VEVENT
BEGIN:VEVENT
UID:ade3cb49-0959-4fdc-8bd5-273c48b78285
DTSTAMP:20250517T085705Z
SUMMARY:Asynchronous Programming With Kotlin Coroutines. Part 2.
DESCRIPTION:In this workshop\, you’ll learn everything you need to know abo
 ut how to be productive with coroutines in Kotlin. We’ll start with the ba
 sics of asynchronous programming\, its differences from blocking code\, an
 d the concepts of suspending functions and coroutines. We’ll explore corou
 tine contexts\, concurrent decomposition of work via deferreds\, and struc
 tured concurrency with coroutine scopes.\n\nThe second part of the worksho
 p will be devoted to Kotlin Flows. We’ll study how Kotlin Flows are design
 ed on a basic level\, learn the difference between hot and cold flows\, di
 scuss their typical usage patterns\, and explore how they incorporate idea
 s from reactive streams. To deepen our understanding\, we’ll also take a p
 eek at some of the implementations behind flows and collectors. Throughout
 \, we’ll see how they help you in writing safe and reliable concurrent sys
 tems\, and how modern applications can use them to work with asynchronous 
 streams of data\, manage system states\, and broadcast events.\n\nThrough 
 this workshop\, you’ll enhance your coroutines-related vocabulary\, unders
 tand how to spot and avoid common problems\, and be able to effectively an
 d confidently use coroutines and flows in your own projects.
LOCATION:Room #181
DTSTART:20250521T090000Z
DTEND:20250521T103000Z
END:VEVENT
BEGIN:VEVENT
UID:5faeb80f-81fc-4962-bf36-e0cef3c6a0e2
DTSTAMP:20250517T085705Z
SUMMARY:Lunch
LOCATION:Room #173
DTSTART:20250521T103000Z
DTEND:20250521T113000Z
END:VEVENT
BEGIN:VEVENT
UID:285ba31d-867d-4657-9224-5e3c7c3d34a7
DTSTAMP:20250517T085705Z
SUMMARY:Spring Boot With Coroutines and Virtual Threads. Part 3.
DESCRIPTION:If you want to get the most out of Spring Boot in terms of low 
 latency\, high-throughput\, and resource efficiency\, there is no way arou
 nd virtual threads and/or reactive libraries like Webflux.\n\nHowever\, bo
 th won’t get you far: Virtual threads are limited to non-blocking operatio
 ns\, and WebFlux — even though offering all reactive qualities\, like non-
 blocking\, parallelism\, streaming\, etc. — will give you a lot of headach
 es due to its complexity\, bad readability\, and maintainability.\n\nIn th
 is workshop\, you’ll learn how Spring Boot’s coroutine support will wipe o
 ut all the downsides of the ‘raw’ WebFlux approach or the limitations of v
 irtual threads and provide you with the best of both worlds: non-blocking 
 reactive characteristics without the complexity.\n\nDuring the workshop\, 
 we will explore Kotlin’s reactive building blocks\, such as coroutines and 
 flows\, and apply them in Spring Boot. By building a non-blocking API in S
 pring Boot from scratch\, you’ll learn how to:\n\n- Use coroutines on top 
 of WebFlux and/or virtual threads.\n- Perform non-blocking remote API call
 s using WebClient or RestClient.\n- Access a database in a reactive way\, 
 either via the R2DBC or JDBC\, including framework support.\n- Apply struc
 tured concurrency in your business logic\, like requesting data in paralle
 l.\n- Create an advanced streaming API based on ServerSentEvents that comb
 ines coroutines and flow.\n\nIn addition\, we will explore virtual threads 
 in-depth and see how they can leverage the power of coroutines even more.\
 n\nAt the end of the workshop\, you’ll know all the ins and outs of progra
 mming in Spring Boot with coroutines while having experienced the tremendo
 us benefits they offer over raw virtual threads or WebFlux.\n\nWith the kn
 owledge you gain\, you can enlighten your Spring Boot project with corouti
 nes the very next day.
LOCATION:Room #173
DTSTART:20250521T113000Z
DTEND:20250521T130000Z
END:VEVENT
BEGIN:VEVENT
UID:2c25e818-a9c0-4ebd-aae7-4ee56f3f48c4
DTSTAMP:20250517T085705Z
SUMMARY:Extracting\, Transforming\, and Analyzing Data With Kotlin. Part 3.
DESCRIPTION:This workshop is designed for all Kotlin developers who need si
 mple and convenient tools within their native ecosystem to assist them whe
 n working with data\, understanding its nature\, performing any necessary 
 processing\, and presenting the results to their team or stakeholders as a 
 report or chart.\n\nIn this workshop\, you’ll learn how to build data proc
 essing pipelines in your applications. We’ll explore the best practices fo
 r extracting data from various sources\, aggregating and transforming it\, 
 and then exporting it as a collection of data classes\, displaying it as t
 ables\, or visualizing it with insightful charts.\n\nBy the end of the wor
 kshop\, you’ll be able to:\n\n- Load\, transform\, and export data using t
 he Kotlin DataFrame library.\n- Visualize data with the Kandy library to e
 ffectively convey insights.\n- Access and manipulate data from various sou
 rces: REST APIs\, SQL databases\, CSV files\, and other tabular data.\n- H
 andle both flat and hierarchical JSON-like data structures.\n- Boost your 
 code written with the help of the kotlin.collections or SQL-like framework
 s.\n- Solve practical problems by applying your skills to three real-world 
 scenarios.\n- Present the insights in Kotlin notebooks and easily share th
 em on GitHub Gists.
LOCATION:Room #174
DTSTART:20250521T113000Z
DTEND:20250521T130000Z
END:VEVENT
BEGIN:VEVENT
UID:7d98e3ed-6257-4add-b0fb-181c4e6aac55
DTSTAMP:20250517T085705Z
SUMMARY:Hands-On Kotlin Web Development With Ktor. Part 3.
DESCRIPTION:Ktor is a lightweight and flexible toolkit for building HTTP ap
 plications. This workshop will use the Kotlin programming language\, the K
 tor framework\, the Exposed database access library\, OpenAI\, and several 
 other Kotlin and Java libraries to build a feature-complete AI powered web 
 application.\n\nWe’ll start with the basics by exploring the Ktor framewor
 k and learning how to build a simple web application using essential funct
 ions. We’ll cover topics like handling HTTP requests\, working with WebSoc
 kets\, database access\, authentication\, logging\, and deployment.\n\nFor 
 testing\, we will look into the APIs that Ktor provides. Finally\, we will 
 explore the API for writing plugins and use it to create a simple plugin f
 or our Ktor application.\n\nBy the end of the workshop\, you’ll be able to
 :\n  - Structure Ktor projects\n  - Test Ktor applications\n  - Create and 
 deploy RESTful services using Ktor\n  - Integrate Ktor with external libra
 ries\n\nThis will be a fast-paced workshop where attendees will spend most 
 of their time coding. You will walk away armed with a cookbook of various 
 Ktor recipes for building feature-complete AI powered web application.
LOCATION:Room #176
DTSTART:20250521T113000Z
DTEND:20250521T130000Z
END:VEVENT
BEGIN:VEVENT
UID:48d386c4-33ad-401c-a3ba-4d677d0924c3
DTSTAMP:20250517T085705Z
SUMMARY:Building Shared UI With Compose Multiplatform. Part 3.
DESCRIPTION:Take the next step in your cross-platform Kotlin journey with C
 ompose Multiplatform! This workshop is for developers already familiar wit
 h the basics of Kotlin Multiplatform and Jetpack Compose who are looking t
 o extend their skills by building a shared UI.\n\nWe’ll discuss how Compos
 e Multiplatform works and show you how your existing Compose skills are re
 usable across platforms. You’ll have hands-on time with a wide range of Co
 mpose features\, focusing on how they work across different platforms. Dur
 ing the workshop’s exercises\, you’ll work with Compose code\, explore API
 s\, build new features\, improve accessibility\, test the UI\, and more.\n
 \nCovering the latest available APIs and best practices\, we’ll equip you 
 with everything you need to start using Compose Multiplatform in your own 
 apps! Here is how the workshop will be structured:\n\nIntroduction\n- How 
 Compose Multiplatform works\n- Running Compose on Android\, iOS\, Desktop\
 , and Web\n- Writing basic Compose code for multiplatform use\n\nCompose b
 uilding blocks\n- Resources (localization\, fonts\, and more)\n- Image loa
 ding\n- ViewModels and architecture components\n- Navigation\n- Animations
 \n- Dependency injection\n- Theming\n\nMastering Compose Multiplatform\n- 
 Interop with native components\n- Dialogs\n- Insets\n- Accessibility\n- Te
 sting\n\nThis workshop includes exercises for participants to complete on 
 their own laptops. Using a MacBook is highly recommended for participation 
 in all exercises\, as iOS applications can only be built on macOS. Detaile
 d setup instructions will be provided prior to the workshop.
LOCATION:Room #178
DTSTART:20250521T113000Z
DTEND:20250521T130000Z
END:VEVENT
BEGIN:VEVENT
UID:2b79b87f-194f-4dc4-9498-d498551dced0
DTSTAMP:20250517T085705Z
SUMMARY:Deep Dive Into Kotlin Multiplatform: Advanced Techniques for Seamle
 ss Code Sharing. Part 3.
DESCRIPTION:This is an intermediate/advanced workshop for experienced Kotli
 n Multiplatform developers. It is aimed at developers who have built proje
 cts with Kotlin Multiplatform and Jetpack Compose / Compose Multiplatform 
 and now want to progress onto more advanced topics.\n\nThe workshop aims t
 o equip attendees with the skills to write high-quality code and apps usin
 g Kotlin Multiplatform. The workshop will address the following topics:\n\
 nA Gentle(r) Introduction\n- Introducing an example project\n- Explaining 
 project structure and architecture\n- Highlighting a few key libraries use
 d in the project\n\nNative Integrations\n- Splash screens\n- Notifications
 \n- Working with files\n\nAdvanced Kotlin Multiplatform for iOS Targets\n- 
 Debugging Kotlin/Swift\n- Understanding and improving Kotlin/Swift interop
 erability\n\nCode Quality\n- Code coverage with Kover (JVM-only)\n- Modula
 rization\n\nApp Quality\n- Fixing memory leaks\n- Performance testing\n- A
 pp size optimization\n\nManaging Workflows\n- Basics of building CI/CD pip
 elines for your apps\n\nYou will need to bring a MacBook along with you to 
 participate in all the practical exercises. Installation instructions will 
 be provided one week prior to the workshop.
LOCATION:Room #179
DTSTART:20250521T113000Z
DTEND:20250521T130000Z
END:VEVENT
BEGIN:VEVENT
UID:dcf7bd1e-4d15-4d66-90ec-b324cecab735
DTSTAMP:20250517T085705Z
SUMMARY:Refactoring to Functional Kotlin. Part 3.
DESCRIPTION:Kotlin supports both Object-oriented and functional styles of p
 rogramming\, but what should we do when we have OO code that should be fun
 ctional? Refactor\, of course!\n\nIn this workshop\, Nat and Duncan\, the 
 authors of Java to Kotlin: A Refactoring Guidebook\, take a web applicatio
 n and introduce techniques to gradually and safely migrate the code to the 
 functional style better suited to today’s architectures. Topics include:\n
 \n- Thinking in a functional way – Data\, Calculations\, and Actions\n- Mi
 grating from mutable objects to immutable data classes\n- Converting busin
 ess logic to a functional domain model\n- Where does the state live? Funct
 ional core / imperative shell\n- Choosing between functions and methods\n- 
 Functional error handling\n- Expand and Contract refactoring for safety ov
 er many commits
LOCATION:Room #180
DTSTART:20250521T113000Z
DTEND:20250521T130000Z
END:VEVENT
BEGIN:VEVENT
UID:e31c7658-9004-4ab7-9861-37a2840517f4
DTSTAMP:20250517T085705Z
SUMMARY:Asynchronous Programming With Kotlin Coroutines. Part 3.
DESCRIPTION:In this workshop\, you’ll learn everything you need to know abo
 ut how to be productive with coroutines in Kotlin. We’ll start with the ba
 sics of asynchronous programming\, its differences from blocking code\, an
 d the concepts of suspending functions and coroutines. We’ll explore corou
 tine contexts\, concurrent decomposition of work via deferreds\, and struc
 tured concurrency with coroutine scopes.\n\nThe second part of the worksho
 p will be devoted to Kotlin Flows. We’ll study how Kotlin Flows are design
 ed on a basic level\, learn the difference between hot and cold flows\, di
 scuss their typical usage patterns\, and explore how they incorporate idea
 s from reactive streams. To deepen our understanding\, we’ll also take a p
 eek at some of the implementations behind flows and collectors. Throughout
 \, we’ll see how they help you in writing safe and reliable concurrent sys
 tems\, and how modern applications can use them to work with asynchronous 
 streams of data\, manage system states\, and broadcast events.\n\nThrough 
 this workshop\, you’ll enhance your coroutines-related vocabulary\, unders
 tand how to spot and avoid common problems\, and be able to effectively an
 d confidently use coroutines and flows in your own projects.
LOCATION:Room #181
DTSTART:20250521T113000Z
DTEND:20250521T130000Z
END:VEVENT
BEGIN:VEVENT
UID:fd2d35fa-966f-47e6-b733-03616d4fd0d9
DTSTAMP:20250517T085705Z
SUMMARY:Coffee Break
LOCATION:Room #173
DTSTART:20250521T130000Z
DTEND:20250521T133000Z
END:VEVENT
BEGIN:VEVENT
UID:484cd691-f638-4a6a-9b18-ed92aad94c90
DTSTAMP:20250517T085705Z
SUMMARY:Spring Boot With Coroutines and Virtual Threads. Part 4.
DESCRIPTION:If you want to get the most out of Spring Boot in terms of low 
 latency\, high-throughput\, and resource efficiency\, there is no way arou
 nd virtual threads and/or reactive libraries like Webflux.\n\nHowever\, bo
 th won’t get you far: Virtual threads are limited to non-blocking operatio
 ns\, and WebFlux — even though offering all reactive qualities\, like non-
 blocking\, parallelism\, streaming\, etc. — will give you a lot of headach
 es due to its complexity\, bad readability\, and maintainability.\n\nIn th
 is workshop\, you’ll learn how Spring Boot’s coroutine support will wipe o
 ut all the downsides of the ‘raw’ WebFlux approach or the limitations of v
 irtual threads and provide you with the best of both worlds: non-blocking 
 reactive characteristics without the complexity.\n\nDuring the workshop\, 
 we will explore Kotlin’s reactive building blocks\, such as coroutines and 
 flows\, and apply them in Spring Boot. By building a non-blocking API in S
 pring Boot from scratch\, you’ll learn how to:\n\n- Use coroutines on top 
 of WebFlux and/or virtual threads.\n- Perform non-blocking remote API call
 s using WebClient or RestClient.\n- Access a database in a reactive way\, 
 either via the R2DBC or JDBC\, including framework support.\n- Apply struc
 tured concurrency in your business logic\, like requesting data in paralle
 l.\n- Create an advanced streaming API based on ServerSentEvents that comb
 ines coroutines and flow.\n\nIn addition\, we will explore virtual threads 
 in-depth and see how they can leverage the power of coroutines even more.\
 n\nAt the end of the workshop\, you’ll know all the ins and outs of progra
 mming in Spring Boot with coroutines while having experienced the tremendo
 us benefits they offer over raw virtual threads or WebFlux.\n\nWith the kn
 owledge you gain\, you can enlighten your Spring Boot project with corouti
 nes the very next day.
LOCATION:Room #173
DTSTART:20250521T133000Z
DTEND:20250521T150000Z
END:VEVENT
BEGIN:VEVENT
UID:e2a28728-c491-4c85-8db0-70d6294e7f82
DTSTAMP:20250517T085705Z
SUMMARY:Extracting\, Transforming\, and Analyzing Data With Kotlin. Part 4.
DESCRIPTION:This workshop is designed for all Kotlin developers who need si
 mple and convenient tools within their native ecosystem to assist them whe
 n working with data\, understanding its nature\, performing any necessary 
 processing\, and presenting the results to their team or stakeholders as a 
 report or chart.\n\nIn this workshop\, you’ll learn how to build data proc
 essing pipelines in your applications. We’ll explore the best practices fo
 r extracting data from various sources\, aggregating and transforming it\, 
 and then exporting it as a collection of data classes\, displaying it as t
 ables\, or visualizing it with insightful charts.\n\nBy the end of the wor
 kshop\, you’ll be able to:\n\n- Load\, transform\, and export data using t
 he Kotlin DataFrame library.\n- Visualize data with the Kandy library to e
 ffectively convey insights.\n- Access and manipulate data from various sou
 rces: REST APIs\, SQL databases\, CSV files\, and other tabular data.\n- H
 andle both flat and hierarchical JSON-like data structures.\n- Boost your 
 code written with the help of the kotlin.collections or SQL-like framework
 s.\n- Solve practical problems by applying your skills to three real-world 
 scenarios.\n- Present the insights in Kotlin notebooks and easily share th
 em on GitHub Gists.
LOCATION:Room #174
DTSTART:20250521T133000Z
DTEND:20250521T150000Z
END:VEVENT
BEGIN:VEVENT
UID:79cb6c23-f8d3-4b2a-a717-a2b187dbbb89
DTSTAMP:20250517T085705Z
SUMMARY:Hands-On Kotlin Web Development With Ktor. Part 4.
DESCRIPTION:Ktor is a lightweight and flexible toolkit for building HTTP ap
 plications. This workshop will use the Kotlin programming language\, the K
 tor framework\, the Exposed database access library\, OpenAI\, and several 
 other Kotlin and Java libraries to build a feature-complete AI powered web 
 application.\n\nWe’ll start with the basics by exploring the Ktor framewor
 k and learning how to build a simple web application using essential funct
 ions. We’ll cover topics like handling HTTP requests\, working with WebSoc
 kets\, database access\, authentication\, logging\, and deployment.\n\nFor 
 testing\, we will look into the APIs that Ktor provides. Finally\, we will 
 explore the API for writing plugins and use it to create a simple plugin f
 or our Ktor application.\n\nBy the end of the workshop\, you’ll be able to
 :\n  - Structure Ktor projects\n  - Test Ktor applications\n  - Create and 
 deploy RESTful services using Ktor\n  - Integrate Ktor with external libra
 ries\n\nThis will be a fast-paced workshop where attendees will spend most 
 of their time coding. You will walk away armed with a cookbook of various 
 Ktor recipes for building feature-complete AI powered web application.
LOCATION:Room #176
DTSTART:20250521T133000Z
DTEND:20250521T150000Z
END:VEVENT
BEGIN:VEVENT
UID:2c45e72b-e550-40e4-b8c7-51d11be9e2e0
DTSTAMP:20250517T085705Z
SUMMARY:Building Shared UI With Compose Multiplatform. Part 4.
DESCRIPTION:Take the next step in your cross-platform Kotlin journey with C
 ompose Multiplatform! This workshop is for developers already familiar wit
 h the basics of Kotlin Multiplatform and Jetpack Compose who are looking t
 o extend their skills by building a shared UI.\n\nWe’ll discuss how Compos
 e Multiplatform works and show you how your existing Compose skills are re
 usable across platforms. You’ll have hands-on time with a wide range of Co
 mpose features\, focusing on how they work across different platforms. Dur
 ing the workshop’s exercises\, you’ll work with Compose code\, explore API
 s\, build new features\, improve accessibility\, test the UI\, and more.\n
 \nCovering the latest available APIs and best practices\, we’ll equip you 
 with everything you need to start using Compose Multiplatform in your own 
 apps! Here is how the workshop will be structured:\n\nIntroduction\n- How 
 Compose Multiplatform works\n- Running Compose on Android\, iOS\, Desktop\
 , and Web\n- Writing basic Compose code for multiplatform use\n\nCompose b
 uilding blocks\n- Resources (localization\, fonts\, and more)\n- Image loa
 ding\n- ViewModels and architecture components\n- Navigation\n- Animations
 \n- Dependency injection\n- Theming\n\nMastering Compose Multiplatform\n- 
 Interop with native components\n- Dialogs\n- Insets\n- Accessibility\n- Te
 sting\n\nThis workshop includes exercises for participants to complete on 
 their own laptops. Using a MacBook is highly recommended for participation 
 in all exercises\, as iOS applications can only be built on macOS. Detaile
 d setup instructions will be provided prior to the workshop.
LOCATION:Room #178
DTSTART:20250521T133000Z
DTEND:20250521T150000Z
END:VEVENT
BEGIN:VEVENT
UID:499f97ef-1f7d-40c1-bf68-08a1847438da
DTSTAMP:20250517T085705Z
SUMMARY:Deep Dive Into Kotlin Multiplatform: Advanced Techniques for Seamle
 ss Code Sharing. Part 4.
DESCRIPTION:This is an intermediate/advanced workshop for experienced Kotli
 n Multiplatform developers. It is aimed at developers who have built proje
 cts with Kotlin Multiplatform and Jetpack Compose / Compose Multiplatform 
 and now want to progress onto more advanced topics.\n\nThe workshop aims t
 o equip attendees with the skills to write high-quality code and apps usin
 g Kotlin Multiplatform. The workshop will address the following topics:\n\
 nA Gentle(r) Introduction\n- Introducing an example project\n- Explaining 
 project structure and architecture\n- Highlighting a few key libraries use
 d in the project\n\nNative Integrations\n- Splash screens\n- Notifications
 \n- Working with files\n\nAdvanced Kotlin Multiplatform for iOS Targets\n- 
 Debugging Kotlin/Swift\n- Understanding and improving Kotlin/Swift interop
 erability\n\nCode Quality\n- Code coverage with Kover (JVM-only)\n- Modula
 rization\n\nApp Quality\n- Fixing memory leaks\n- Performance testing\n- A
 pp size optimization\n\nManaging Workflows\n- Basics of building CI/CD pip
 elines for your apps\n\nYou will need to bring a MacBook along with you to 
 participate in all the practical exercises. Installation instructions will 
 be provided one week prior to the workshop.
LOCATION:Room #179
DTSTART:20250521T133000Z
DTEND:20250521T150000Z
END:VEVENT
BEGIN:VEVENT
UID:a117f704-e813-43d2-a79e-c55c49ddfe85
DTSTAMP:20250517T085705Z
SUMMARY:Refactoring to Functional Kotlin. Part 4.
DESCRIPTION:Kotlin supports both Object-oriented and functional styles of p
 rogramming\, but what should we do when we have OO code that should be fun
 ctional? Refactor\, of course!\n\nIn this workshop\, Nat and Duncan\, the 
 authors of Java to Kotlin: A Refactoring Guidebook\, take a web applicatio
 n and introduce techniques to gradually and safely migrate the code to the 
 functional style better suited to today’s architectures. Topics include:\n
 \n- Thinking in a functional way – Data\, Calculations\, and Actions\n- Mi
 grating from mutable objects to immutable data classes\n- Converting busin
 ess logic to a functional domain model\n- Where does the state live? Funct
 ional core / imperative shell\n- Choosing between functions and methods\n- 
 Functional error handling\n- Expand and Contract refactoring for safety ov
 er many commits
LOCATION:Room #180
DTSTART:20250521T133000Z
DTEND:20250521T150000Z
END:VEVENT
BEGIN:VEVENT
UID:d44d348b-d0d1-4423-8b1a-56906254f6f8
DTSTAMP:20250517T085705Z
SUMMARY:Asynchronous Programming With Kotlin Coroutines. Part 4.
DESCRIPTION:In this workshop\, you’ll learn everything you need to know abo
 ut how to be productive with coroutines in Kotlin. We’ll start with the ba
 sics of asynchronous programming\, its differences from blocking code\, an
 d the concepts of suspending functions and coroutines. We’ll explore corou
 tine contexts\, concurrent decomposition of work via deferreds\, and struc
 tured concurrency with coroutine scopes.\n\nThe second part of the worksho
 p will be devoted to Kotlin Flows. We’ll study how Kotlin Flows are design
 ed on a basic level\, learn the difference between hot and cold flows\, di
 scuss their typical usage patterns\, and explore how they incorporate idea
 s from reactive streams. To deepen our understanding\, we’ll also take a p
 eek at some of the implementations behind flows and collectors. Throughout
 \, we’ll see how they help you in writing safe and reliable concurrent sys
 tems\, and how modern applications can use them to work with asynchronous 
 streams of data\, manage system states\, and broadcast events.\n\nThrough 
 this workshop\, you’ll enhance your coroutines-related vocabulary\, unders
 tand how to spot and avoid common problems\, and be able to effectively an
 d confidently use coroutines and flows in your own projects.
LOCATION:Room #181
DTSTART:20250521T133000Z
DTEND:20250521T150000Z
END:VEVENT
BEGIN:VEVENT
UID:9a667b0b-9d72-4db0-9ed7-6a9f2ffdcea4
DTSTAMP:20250517T085705Z
SUMMARY:Registration
LOCATION:Keynote room
DTSTART:20250522T053000Z
DTEND:20250522T070000Z
END:VEVENT
BEGIN:VEVENT
UID:4b23325b-71df-473b-994d-469d15272c47
DTSTAMP:20250517T085705Z
SUMMARY:Opening keynote
LOCATION:Keynote room
DTSTART:20250522T070000Z
DTEND:20250522T080000Z
END:VEVENT
BEGIN:VEVENT
UID:1e20dcea-d40c-4d19-beac-4c5e958b2c9c
DTSTAMP:20250517T085705Z
SUMMARY:Break
LOCATION:Hall D2
DTSTART:20250522T080000Z
DTEND:20250522T081500Z
END:VEVENT
BEGIN:VEVENT
UID:d1919f75-74f9-4db3-a826-1703e39ab144
DTSTAMP:20250517T085705Z
SUMMARY:Kotlin and Spring: The modern server side stack
DESCRIPTION:Rod will discuss his experience switching from Java to Kotlin w
 hile building a server-side application implementing structured RAG.\n\nHe
 'll show code in a real application and reflect on the positives and negat
 ives: overwhelmingly\, positives. \n\nKotlin brings a modern language to a 
 mature\, hardened ecosystem and productive\, high quality framework. The r
 esult can be a thing of beauty. \n\n
LOCATION:Keynote room
DTSTART:20250522T081500Z
DTEND:20250522T090000Z
END:VEVENT
BEGIN:VEVENT
UID:79fe8581-6e57-406b-8694-166e6b149298
DTSTAMP:20250517T085705Z
SUMMARY:Code Quality at Scale: Future-Proof Your Android Codebase with KtLi
 nt and Detekt
DESCRIPTION:Managing a large\, multi-team Kotlin codebase that has grown an
 d evolved over eight years is no small feat. Introducing architectural cha
 nges and ensuring alignment across multiple autonomous teams adds another 
 layer of complexity.\n\nIn this talk\, you’ll learn strategies to build mo
 re robust\, maintainable\, and future-ready codebases\, whether you’re sca
 ling a project or working in a large team. We’ll show how integrating stat
 ic analysis tools like Ktlint and Detekt into your CI pipeline can help yo
 u establish consistent coding standards and systematically reduce technica
 l debt. As a bonus\, we’ll explore how we were able to leverage custom Det
 ekt rules to help us safely enable r8 in a multimodule Android app.
LOCATION:Hall D2
DTSTART:20250522T081500Z
DTEND:20250522T090000Z
END:VEVENT
BEGIN:VEVENT
UID:3e890ac6-face-4ab3-86eb-dc5b3a890c5b
DTSTAMP:20250517T085705Z
SUMMARY:Deploying Kotlin Multiplatform at Google Workspace
DESCRIPTION:I like to talk you through some of the bugs we found and optimi
 zations as we launched Kotlin Multiplatform to some users with Google Work
 space.   We'll talk through some bugs\, performance issues and fixes with 
 comparisons to ObjectiveC.   As well as a Q/A with the developers of worke
 d on this.
LOCATION:Auditorium 15
DTSTART:20250522T081500Z
DTEND:20250522T090000Z
END:VEVENT
BEGIN:VEVENT
UID:e3b3e97b-fa45-45f6-a0d8-56d40805049f
DTSTAMP:20250517T085705Z
SUMMARY:Building an Agentic Platform with Kotlin: Powering one of Europe's 
 Largest LLM Bot
DESCRIPTION:How does one build a multi-tenant\, multi-channel enterprise ap
 plication for multiple European countries with a new and non-deterministic 
 technology such as LLMs?\n\nThis is the question my team and I asked ourse
 lves over a year and a half ago.\n\nJoin me in my talk to discover how we 
 helped build one of Europe's biggest LLM chatbots and how this led to Arc\
 , an open-sourced Kotlin-based AI framework that is now part of the Eclips
 e Foundation.\n\nWhat makes Arc interesting is how it combines Kotlin DSL 
 and scripting to enable developers to build LLM-powered agents fast and ef
 ficiently\, and most importantly\, ready for the enterprise.\n\nIn this se
 ssion\, we will go through the journey of how and why the framework was bo
 rn.\n\nWe'll take a look at some of the design decisions that were made an
 d some of the key features of the framework\, such as observability\, memo
 ry\, and tools\, highlighting how we tackle some of our biggest challenges
 .\n\nAt the end of this session\, you should have a good understanding of 
 the challenges in building an LLM application at this scale\, as well as s
 ome strategies for solving these problems.
LOCATION:Auditorium 11+12
DTSTART:20250522T081500Z
DTEND:20250522T090000Z
END:VEVENT
BEGIN:VEVENT
UID:2d86d551-aead-4984-8811-765edbdb20bc
DTSTAMP:20250517T085705Z
SUMMARY:Compose Prototyping in Kotlin Notebooks
DESCRIPTION:With its unique mix of markdown and REPL-like nature\, Kotlin N
 otebooks is an excellent way to document or explore a new idea or an exist
 ing codebase. But did you know that Notebooks also support Compose and Swi
 ng?\n\nIn this lighting talk you will see how you can set up Notebooks to 
 access existing UI code or write new from scratch\, with the result being 
 shown directly in the notebook. And as a bonus on top\, all of this can sh
 ared directly as documentation on Github or in Gists.
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T081500Z
DTEND:20250522T083000Z
END:VEVENT
BEGIN:VEVENT
UID:b6b850f4-d4c9-42cd-9ad3-5213a93a8f5e
DTSTAMP:20250517T085705Z
SUMMARY:Setting up your Mac for Kotlin Multiplatform Development
DESCRIPTION:If you have not built with KMP yet\, you will probably have to 
 install some software (e.g.\, Xcode\, iOS Simulator\, Android Studio Meerk
 at | 2024.3.1 or later). We recommend that you come to KotlinConf with all 
 of your KMP software installed as these applications are large and may tak
 e hours to install. But for those who need some help in getting everything 
 set up\, please join us.
LOCATION:Room #173
DTSTART:20250522T081500Z
DTEND:20250522T090000Z
END:VEVENT
BEGIN:VEVENT
UID:8df6d133-ad5e-4e42-a4d6-93925b4b65bf
DTSTAMP:20250517T085705Z
SUMMARY:State of Kotlin/Wasm and Compose Multiplatform for Web on Modern Br
 owsers 
DESCRIPTION:Kotlin/Wasm and Compose Multiplatform for web allow Kotlin Mult
 iplatform developers to extend their reach to the modern browser. In this 
 lightning talk\, I’ll describe the current state of the platform and what 
 the JetBrains team is working on as we prepare for the Beta release.
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T084500Z
DTEND:20250522T090000Z
END:VEVENT
BEGIN:VEVENT
UID:11de8348-c998-42ea-859a-90275362f167
DTSTAMP:20250517T085705Z
SUMMARY:Break
LOCATION:Hall D2
DTSTART:20250522T090000Z
DTEND:20250522T091500Z
END:VEVENT
BEGIN:VEVENT
UID:3877098f-cb2a-4797-801a-ed1885412eb1
DTSTAMP:20250517T085705Z
SUMMARY:Rich Errors in Kotlin
DESCRIPTION:Kotlin's nullability model is one of its core features. In this 
 talk\, we’ll explore how this model can be generalized to restricted union 
 types specifically designed for handling error cases. \n\nAdditionally\, w
 e’ll discuss how errors can currently be represented in Kotlin\, covering 
 approaches such as nullable types\, exceptions\, sealed hierarchies\, and 
 Result-like classes.
LOCATION:Keynote room
DTSTART:20250522T091500Z
DTEND:20250522T100000Z
END:VEVENT
BEGIN:VEVENT
UID:cf3da8bf-1f3d-4c05-aebc-d879432a497d
DTSTAMP:20250517T085705Z
SUMMARY:What’s new in Amper
DESCRIPTION:Amper is an experimental\, standalone build tool for the Kotlin 
 Multiplatform and JVM ecosystem from JetBrains. In this talk\, we'll look 
 at what Amper is already capable of. We’ll dip our toes together into the 
 design principles behind Amper\, and see how they find their reflection in 
 the major features\, choices and tradeoffs of Amper.\n\nAnd of course - I’
 ll share a sneak peek into what the team is cooking\, and what one might e
 xpect from Amper in the future!
LOCATION:Hall D2
DTSTART:20250522T091500Z
DTEND:20250522T100000Z
END:VEVENT
BEGIN:VEVENT
UID:9ab64b41-30ee-44e5-951c-eae93822d340
DTSTAMP:20250517T085705Z
SUMMARY:Next level Kotlin support in Spring Boot 4
DESCRIPTION:Spring and Kotlin teams collaborate to bring the Kotlin support 
 to the next level in the upcoming Spring Boot 4 release\, based on Spring 
 Framework 7\, to be released at the end of 2025.\n\nIn this brand new talk
 \, Sébastien will share new features that intend to improve the developer 
 experience and runtime efficiency of Spring Boot applications for Kotlin d
 evelopers.\n\nHe will cover the new Kotlin 2 baseline\, runtime efficiency 
 improvements\, better null-safety via JSpecify\, GraalVM native image spec
 ial Kotlin support\, new DSLs\, new Kotlin documentation and Spring AI Kot
 lin support.
LOCATION:Auditorium 15
DTSTART:20250522T091500Z
DTEND:20250522T100000Z
END:VEVENT
BEGIN:VEVENT
UID:c6bca57d-d3a9-4976-b3e3-6c5c3a8d6edf
DTSTAMP:20250517T085705Z
SUMMARY:Creative UIs with Compose
DESCRIPTION:While most folks associate Compose UI with Material\, its API a
 llows us to be more expressive than ever before.\n\nMobile UIs have become 
 homogenized and stale\, but video games continue to provide a wealth of in
 novation and creativity.\n\nIn this session we'll recreate a complex user 
 interface from the game Persona 5 to showcase how to really push Compose b
 eyond Material Design. Topics include:\n- Drawing custom shapes\n- Animati
 ng path data\n- Non-standard shapes in LazyColumn/LazyRow\n- Custom effect
 s inside LazyColumn/LazyRow\n- Remaining usable and accessible when not us
 ing Material\n- How/why video games can be a source of inspiration
LOCATION:Auditorium 11+12
DTSTART:20250522T091500Z
DTEND:20250522T100000Z
END:VEVENT
BEGIN:VEVENT
UID:914a833f-e57c-4be5-ad76-d38aeac15ea3
DTSTAMP:20250517T085705Z
SUMMARY:Model Context Protocol in Kotlin
DESCRIPTION:MCP is an open protocol that standardizes how applications prov
 ide context to LLMs. We've created a Kotlin library that allows you to use 
 this protocol and connect AI models to tooling\, like IDEs. Now we will se
 e how it works in practice.
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T091500Z
DTEND:20250522T093000Z
END:VEVENT
BEGIN:VEVENT
UID:799af915-5d1d-4d44-80c1-96314802e659
DTSTAMP:20250517T085705Z
SUMMARY:Kotlin's Gam[e]bit: LLM-less AI for Board Games
DESCRIPTION:Discover how Kotlin can power AI without relying on large langu
 age models. In this session\, we'll explore preparing data using Kotlin No
 tebooks\, training machine learning models directly in Kotlin\, and implem
 enting a strategy-driven bot for an online board game. Whether you're a Ko
 tlin enthusiast or curious about alternative approaches to AI\, this talk 
 will show how Kotlin shines as a tool for building efficient\, specialized 
 AI systems
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T094500Z
DTEND:20250522T100000Z
END:VEVENT
BEGIN:VEVENT
UID:beabf36d-7b02-4bc5-9577-62f6ca204cb9
DTSTAMP:20250517T085705Z
SUMMARY:Lunch
LOCATION:Keynote room
DTSTART:20250522T100000Z
DTEND:20250522T110000Z
END:VEVENT
BEGIN:VEVENT
UID:fb5cb4e9-9902-44c5-9884-1f82029fae87
DTSTAMP:20250517T085705Z
SUMMARY:From 0 to h-AI-ro: high-speed track to AI for Kotlin developers
DESCRIPTION:With the advent of ChatGPT and other generative AI models\, art
 ificial intelligence has taken a giant leap forward\, unlocking possibilit
 ies beyond our imagination while simultaneously challenging the establishe
 d way of doing. How does this exciting (r?)evolution impact us Kotlin deve
 lopers?\n\nIn this session\, we'll take a deep dive into the world of (gen
 erative) AI — giving you a clear and practical understanding of key termin
 ology\, concepts\, and frameworks relevant to the Kotlin ecosystem\, inclu
 ding powerful tools like Kotlin notebooks.\n\nGet to know:\n- Generative A
 I 101:  Get a hands-on introduction to the core concepts of modern AI — fr
 om Large Language Models (LLMs) and Natural Language Processing (NLP) to e
 mbeddings\, vector databases\, Retrieval-Augmented Generation (RAG)\, Tool
 s\, and Prompt Engineering.\n\n- Agentic AI: Go beyond simple prompts and 
 tool calls — discover how to build intelligent\, autonomous Agents using t
 he Model Context Protocol (MCP) to orchestrate complex\, context-aware beh
 avior.\n\n- Real-world integration:  Learn how to bring AI into your Kotli
 n applications — both server-side and mobile — using frameworks like LangC
 hain4j\, Spring AI\, and MCP clients and servers.\n \nThrough interactive 
 examples and live coding\, you will gain insights into how Kotlin can be l
 everaged with cutting-edge AI technologies\, opening doors to innovative p
 ossibilities in content generation\, natural language processing\, compute
 r vision\, and more.\n\nBy the end of this session\, you will emerge with 
 a comprehensive understanding of AI's potential within the Kotlin ecosyste
 m. Armed with this knowledge\, you'll be prepared to embrace the future as 
 a H-AI-ro!
LOCATION:Keynote room
DTSTART:20250522T110000Z
DTEND:20250522T114500Z
END:VEVENT
BEGIN:VEVENT
UID:0b771ce1-f3a1-4058-92b1-5823f30f0148
DTSTAMP:20250517T085705Z
SUMMARY:The Life and Death of a Kotlin/Native Object
DESCRIPTION:Have you ever wondered what the Kotlin/Native runtime does? Wha
 t actually happens\, under the hood\, when you instantiate an object? How 
 is an object layed out? How does the runtime manage memory? What happens w
 hen an object is no longer needed?\n\nIn this talk\, you will get a look a
 t how all these problems are solved by the Kotlin/Native runtime. This is 
 a high level talk about a very low level topic\; you only need to know a b
 it of Kotlin to follow along.
LOCATION:Hall D2
DTSTART:20250522T110000Z
DTEND:20250522T114500Z
END:VEVENT
BEGIN:VEVENT
UID:099fa61b-3631-43fc-8051-ed9afe06259c
DTSTAMP:20250517T085705Z
SUMMARY:A (deep) dive into (shallow) immutability: Valhalla and beyond
DESCRIPTION:Immutability is getting more and more attention in modern progr
 amming\, making code easier to reason about\, safer in concurrent environm
 ents\, and more maintainable. However\, adopting immutability isn’t withou
 t challenges\, as it does improve the developer experience\, but can often 
 come with runtime costs. In Kotlin\, immutability is already a key part of 
 the language design\, but there’s significant potential to push its bounda
 ries even further.\n\nThis talk begins by exploring the current state of i
 mmutability in Kotlin. We’ll highlight what features the language already 
 provides\, examine what’s missing\, and discuss the reasons behind these d
 esign decisions. From there\, we’ll take a closer look at Project Valhalla
 \, an upcoming JVM initiative that introduces value types and other innova
 tions\, enabling new possibilities for Kotlin. We’ll discuss how Valhalla 
 can help enhance Kotlin’s immutability story and improve the programming e
 xperience without significant trade-offs.\n\nFinally\, we’ll explore the b
 roader immutability design space for Kotlin\, looking beyond Valhalla to i
 magine what future extensions could look like. We’ll discuss how new immut
 ability features could integrate with existing ones\, such as smart casts 
 and coroutines\, while maintaining the language’s pragmatic and developer-
 friendly nature.\n\nJoin this session to discover how Kotlin can evolve it
 s immutability story to better meet the needs of modern developers\, combi
 ning practicality with innovation.
LOCATION:Auditorium 15
DTSTART:20250522T110000Z
DTEND:20250522T114500Z
END:VEVENT
BEGIN:VEVENT
UID:16672938-2120-4d96-bb2f-cb196b594225
DTSTAMP:20250517T085705Z
SUMMARY:APIs: How Hard Can They Be?
DESCRIPTION:Virtually every Android developer uses AndroidX libraries. With 
 KMP\, the usage is expanding to other platforms as well. The wide adoption 
 makes API design and evolution of these libraries critical for the user ex
 perience. Join me to learn about the life of an API in AndroidX: from an i
 dea\, to a design\, to a review\, and through an API evolution. You will h
 ear about our API review process and our use of Metalava and Kotlin Binary 
 Compatibility Verification tools  to wrangle JVM\, Android\, and KMP libra
 ries.
LOCATION:Auditorium 11+12
DTSTART:20250522T110000Z
DTEND:20250522T114500Z
END:VEVENT
BEGIN:VEVENT
UID:4a684575-ada8-414f-a0ac-89374ce4e16a
DTSTAMP:20250517T085705Z
SUMMARY:One Codebase\, Three Platforms: X's Experience with Kotlin Multipla
 tform
DESCRIPTION:What if you could share a single codebase across Android\, iOS\
 , and Web without sacrificing platform-specific experiences? Is it even po
 ssible? At X (formerly Twitter)\, with a tiny developer team\, we took the 
 leap with Kotlin Multiplatform to entirely rebuild one of our core feature
 s for our multi-million-user platform.\n\nIn this talk\, we'll take you th
 rough the highs and lows of adopting Kotlin Multiplatform in a real-world 
 project. Learn about our development process\, the libraries that made our 
 journey smoother\, and how we approached architecture\, navigation\, depen
 dency injection\, and UI for a consistent user experience across platforms
 .\n\nWe'll share practical lessons\, the challenges we faced\, and how Kot
 lin Multiplatform transformed our cross-platform development strategy. We'
 ll also explore one of the biggest challenges: gaining buy-in from iOS and 
 Web developers for Kotlin Multiplatform. We'll share how we addressed thei
 r concerns and built strong collaboration across teams. Whether you're cur
 ious about Kotlin Multiplatform or seeking tips to enhance your implementa
 tion\, this talk is for you!\n\nJoin us to see how Kotlin Multiplatform en
 abled us to ship faster and deliver a seamless experience\, even while tac
 kling the complexities of building for millions of users with a small\, fo
 cused team.
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T110000Z
DTEND:20250522T111500Z
END:VEVENT
BEGIN:VEVENT
UID:7db92622-5bd4-45a4-ba1a-40d0dbfb330a
DTSTAMP:20250517T085705Z
SUMMARY: Two Years with Kotlin Multiplatform: From Zero to 55% Shared Code
DESCRIPTION:Two years ago\, StoneCo\, one of the largest fintech companies 
 in Latin America serving more than 4 million users\, embarked on a journey 
 to unify its mobile apps using Kotlin Multiplatform (KMP)\, aiming to bala
 nce the efficiency of code sharing with the seamless user experience requi
 red in the fintech sector. This talk explores our journey - how we evaluat
 ed multiple cross-platform frameworks\, overcame technical and organizatio
 nal challenges\, and achieved 55% code sharing across two large-scale mobi
 le applications.\n\nYou'll hear how we made the decision to adopt KMP\, ho
 w we trained 130 mobile engineers to embrace this paradigm shift\, and the 
 measurable impact it has had on team productivity\, developer satisfaction
 \, and app performance. Whether you're considering KMP or scaling it in yo
 ur organization\, this session will provide actionable insights from a rea
 l-world\, long-term implementation.
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T113000Z
DTEND:20250522T114500Z
END:VEVENT
BEGIN:VEVENT
UID:0188d190-a783-44e9-86a1-6145b5458c81
DTSTAMP:20250517T085705Z
SUMMARY:Break
LOCATION:Hall D2
DTSTART:20250522T114500Z
DTEND:20250522T120000Z
END:VEVENT
BEGIN:VEVENT
UID:9a005717-d6ff-463b-92ac-17c0c87f3a3f
DTSTAMP:20250517T085705Z
SUMMARY:Compose Multiplatform for iOS: Ready for Production Use
DESCRIPTION:Compose Multiplatform\, the declarative framework by JetBrains 
 for building shared UIs\, is now stable and production-ready on iOS – so i
 t’s time to start building! In this talk\, you will get an overview of the 
 technology\, and see what we’ve done to get to the stable release.\n\nThis 
 includes the evolution of our APIs\, under-the-hood changes\, and new tool
 ing that we’re premiering for building Compose Multiplatform apps in your 
 favorite development environments\, IntelliJ IDEA and Android Studio. You’
 ll see that there’s a rich ecosystem available for you that has already gr
 own to cover all major areas of app development.\n\nPutting it all togethe
 r\, you’ll see how Compose Multiplatform enables you to write production-g
 rade apps on iOS and Android while reusing much of the knowledge you alrea
 dy have – and you’ll also get some insights into what we have planned next 
 in the journey of Compose Multiplatform\, on iOS and beyond.
LOCATION:Keynote room
DTSTART:20250522T120000Z
DTEND:20250522T124500Z
END:VEVENT
BEGIN:VEVENT
UID:426ea8da-2849-4995-9a41-a58fc0472c16
DTSTAMP:20250517T085705Z
SUMMARY:Extending Ktor for Server Side Development
DESCRIPTION:While Kotlin is seeing widespread adoption for Server side deve
 lopment\, Ktor\, Kotlin's minimalistic and flexible framework for server a
 nd client side development\, is sometimes overlooked\, largely because Spr
 ing Boot still offers an exhaustive range of starters. \n\nTo bridge this 
 gap\, kotlin developers can utilise Ktor's fluent Plugin API to provide al
 l the functionality they need for their own use cases\, and those of the w
 ider community.\n\nIn this session\, we will discuss developing plugins fo
 r Ktor and demonstrate a few interesting plugins that complement the stand
 ard set of Ktor’s features.\n\nYou’ll learn how to seamlessly integrate es
 sential functionalities like Kafka for message-driven architectures\, impl
 ement advanced rate limiting for traffic control\, and enhance system resi
 lience with a sophisticated Circuit Breaker plugin. Each plugin is crafted 
 to offer flexibility and ease of integration\, making your development exp
 erience smoother and more efficient.
LOCATION:Hall D2
DTSTART:20250522T120000Z
DTEND:20250522T124500Z
END:VEVENT
BEGIN:VEVENT
UID:a603e7dc-b8d4-46b3-b8fb-c51cf417bf62
DTSTAMP:20250517T085705Z
SUMMARY:IoT development with Kotlin
DESCRIPTION:With the advent of Kotlin Multiplatform and Kotlin/Native\, com
 bined with IoT devices increasingly leveraging more powerful hardware capa
 ble of running Linux\, we now have the exciting opportunity to use Kotlin 
 for IoT development.\n\nThis talk will explore the key technologies requir
 ed for IoT devices and demonstrate how to integrate them using Kotlin. Fro
 m communication protocols like Matter\, MQTT\, and Bluetooth LE\, to essen
 tial tools and frameworks like embedded Linux\, D-Bus\, and Buildroot\, we 
 will delve into the strategies and best practices for successfully adoptin
 g Kotlin in IoT development.
LOCATION:Auditorium 15
DTSTART:20250522T120000Z
DTEND:20250522T124500Z
END:VEVENT
BEGIN:VEVENT
UID:cce8eb45-231f-4fab-a2ce-ee713092542f
DTSTAMP:20250517T085705Z
SUMMARY:Good Old Data
DESCRIPTION:I will be talking about data-oriented systems design: why we ne
 ed to stop hiding plain data and why object orientation no longer serves u
 s well. Starting from first principles and foundational definitions\, we’l
 l explore practical recipes and patterns for working with data in Kotlin. 
 Topics include serialization\, persistent data structures\, polymorphism\, 
 identity\, and state
LOCATION:Auditorium 11+12
DTSTART:20250522T120000Z
DTEND:20250522T124500Z
END:VEVENT
BEGIN:VEVENT
UID:6ec7cd9b-aa9a-4c55-b012-065b5f24fa32
DTSTAMP:20250517T085705Z
SUMMARY:Get Started With Kotlin Multiplatform for Shared Business Logic
DESCRIPTION:Kotlin Multiplatform (KMP) allows you to write code once and sh
 are it across multiple target platforms\, such as Android\, iOS\, web\, an
 d JVM. By leveraging KMP\, you can minimize code duplication\, maintain co
 nsistency\, and significantly reduce development time and effort. In this 
 Codelab\, we will walk developers through taking a standalone Android app 
 and a standalone iOS app\, extracting some business logic to a KMP Shared 
 Module\, and leveraging this shared business logic from both Android and i
 OS.
LOCATION:Room #173
DTSTART:20250522T120000Z
DTEND:20250522T124500Z
END:VEVENT
BEGIN:VEVENT
UID:fff0cc7f-13d9-4ccd-b46c-9bd3f501d353
DTSTAMP:20250517T085705Z
SUMMARY:The wonders of smart casting
DESCRIPTION:Smart casting sets Kotlin apart from other languages. We often 
 see its effect through null checks and when expressions\, but in this talk 
 we'll show that smart casting is capable of much more! 
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T120000Z
DTEND:20250522T121500Z
END:VEVENT
BEGIN:VEVENT
UID:6b49038c-2399-4f3a-b11c-761cfe408e87
DTSTAMP:20250517T085705Z
SUMMARY:Building a macOS screen saver with Kotlin
DESCRIPTION:Two years ago\, sitting in the audience at KotlinConf\, I was m
 esmerised by the idle animation on the big screen. It was in the style of 
 old school DVD player screen savers\, with Kotlin's various logos through 
 the years bouncing from edge to edge.\n\nI later found out that this was a 
 pre-rendered video\, and not a screen saver that I could just grab and sta
 rt using. This meant that I had no choice but to build it myself\, as a na
 tive macOS application running on Kotlin/Native.\n\nJoin me for a tale of 
 Kotlin success and macOS failures\, as we explore just what it takes to bu
 ild a screen saver in Kotlin.\n\nWe'll see how easy it is to call native p
 latform APIs from Kotlin code\, what challenges the development of such an 
 unusual application presents\, and how macOS is very much not our friend o
 n this whole journey.
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T123000Z
DTEND:20250522T124500Z
END:VEVENT
BEGIN:VEVENT
UID:94f5a1ee-cd79-4a75-87d5-781ed31b892f
DTSTAMP:20250517T085705Z
SUMMARY:Coffee Break
LOCATION:Keynote room
DTSTART:20250522T124500Z
DTEND:20250522T131500Z
END:VEVENT
BEGIN:VEVENT
UID:30f32113-3575-47f9-a981-baf50ad2ca1e
DTSTAMP:20250517T085705Z
SUMMARY:Building AI Agents in Kotlin
DESCRIPTION:AI agents are fully autonomous systems whose actions are dynami
 cally directed by LLMs. In agents\, LLMs are not only used for standalone 
 tasks while keeping the general flow predefined in the code — they become 
 the main actor responsible for answering how a task should be accomplished
 .\n\nThis talk will provide an overview of AI agents\, including their bui
 lding blocks and basic workflows. It will share the essential knowledge fo
 r building effective AI agents in Kotlin.
LOCATION:Keynote room
DTSTART:20250522T131500Z
DTEND:20250522T140000Z
END:VEVENT
BEGIN:VEVENT
UID:396272af-a456-4ecb-9454-f623f723875a
DTSTAMP:20250517T085705Z
SUMMARY:Building Inclusive Jetpack Compose Apps: Leveraging Kotlin and the 
 Accessibility Scanner
DESCRIPTION:Accessibility is a growing and important aspect in app developm
 ent that isn’t always prioritized. Google’s efforts include making apps mo
 re accessible which are shown in their new standard of making UIs\, using 
 Jetpack Compose. Jetpack Compose with its Kotlin-based declarative approac
 h offers a simplified path to building inclusive UIs. Within Jetpack Compo
 se\, there are powerful tools like the Accessibility Scanner to quickly id
 entify and address common accessibility issues\, improving the overall use
 r experience. This talk will show that straightforward changes yield drama
 tic improvements for user experience. Through the talk\, strategies will b
 e shown how to improve accessibility. 
LOCATION:Hall D2
DTSTART:20250522T131500Z
DTEND:20250522T140000Z
END:VEVENT
BEGIN:VEVENT
UID:f8cf5ad0-7fb3-4304-87b3-d04ef87819c9
DTSTAMP:20250517T085705Z
SUMMARY:Blueprints for Scale: What AWS Learned Building a Massive Multiplat
 form Project
DESCRIPTION:The AWS SDK for Kotlin is a massive multiplatform project\, spa
 nning over 300 services and targeting 8 distinct platforms.\n\nIn this ses
 sion\, we’ll share first-hand insights into managing the challenges of a l
 arge Kotlin Multiplatform project\, detailing how the AWS SDK for Kotlin w
 as designed\, developed\, and scaled. You’ll hear about the best practices 
 we adopted\, the lessons learned\, and the strategies that worked (and did
 n’t) at AWS scale.\n\nJoin us as we discuss design tradeoffs\, maintaining 
 backwards compatibility\, adding support for Kotlin Multiplatform\, automa
 ting build and release processes\, and more!
LOCATION:Auditorium 15
DTSTART:20250522T131500Z
DTEND:20250522T140000Z
END:VEVENT
BEGIN:VEVENT
UID:725b3968-5bf1-4cb4-843a-c5e8bc3b5672
DTSTAMP:20250517T085705Z
SUMMARY:Introducing Compose Hot Reload
DESCRIPTION:Compose Hot Reload is a new plugin for Compose apps running on 
 the JVM\, which lets you see the results of your code changes live\, witho
 ut having to restart the app.\n\nIn this talk\, we'll look at where Compos
 e Hot Reload is today and how you can use it in your projects to make iter
 ating on UI code faster\, more convenient\, and more exciting!\n\nThen we'
 ll dive into the technical details to see how multiple JetBrains technolog
 ies came together\, step by step\, lifting a modern UI framework to the ne
 xt level. We'll also learn about all the fun issues encountered and decisi
 ons that had to be made along the way.
LOCATION:Auditorium 11+12
DTSTART:20250522T131500Z
DTEND:20250522T140000Z
END:VEVENT
BEGIN:VEVENT
UID:4990c959-e88a-46f5-abc0-185e5c34c98e
DTSTAMP:20250517T085705Z
SUMMARY:Coroutine Debugging in IntelliJ IDEA
DESCRIPTION:During the past 1.5 years\, we’ve implemented the smooth corout
 ine debugging experience\, so it would feel almost the same as debugging s
 ynchronous code and even better! In this talk I will show you the capabili
 ties of coroutine debugger and best practices for debugging coroutines. Al
 so\, I’ll tell you a little bit about the challenges we faced while implem
 enting these improvements\, such as deep integration and communication bet
 ween the IDE and the coroutine library.
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T131500Z
DTEND:20250522T133000Z
END:VEVENT
BEGIN:VEVENT
UID:587f124e-cc9c-47c3-8d9f-32dd9d8bbb94
DTSTAMP:20250517T085705Z
SUMMARY:How to Build Your Own Kotlin Course
DESCRIPTION:Interested in teaching Kotlin? This session introduces a compre
 hensive set of materials designed to help you build your own Kotlin course
 . These resources include presentations with speaker notes\, theory quizze
 s\, homework assignments\, and interactive in-IDE courses that give studen
 ts hands-on experience. We will also share insights from implementing thes
 e materials at two universities\, and show how they can be adapted for dif
 ferent audience levels.
LOCATION:Room #173
DTSTART:20250522T131500Z
DTEND:20250522T140000Z
END:VEVENT
BEGIN:VEVENT
UID:787f4501-fc72-414f-8336-230f83d93969
DTSTAMP:20250517T085705Z
SUMMARY:Coroutines and Structured Concurrency in Ktor
DESCRIPTION:Ktor is built from the ground up using Kotlin and Coroutines. I
 t allows us to leverage Structured Concurrency\, and easily build elegant 
 and robust applications.\n\nDiscover how Coroutines and CoroutineScopes wo
 rk in Ktor from the ground up\, and what patterns and best practices allow 
 building safe -and maintainable applications with Ktor in Kotlin.
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T134500Z
DTEND:20250522T140000Z
END:VEVENT
BEGIN:VEVENT
UID:c5fe71d7-5d82-4599-b88d-0089d360df98
DTSTAMP:20250517T085705Z
SUMMARY:Break
LOCATION:Hall D2
DTSTART:20250522T140000Z
DTEND:20250522T141500Z
END:VEVENT
BEGIN:VEVENT
UID:41bd18f2-4816-4710-a4e9-e48a2d662903
DTSTAMP:20250517T085705Z
SUMMARY:Full Stream Ahead: Breaking the protocol barrier with http4k
DESCRIPTION:HTTP's request-response pattern has served us well\, but modern 
 web applications demand more. Real-time communication demands different pr
 otocols\, yet maintaining testability and simplicity remains crucial to de
 veloper experience.\n\nIn this talk\, we'll explore how http4k extends HTT
 P's capabilities through WebSocket and Server-Sent Events support and how 
 these protocols can be modelled as simple functions\, making them as testa
 ble as plain HTTP endpoints. We'll then show how these streaming capabilit
 ies open up new possibilities for server-side rendering\, bringing us full 
 circle from the days of JSP to modern reactive interfaces - all while keep
 ing the complexity on the server where it belongs.\n\nJoin us to discover 
 how http4k's streaming capabilities can enhance your web applications\, en
 abling everything from chat applications to live dashboards and reactive s
 erver-rendered interfaces.
LOCATION:Keynote room
DTSTART:20250522T141500Z
DTEND:20250522T150000Z
END:VEVENT
BEGIN:VEVENT
UID:13b7f225-c394-4f46-8f90-2e5ae8caf6c0
DTSTAMP:20250517T085705Z
SUMMARY:Multiplatform Settings: A case study in Multiplatform library devel
 opment
DESCRIPTION:How do I create libraries for Kotlin Multiplatform projects? Ko
 tlin lets you share common code between different target platforms\, but b
 y default only a limit set of platform-agnostic APIs are available to the 
 code. Growing the amount of APIs available required Kotlin Multiplatform l
 ibraries.\n\nI’ll talk through what it looks like to create such a library
 \, drawing from my experience building and maintaining one of my own since 
 the early days of Kotlin/Native. We'll talk about how to find shared abstr
 actions around different platform APIs\, how to handle the fast-paced evol
 ution of this environment\, and what this all felt like as a first-time li
 brary developer. When we're done\, you’ll be ready to leverage the growing 
 ecosystem as well as make your own contributions.
LOCATION:Hall D2
DTSTART:20250522T141500Z
DTEND:20250522T150000Z
END:VEVENT
BEGIN:VEVENT
UID:5cd5e041-5577-4fdb-a142-ae0de768bd1d
DTSTAMP:20250517T085705Z
SUMMARY:Compose draw speedrun - reloaded
DESCRIPTION:Let's see how many compose drawing techniques we can demo in 45 
 minutes. This live code speed run will start simple and quickly escalate. 
 I will try out as many drawing techniques as will fit into the time and sc
 reen space in a compose desktop app. Thanks to hot reloading we will be ab
 le to see the effects as the code changes.\n\nAt the end of this talk the 
 audience will:\n\n- have a good overview of what is possible with compose 
 drawing\n- see hot reload in action\n- get access to the open source repo 
 of samples as a reference
LOCATION:Auditorium 15
DTSTART:20250522T141500Z
DTEND:20250522T150000Z
END:VEVENT
BEGIN:VEVENT
UID:df1d68da-fb0f-4925-91de-45be865088fd
DTSTAMP:20250517T085705Z
SUMMARY:LangChain4j with Quarkus
DESCRIPTION:Kotlin is loved for its expressiveness\, Quarkus for its blazin
 g-fast runtime\, and LangChain4j for integrating AI into modern applicatio
 ns. But what happens when you bring all three together? You unlock the pot
 ential to build cutting-edge\, AI-powered applications efficiently.\n\nDes
 pite the growing demand for AI-driven solutions\, integrating AI workflows 
 into existing applications remains a challenge for many Kotlin developers. 
 Pain points include complex setup\, lack of synergy between frameworks\, a
 nd maintaining high performance while leveraging AI tools.\n\nThis talk of
 fers a solution: combining LangChain4j and Quarkus to create Kotlin applic
 ations that leverage AI capabilities seamlessly. We’ll explore how to stre
 amline integration\, manage dependencies\, and use Kotlin’s idiomatic feat
 ures to simplify AI workflows.\n\nWho is this talk for? Kotlin developers 
 curious about embedding AI into their apps\, and Quarkus fans eager to exp
 lore its potential in AI-driven use cases. Attendees will leave with actio
 nable insights\, including code samples\, to build AI-powered applications 
 confidently.
LOCATION:Auditorium 11+12
DTSTART:20250522T141500Z
DTEND:20250522T150000Z
END:VEVENT
BEGIN:VEVENT
UID:4a1efbbd-2520-4c77-87d5-e8c12d0522b4
DTSTAMP:20250517T085705Z
SUMMARY:Interactive Session on Shaping Kotlin Education
DESCRIPTION:Kotlin is a popular choice for teaching programming\, and the K
 otlin Foundation Education Committee is here to support educators in using 
 it to its full potential.\n\nIn this session\, we’ll share current initiat
 ives for those teaching and learning Kotlin – whether in classrooms\, work
 shops\, or teams. You’ll learn how to get involved\, access available reso
 urces\, and connect with others in the teaching community.\nJoin us for an 
 interactive format featuring educators\, experts\, and members of the Kotl
 in Foundation Education Committee. Together\, we’ll explore how we can bet
 ter support your work\, address common challenges\, and discuss what we sh
 ould prioritize next.\n\nBring your questions!
LOCATION:Room #173
DTSTART:20250522T141500Z
DTEND:20250522T150000Z
END:VEVENT
BEGIN:VEVENT
UID:d5a33794-5817-481a-89fd-1e65d4e378fe
DTSTAMP:20250517T085705Z
SUMMARY:Kotlin compatibility crash course
DESCRIPTION:A new version of Kotlin is out 🎉 Let's update all the things 🚀
  \nBut... what does it really mean to update your Kotlin version?\n\nIn th
 is talk\, we'll take a look at different parts of the Kotlin ecosystem: Ko
 tlin stdlib\, Gradle Plugin\, compiler\, K/N\, JS\, etc... and the differe
 nt compatibility guarantees they offer. \n\nWe'll dive into Android and Ja
 va. They have compatibility guarantees too!\n\nWhether you're developing a
 n Android app\, a server\, a library or a Gradle plugin\, we'll see how yo
 u can use the latest tooling while still giving your users plenty of time 
 to update on their own schedule. \nAfter this talk\, you'll never be afrai
 d to see "incompatible version of metadata" in your logs anymore!
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T141500Z
DTEND:20250522T143000Z
END:VEVENT
BEGIN:VEVENT
UID:4ddd0a50-3cf5-48e9-9570-dd8e61165531
DTSTAMP:20250517T085705Z
SUMMARY:Kotlin Worst Practices — How to Maximize Your Hassle
DESCRIPTION:Want to turn your Kotlin journey into a rollercoaster of frustr
 ation? You’re in the right place! In this session\, we’ll uncover the ulti
 mate strategies for making life harder: delightfully obtuse anti-patterns\
 , enthusiastically misusing language features\, and blissfully ignoring ec
 osystem best practices.\n\nPacked with real-world blunders\, this talk is 
 your shortcut to chaos!
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250522T144500Z
DTEND:20250522T150000Z
END:VEVENT
BEGIN:VEVENT
UID:e5dd7159-3c85-44ce-9c13-fe70bd61148b
DTSTAMP:20250517T085705Z
SUMMARY:Break
LOCATION:Hall D2
DTSTART:20250522T150000Z
DTEND:20250522T151500Z
END:VEVENT
BEGIN:VEVENT
UID:541b92cc-670f-4239-ac6d-cbfb263725ba
DTSTAMP:20250517T085705Z
SUMMARY:That's Unpossible – A full stack side project webapp (including a h
 igh-fidelity UI!) all in Kotlin
DESCRIPTION:It's happened to all of us – an idea strikes for a side project 
 and you want to build a quick webapp\, but then you remember the state of 
 webdev is still a bit of a mess in 2025. Sure you could pick up one of tho
 se "all-in-one" frameworks\, but they're so heavy and complicated. And eve
 n if that worked\, you'd still need something on the frontend so you start 
 looking at the the weird world of frontend frameworks or (gasp!) writing r
 aw HTML/CSS/JavaScript.\n\nBut it doesn't have to be that hard! I'm here t
 o present a straightforward stack that gets you a full stack webapp up and 
 running fast\, using the one language we all know and love – Kotlin. Datab
 ase manipulation\, async services\, and a high fidelity UI\, all accessed 
 and built with Kotlin. And yes\, you read that right – you can have a grea
 t UI without having to write a single line of CSS\, HTML\, or JavaScript.\
 n\nI'll show you a path for building a basic webapp on top of a simple dat
 abase (Postgres)\, performing basic CRUD operations on that database (Kotl
 in Exposed)\, building business logic via async services (Kotlin Coroutine
 s)\, and constructing a high-fidelity UI to bring it all together (Vaadin 
 on Kotlin). By the end of the talk we'll have a fully functional webapp th
 at is entirely built on Kotlin.\n\nAnd let's not forget\, we're not buildi
 ng a by-the-book\, very serious webapp\, just something we're doing on the 
 side for fun. So forget about tests and forget about perfect architecture 
 – let's have some fun\, learn a few things along the way\, and get this th
 ing running!
LOCATION:Keynote room
DTSTART:20250522T151500Z
DTEND:20250522T160000Z
END:VEVENT
BEGIN:VEVENT
UID:3d08f178-cb1e-41fd-850d-e09d92545e93
DTSTAMP:20250517T085705Z
SUMMARY:Build your own NES Emulator... with Kotlin
DESCRIPTION:Let Fools Dream\n\nFor those who have ever wanted to recreate c
 lassic games\, this presentation covers my five-year journey to build a NE
 S emulator in Kotlin. Starting from scratch in 2020 (you can probably gues
 s why)\, I’ll share the challenges posed by the architecture of old hardwa
 re\, performance optimization (surprise\, surprise)\, and the difficulties 
 of emulating sound. I’ll also highlight which Kotlin features shine (and w
 hy concurrency isn’t one of them). This high-level overview will walk thro
 ugh each step of the process—from reading ROM formats to where GPT can hel
 p\, though it won’t write the code for us just yet. We’ll wrap up by launc
 hing Mario on the emulator (hopefully without a call from Nintendo).
LOCATION:Hall D2
DTSTART:20250522T151500Z
DTEND:20250522T160000Z
END:VEVENT
BEGIN:VEVENT
UID:0bed94de-a511-4f9d-af93-7f6e14a053f0
DTSTAMP:20250517T085705Z
SUMMARY:Making native SDKs Multiplatform at RevenueCat
DESCRIPTION:In the rapidly evolving Kotlin Multiplatform ecosystem a critic
 al gap has been the lack of a unified in-app purchase and subscription sol
 ution. Until now\, that is. The RevenueCat SDK for Kotlin Multiplatform al
 lows you to write your subscription code once and run it on both Android a
 nd iOS. But how did we build it? We have existing native SDKs for both And
 roid and iOS\, and did not want to rewrite all core logic. This talk will 
 cover the strategies\, pitfalls and learnings of our approach to bringing 
 native SDKs to Kotlin Multiplatform.\n\n
LOCATION:Auditorium 15
DTSTART:20250522T151500Z
DTEND:20250522T160000Z
END:VEVENT
BEGIN:VEVENT
UID:ef5f47b6-f07d-43fb-8f34-2789322a375b
DTSTAMP:20250517T085705Z
SUMMARY:Writing Your Third Kotlin Compiler Plugin
DESCRIPTION:Compiler plugins have become an integral part of a developer’s 
 experience with the Kotlin programming language. Areas like UI development 
 (Jetpack Compose)\, backend development (Spring Boot / Kotlin Serializatio
 n)\, and even testing (Power-Assert) all leverage compiler plugins. But wh
 at is a Kotlin compiler plugin and what can it do? Let’s learn by writing 
 one!\n\nIn this talk\, we’ll discuss use cases for compiler plugins and le
 arn how they integrate with the Kotlin compiler. Then we’ll explore everyt
 hing related to how code is represented within the Kotlin compiler\, inclu
 ding how to inspect\, navigate\, transform\, and create these representati
 ons. When we’re done\, we’ll have written a compiler plugin from scratch w
 hich can navigate the project code\, inspect annotations\, generate boiler
 plate\, and even report errors!
LOCATION:Auditorium 11+12
DTSTART:20250522T151500Z
DTEND:20250522T160000Z
END:VEVENT
BEGIN:VEVENT
UID:8baef5f6-5355-4c95-8f17-f1f281c557e3
DTSTAMP:20250517T085705Z
SUMMARY:Party
LOCATION:Keynote room
DTSTART:20250522T160000Z
DTEND:20250522T200000Z
END:VEVENT
BEGIN:VEVENT
UID:1ecfb14b-7e0c-42f9-b766-020f6e8da623
DTSTAMP:20250517T085705Z
SUMMARY:Registration
LOCATION:Keynote room
DTSTART:20250523T060000Z
DTEND:20250523T070000Z
END:VEVENT
BEGIN:VEVENT
UID:610f94ee-f95b-4555-a990-409a4d44c013
DTSTAMP:20250517T085705Z
SUMMARY:Qualities of a Well-Functioning System
DESCRIPTION:“We can't impose our will on a system. We can listen to what th
 e system tells us\, and discover how its properties and our values can wor
 k together to bring forth something much better than could ever be produce
 d by our will alone.” -- Donella Meadows\n\nRelational complexity in softw
 are is constantly increasing. Data pipelines become a mesh. A monoliths be
 comes microservices. Synchronous database transactions become event-driven 
 architectures. Infrastructure becomes DevOps. Software is becoming systems 
 of software.\n\nAs technology professionals\, we are trapped between the d
 esire for control and the reality of systems. Increasingly\, we act amidst 
 ambiguity and uncertainty. We diversify and expand our skillset.  Systems 
 challenge our thinking patterns and core mental models. \n\nFortunately\, 
 there are some core principles for designing healthy systems. I don't mean 
 (strictly) scalability or microservices. Three qualities are inherent in w
 ell-functioning systems: resilience\, self-organization and hierarchy. \n\
 nEach of the qualities\, guaranteed\, differ from your current definition. 
 In this keynote\, we will explore them from a systems point of view.
LOCATION:Keynote room
DTSTART:20250523T070000Z
DTEND:20250523T080000Z
END:VEVENT
BEGIN:VEVENT
UID:50cd072c-032c-402b-8a44-1d7826af3120
DTSTAMP:20250517T085705Z
SUMMARY:Break
LOCATION:Hall D2
DTSTART:20250523T080000Z
DTEND:20250523T081500Z
END:VEVENT
BEGIN:VEVENT
UID:b4ce70a2-b5a2-4cb3-be28-c18520b7acda
DTSTAMP:20250517T085705Z
SUMMARY:Dissecting Kotlin: Surveying the Latest Stable and Experimental
DESCRIPTION:As Kotlin evolves\, not only do the features available to us as 
 developers evolve\, but so does our understanding of what idiomatic Kotlin 
 is\, how we can best leverage new and old features and the semantic and pe
 rformance impacts of our implementation choices.\n\nIn this session\, we w
 ill examine some of the features released over the last couple of years in 
 Kotlin\, dive into their implementations\, explore where we may need them 
 and how we might use them\, and discuss how these features fit into the br
 oader ideas and themes of Kotlin as a language.
LOCATION:Keynote room
DTSTART:20250523T081500Z
DTEND:20250523T090000Z
END:VEVENT
BEGIN:VEVENT
UID:cd9a83fd-5744-4204-b43b-b7eb924bed3d
DTSTAMP:20250517T085705Z
SUMMARY:Dependencies and Kotlin/Native
DESCRIPTION:In the JVM world\, the virtual machine and its class loaders do 
 the heavy lifting of linking and loading our applications with dependencie
 s. When we use Kotlin Multiplatform to produce a native binary\, we lose t
 he simplicity of JAR archives and .class files.\n\nIn this session\, we'll 
 explore the differences between how JVM and native platforms handle depend
 encies. We'll look at some of the common blockers that native platforms th
 row our way and possible workarounds. We'll also compare dependency manage
 ment tools used on Apple platforms like CocoaPods and Swift Package Manage
 r to see their strengths and weaknesses.\n\nLearn how native dependencies 
 interact\, how they are loaded and the unexpected complexities of the nati
 ve world.
LOCATION:Hall D2
DTSTART:20250523T081500Z
DTEND:20250523T090000Z
END:VEVENT
BEGIN:VEVENT
UID:91200b67-62ad-49d1-a5cb-53a5f42c5c54
DTSTAMP:20250517T085705Z
SUMMARY:Collect Like a Pro: a deep dive on the Android lifecycle-aware coro
 utines APIs
DESCRIPTION:Collecting in a lifecycle-aware manner is essential for saving 
 system resources. Since coroutines and flows are the recommended solution 
 for asynchronous programming on Android\, there are APIs that do most of t
 he heavy-lifting work for you. Namely: repeatOnLifecycle\, flowWithLifecyc
 le\, and Compose’s collectAsStateWithLifecycle. When building for Android\
 , you should include these libraries in your toolbox. But even if you’re d
 oing KMP\, you should keep this in mind.\n\nIn this talk\, we’ll see the d
 ifferent lifecycle-aware coroutines APIs\, the problems they solve\, and w
 hich types of flows can make your system waste resources—Disclaimer! A col
 d flow backed by a Channel or Flow operators with buffers might be under i
 nvestigation. Prepare to roll up your sleeves as we dissect their implemen
 tation details and learn low-level coroutines and Compose APIs. But the jo
 urney doesn't end there! To help you think as a library developer\, we’ll 
 explore an API regret that never made it into stable to protect developers 
 from misusing the API and force them respect coroutines’ structure concurr
 ency.\n\nBy the end of the talk\, you'll understand the importance of coll
 ecting in a lifecycle-aware manner\, use low-level coroutines APIs to buil
 d your own APIs\, and design APIs that respect structure concurrency and p
 rotect your users from misuse.
LOCATION:Auditorium 15
DTSTART:20250523T081500Z
DTEND:20250523T090000Z
END:VEVENT
BEGIN:VEVENT
UID:53d2af43-6d28-4b85-b9e2-6c34674a9a06
DTSTAMP:20250517T085705Z
SUMMARY:Taming Asynchronous Beasts: Debugging and Performance Tuning in a C
 oroutine World
DESCRIPTION:Asynchronous code can be challenging to debug and optimize\, es
 pecially when dealing with complex coroutine hierarchies and flow transfor
 mations. This session reveals practical techniques for tracking down elusi
 ve bugs\, optimizing performance\, and maintaining reliability in coroutin
 e-heavy applications.\n\nDrawing from real production experience\, we'll e
 xplore advanced debugging techniques\, common performance pitfalls\, and p
 ractical solutions for the most challenging scenarios. You'll learn how to 
 effectively use built-in tools\, recognize problematic patterns\, and impl
 ement proven optimization strategies.
LOCATION:Auditorium 11+12
DTSTART:20250523T081500Z
DTEND:20250523T090000Z
END:VEVENT
BEGIN:VEVENT
UID:f931b62d-ba91-41c0-8096-71f77a249f49
DTSTAMP:20250517T085705Z
SUMMARY:Leveraging KMP for navigation in the McDonalds App.
DESCRIPTION:KMP is well known as THE domain layer framework for Android and 
 iOS. But why not take it further! In our pursuit to create the slimmest po
 ssible android and iOS apps\, where KMP handles everything except the UI. 
 Our next step is taking control of the navigation system. But Handling and
 roid and iOS navigation from a cross platform environment is not easy. In 
 this talk we tell you how it is done\, what challenges we overcame and whe
 re we are now.!
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250523T081500Z
DTEND:20250523T083000Z
END:VEVENT
BEGIN:VEVENT
UID:2a4c53c0-0992-4979-98c7-76af31be5b34
DTSTAMP:20250517T085705Z
SUMMARY:Kotlin Multiplatform's Cross-Platform Brilliance at Norway's 377-Ye
 ar-Old National Postal Service
DESCRIPTION:Do you have a complex business rule-set problem? You know the k
 ind where you have business rules (logic) spread across multiple platforms
 \, systems and applications? Some of them might even be alter egos of the 
 same rule hiding in different apps. You never know which one might turn up 
 where\, there is no single source of truth\, solving errors takes hours of 
 debugging\, and making changes requires (oftentimes) painful coordination 
 across teams and applications (ugh).\n\nWe faced this exact challenge at P
 osten Bring As - Norwegian National Postal Service founded way back in 164
 7 - a 377-year-old institution with software spanning more generations tha
 n most families! Our business logic was scattered across multiple platform
 s\, some almost as old as the company itself (well\, not quite\, but it su
 re felt like it).\n\nIn my session I’m spilling the tea. We discover how t
 he team at century-old Norwegian postal services giant tackled modern chal
 lenges with cutting-edge technology.\n\nWe’ll look through real-world use 
 cases at Posten Bring. We’ll reflect on what we did - key learnings\, what 
 went well and most importantly - what didn’t quite go as planned. We’ll al
 so look through some resources to get started. We'll learn how KMP provide
 s a unified framework for code sharing and execution across various platfo
 rms to solve the challenge of different codebases targeting different runt
 imes.\n\nThis talk is for you if troublesome and unruly business logic kee
 ps you up at night and you want that to end NOW. It is also for you if you 
 like to hear a good story.
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250523T084500Z
DTEND:20250523T090000Z
END:VEVENT
BEGIN:VEVENT
UID:3e7cd624-f3b0-4a25-b2ac-d1b6e5be2528
DTSTAMP:20250517T085705Z
SUMMARY:Break
LOCATION:Hall D2
DTSTART:20250523T090000Z
DTEND:20250523T091500Z
END:VEVENT
BEGIN:VEVENT
UID:ec854dfc-8c6a-48f8-b282-9e849f8370e6
DTSTAMP:20250517T085705Z
SUMMARY:Designing Kotlin Beyond Type-Inference
DESCRIPTION:Kotlin programmers regularly elide uninformative types from the
 ir programs. This makes Kotlin programs faster to develop\, easier to read
 \, and less effort to maintain. It also means the Kotlin language needs to 
 be designed so that its compilers can reliably accept programs without the
 se typing hints. We think of this as type-inference\, but—by definition—ty
 pe-inference means determining these missing types can be filled in such t
 hat the program type-checks.\n\nBut what if we can determine a program is 
 safe without determining these missing types? What if we can do so even wh
 en it such types do not exist? And what if we can do so more efficiently t
 han any type-inference algorithm can?\nIn researching Kotlin's next-genera
 tion typing algorithms\, we have discovered we can efficiently exceed the 
 capabilities of type-inference and type-checking. We have developed a type
 -"outference" algorithm that efficiently decides "type-consistency"\, whic
 h all type-inferable/checkable programs satisfy (but not vice versa).\n\nW
 hile type-inference still has its place in user feedback and compilation\, 
 type-consistency is a much more flexible property\, and type-outference of
 fers clear guidelines on how to design features for efficient validation. 
 In this talk\, after introducing these concepts\, we will provide a behind
 -the-scenes look into how they guide the design of various expected and hy
 pothetical features for Kotlin\, such as union types for errors\, conditio
 nal inheritance for type-safe equality with value types\, and implicit pol
 ymorphism for non-escaping references.
LOCATION:Keynote room
DTSTART:20250523T091500Z
DTEND:20250523T100000Z
END:VEVENT
BEGIN:VEVENT
UID:9f2dacc7-710d-4944-b770-69e127c5beb7
DTSTAMP:20250517T085705Z
SUMMARY:Build Websites in Kotlin & Compose HTML with Kobweb
DESCRIPTION:Want to build a website using Kotlin? Kobweb is a modern web fr
 amework that makes web development enjoyable by leveraging Compose HTML an
 d drawing inspiration from Jetpack Compose.\nWith Kobweb\, you can create 
 a portfolio site\, product landing page\, personal blog\, and more—all whi
 le benefiting from Kotlin’s concise\, expressive\, and type-safe syntax.\n
 In this live coding session\, we’ll introduce the fundamentals of Kobweb a
 nd Compose HTML\, walking you through the process of building a functional 
 website using Kotlin/JS. By the end\, you’ll see just how easy it is to de
 velop and export a traditional website—embracing HTML\, CSS\, and the DOM 
 through a Kotlin-first\, Compose-powered approach.\nThis talk is designed 
 for beginners\, and no prior web development experience is required.\nIf y
 ou’re curious about web development and want to explore a Kotlin-powered\, 
 type-safe\, Compose API for building modern websites\, this session is the 
 perfect place to start!
LOCATION:Hall D2
DTSTART:20250523T091500Z
DTEND:20250523T100000Z
END:VEVENT
BEGIN:VEVENT
UID:9f951e68-4c1d-41f1-bc38-71a5db6953c6
DTSTAMP:20250517T085705Z
SUMMARY:Duolingo + KMP: A Case Study in Developer Productivity
DESCRIPTION:Duolingo ships weekly on iOS and Android to 40M+ Daily Active U
 sers across 176 countries. Shipping fast is important to us and Kotlin Mul
 tiplatform is starting to play a huge role in how we accomplish this!\n\nI
 n this talk\, we’ll:\n- Discuss how we shipped Video Call\, Math\, Adventu
 res and more across Android\, iOS\, and Web\n- Propose what potential upco
 ming projects could benefit from KMP and the rubric we use\n- Share the ch
 allenges faced and lessons learned along the way\n\n…and more!
LOCATION:Auditorium 15
DTSTART:20250523T091500Z
DTEND:20250523T100000Z
END:VEVENT
BEGIN:VEVENT
UID:663c2086-67f0-40bb-b31e-b8ba1cd52168
DTSTAMP:20250517T085705Z
SUMMARY:Exposed 1.0: Stable\, Scalable\, and Looking Forward
DESCRIPTION:Exposed is a database access library that provides a type-safe 
 SQL DSL\, a powerful ORM\, and reliable database interactions as a seamles
 s extension of any Kotlin developer’s code.\n\nThe team behind the library 
 has been working towards its first stable version and recently published a 
 beta release. This talk aims to provide a detailed insight into what stabi
 lity will mean for the library\, as well as to highlight the enhanced feat
 ures that have been implemented over time.\n\nWe’ll also cover the introdu
 ction of support for non-blocking database operations using R2DBC with Kot
 lin coroutines\, as well as the challenges encountered during its developm
 ent.\n\nLastly\, to share a look into the future of Exposed\, we’ll touch 
 on planned features for later stable versions\, like integrated support fo
 r database migrations\, which address the library’s position as a database 
 access solution in Kotlin Multiplatform development.
LOCATION:Auditorium 11+12
DTSTART:20250523T091500Z
DTEND:20250523T100000Z
END:VEVENT
BEGIN:VEVENT
UID:8fbb9a72-f6b0-48bd-89bc-8dc3edaaa97b
DTSTAMP:20250517T085705Z
SUMMARY:Get Started With Kotlin Multiplatform for Shared Business Logic 
DESCRIPTION:Kotlin Multiplatform (KMP) allows you to write code once and sh
 are it across multiple target platforms\, such as Android\, iOS\, web\, an
 d JVM. By leveraging KMP\, you can minimize code duplication\, maintain co
 nsistency\, and significantly reduce development time and effort. In this 
 Codelab\, we will walk developers through taking a standalone Android app 
 and a standalone iOS app\, extracting some business logic to a KMP Shared 
 Module\, and leveraging this shared business logic from both Android and i
 OS.
LOCATION:Room #173
DTSTART:20250523T091500Z
DTEND:20250523T100000Z
END:VEVENT
BEGIN:VEVENT
UID:a537409d-5995-43b3-b5ce-514af4d0aa41
DTSTAMP:20250517T085705Z
SUMMARY:Getting your Gradle setup right\, at the right time
DESCRIPTION:Let’s address the elephant in the room - setting up a Gradle pr
 oject in a proper scalable way is hard. What’s even more challenging is do
 ing this once the project is already scaled and running. What’s nearly imp
 ossible is learning what “a good scalable setup” actually means on your ow
 n.\n\nSo what does a good scalable setup mean? Are the best practices univ
 ersal for all types of project? Are there Kotlin specific best practices? 
 When and how should you introduce them? Let’s dive in!
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250523T091500Z
DTEND:20250523T093000Z
END:VEVENT
BEGIN:VEVENT
UID:4fba8e1d-3485-441e-b108-7b84fe2534ba
DTSTAMP:20250517T085705Z
SUMMARY:Build your Kotlin and Android apps with Buck2
DESCRIPTION:We're happy to announce that Buck2\, a large-scale open source 
 build system from Meta\, now supports Kotlin and Android. Buck2  builds al
 l Android applications at Meta with a focus on fast incremental iterations 
 with code. \nWe will start building an app from basics and then learn some 
 advance buck2 capabilities\, like Remote Execution\, Source-only ABI\, and 
 Build Tools API integrations  
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250523T094500Z
DTEND:20250523T100000Z
END:VEVENT
BEGIN:VEVENT
UID:92837b48-bf4f-41fb-8a4e-c17a3e1ade60
DTSTAMP:20250517T085705Z
SUMMARY:Lunch
LOCATION:Keynote room
DTSTART:20250523T100000Z
DTEND:20250523T110000Z
END:VEVENT
BEGIN:VEVENT
UID:4107c6a2-4007-4fb4-bc32-f11ffef1cdad
DTSTAMP:20250517T085705Z
SUMMARY:The Easing Symphony: AnimationSpec in detail!
DESCRIPTION:Let's take a deeper look at AnimationSpec and learn how to use 
 it to customize animations! With music!\n\nUsing Compose Multiplatform\, w
 e'll go over the different AnimationSpec types we have\, and which persona
 lization options they offer. We'll cover topics from how to use AnimationS
 pec\, to how to create your own easing curves. And since animations are me
 ant to be fun\, we'll do all of this while creating a music visualizer!\n\
 nAfter this talk\, you'll have a better understanding on how powerful anim
 ationSpec is\, and how you can use it to create complex and fun animations
 .\n\nKeep it fun\, keep it animated! :)\n
LOCATION:Keynote room
DTSTART:20250523T110000Z
DTEND:20250523T114500Z
END:VEVENT
BEGIN:VEVENT
UID:85c45593-dca3-42ff-bb31-c28fd4b61af9
DTSTAMP:20250517T085705Z
SUMMARY:Project Sparkles: How Compose for Desktop is changing Android Studi
 o and IntelliJ
DESCRIPTION:Many of us use Android Studio and IntelliJ every day\, and appr
 eciate how its rich feature set makes our job easier. Most people know tha
 t both products are built on the IntelliJ Platform\, the same that underpi
 ns the popular IDEs from JetBrains\, which has seen lasting success for ov
 er 20 years. It’s a solid\, expansive\, and by far the best foundation on 
 which we could stand on to deliver developer goodies.\n\nHowever\, some pa
 rts of the IntelliJ Platform show the signs of time\; in particular its UI 
 framework\, Swing\, is proving the most limiting\, having been around for 
 almost 30 years. Don’t get us wrong — it works\, and the IDEs themselves p
 rove you can ship complex UIs by using Swing on the IntelliJ Platform. But 
 as we looked at how nice it is to develop UIs on desktop by using Compose 
 for Desktop\, we thought: why don’t we do the same?\n\nEnter Project Spark
 les\, which aims at gradually introducing new high-quality\, polished UI s
 urfaces in Android Studio and IntelliJ\, developed in Compose for Desktop\
 , with all the bells and whistles you can expect from a top-tier interface
 . In this talk\, we’ll cover how Project Sparkles is impacting the develop
 ment of Android Studio and IntelliJ\, addressing long-standing user feedba
 ck\, and how Google and JetBrains are working together to build a framewor
 k to make your favorite IDE even better and easier to understand.\n\nWe’ll 
 demonstrate a few examples of features already shipping that are powered b
 y Project Sparkles\, explain what our goals and ambitions are\, and even s
 how some sneak peeks of things you may see in a future IDE version. We wil
 l also cover a roadmap on when developers can expect to use Compose for De
 sktop as a supported UI framework for IntelliJ plugin development!\n\nUI e
 nthusiasts\, assemble!
LOCATION:Hall D2
DTSTART:20250523T110000Z
DTEND:20250523T114500Z
END:VEVENT
BEGIN:VEVENT
UID:1527ce56-7883-4e5a-86be-eed2f9b51cff
DTSTAMP:20250517T085705Z
SUMMARY:Don't forget your values!
DESCRIPTION:No one likes to be forgotten\, and the results of most non-unit 
 function calls are no exception here. 'Check return value' or 'ignored cal
 l result' may sound familiar — those are popular Java linters' rules. Howe
 ver\, in our view\, this inspection is so crucial that it deserves its pla
 ce among compiler diagnostics. In this talk\, we'll explore the challenges 
 and complexities down the road of making a brand-new language feature. And
 \, of course\, how you can use it for your benefit.
LOCATION:Auditorium 15
DTSTART:20250523T110000Z
DTEND:20250523T114500Z
END:VEVENT
BEGIN:VEVENT
UID:64e337b1-477f-4fb7-94a0-98b77a847f2b
DTSTAMP:20250517T085705Z
SUMMARY:Event-Driven Analytics: Building Real-Time Dashboards with Apache F
 link and Ktor
DESCRIPTION:The ability to process continuous data streams and deliver real
 -time insights has become crucial in modern application architectures. As 
 a developer you are probably very comfortable with RESTful services\, and 
 shifting to event-driven thinking opens new possibilities for responsivene
 ss and scalability (as well as new challenges and growing paints).\n\nThis 
 talk will explore building real-time analytics dashboards by combining Apa
 che Flink's powerful stream processing capabilities with Ktor's flexible w
 eb framework. We'll journey through the mental model transformation from r
 equest/response patterns to continuous event flows\, demonstrating how thi
 s shift enables truly reactive applications.\n\nYou'll learn:\n* How Apach
 e Flink handles stateful stream processing\, offering advantages for compl
 ex analytics use cases\n* Leveraging Flink's Table API and SQL capabilitie
 s to express complex transformations with familiar syntax\n* Implementing 
 real-time dashboards with Ktor and other Kotlin libraries\n\nBy the end of 
 this session\, you'll understand how to bridge the gap between powerful ba
 ckend stream processing and engaging user interfaces\, all while staying i
 n the Kotlin ecosystem. Regardless\, if you're a seasoned data streaming e
 ngineer or just beginning to explore beyond REST\, you'll bring home pract
 ical techniques for delivering real-time insights to your users.\n
LOCATION:Auditorium 11+12
DTSTART:20250523T110000Z
DTEND:20250523T114500Z
END:VEVENT
BEGIN:VEVENT
UID:9708ac5d-4ad8-41e1-a105-ae93570a8055
DTSTAMP:20250517T085705Z
SUMMARY:JSpecify: Java Nullness Annotations and Kotlin
DESCRIPTION:Q: Why should I care about Java nullness annotations?\n\nA: Bec
 ause they’ll make Kotlin code that uses Java libraries safer\, and because 
 they’ll make it easier to convert Java code to Kotlin.\n\nJSpecify release
 d a set of nullness annotations for Java in July. Unlike all the other nul
 lness annotations for Java\, JSpecify’s are defined by tool-agnostic speci
 fication. That means that all the Java nullness analyzers will agree on wh
 at they mean\, and the Kotlin compiler will too. And that means that your 
 Kotlin code will be able to use null-safe types instead of platform types 
 when it depends on well-annotated Java libraries.\n\nIn this talk\, we’ll 
 explain how Java nullness annotations will help you\, and how JSpecify’s w
 ork. We’ll also tease upcoming projects that aren’t about nullness but mig
 ht help your Kotlin code too.\n\n
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250523T113000Z
DTEND:20250523T114500Z
END:VEVENT
BEGIN:VEVENT
UID:1967d59c-096b-4a7d-8a15-8df9fa662085
DTSTAMP:20250517T085705Z
SUMMARY:Break
LOCATION:Hall D2
DTSTART:20250523T114500Z
DTEND:20250523T120000Z
END:VEVENT
BEGIN:VEVENT
UID:56db1bc2-05b7-4579-bd15-347552898911
DTSTAMP:20250517T085705Z
SUMMARY:Large Scale Changes with AI - Migrating millions of lines of Java t
 o Kotlin at Uber
DESCRIPTION:Uber has one of the largest Android codebases in the world\, an
 d while Kotlin is first class\, millions of lines of Java remain to be con
 verted. Come along for the ride as we walk you through the tooling and pro
 cesses we've built and integrated while working with the community to safe
 ly mass migrate our production Java code to Kotlin code\, which we're now 
 utilizing to scale out more migrations to other technologies. \n\nWe'll co
 ver the motivations for tackling a migration of this magnitude\, the chall
 enges for LSCs (Large Scale Changes) in huge monorepos and organizations\, 
 generating migration data sets to power cutting-edge AI tools\, using agen
 tic systems and pipelines to deterministically tackle the migrations at sc
 ale\, the risks and mitigations for migrating this much production code\, 
 how to manage thousands of PRs\, and where we'll be taking this technology 
 next.
LOCATION:Keynote room
DTSTART:20250523T120000Z
DTEND:20250523T124500Z
END:VEVENT
BEGIN:VEVENT
UID:1e3305bb-2386-4650-9141-7e0a234b4533
DTSTAMP:20250517T085705Z
SUMMARY:Data Analysis for finance in Kotlin
DESCRIPTION:Data representation and analysis in finance has a large literat
 ure already present in R and Python\, two of the most common suspects. The
 y have the community\, tooling and a long tradition. But what about Kotlin 
 with some of the libraries in the family\, like DataFrame and Kandy? Kotli
 n\, traditionally known for its focus in mobile and backend development\, 
 has emerged as a strong contender in the data science space. This session 
 explores the potential of Kotlin for financial data analysis\, focusing on 
 the use of the DataFrame library and the Kandy visualization framework.\n\
 nWe will demonstrate how Kotlin provides a rich\, statically typed languag
 e environment\, ensuring safety\, conciseness\, and performance in handlin
 g large datasets commonly encountered in financial contexts. DataFrame pro
 vides the capacity to manipulate structured data\, while Kandy enables hig
 h-quality visualizations.\n\nThis presentation will also provide a compara
 tive analysis between Kotlin\, R\, and Python. We will examine common use 
 cases such as dividend history\, stock valuation based on price and yields
 . While R and Python have established ecosystems for data science\, Kotlin
 's performance\, tooling\, and modern features offer new possibilities for 
 finance professionals looking for a more efficient alternative.\n\n\n
LOCATION:Hall D2
DTSTART:20250523T120000Z
DTEND:20250523T124500Z
END:VEVENT
BEGIN:VEVENT
UID:149d34ee-9b9a-4234-9473-a6a72df45321
DTSTAMP:20250517T085705Z
SUMMARY:Simplifying Full-Stack Kotlin: A Fresh Take with HTMX and Ktor
DESCRIPTION:Being a full-stack developer is valuable in today's tech landsc
 ape - you can own features end-to-end\, make holistic architectural decisi
 ons\, and adapt quickly to changing project needs. This versatility is esp
 ecially crucial in smaller teams and startups.\n\nHowever\, the role can b
 e intimidating. The list of technologies one is expected to master is exte
 nsive: Kubernetes\, Postgres\, Kotlin\, Gradle\, Ktor\, React\, Remix\, No
 de.js\, and NPM. Even the most experienced developers struggle to keep up 
 with it all.\n\nPerhaps we should step back and examine this problem from 
 a fresh perspective. Do we truly need all these technologies? After all\, 
 HTML and CSS remain relatively stable\, unlike frameworks that seem to cha
 nge every six months.\n\nMany applications don't require the complexity of 
 a modern Javascript Single Page Application (SPA). Everything eventually r
 enders to HTML anyway! Using technologies like HTML\, CSS\, HTMX\, AlpineJ
 S\, and Unpoly\, you can achieve 98% of SPA functionality with minimal fro
 ntend code and less complexity. These tools enhance and build upon HTML an
 d CSS rather than trying to replace them.\n\nIn this presentation\, I'll s
 how how HTMX and kotlinx.html combine beautifully with Ktor to create mode
 rn\, interactive web applications. You'll see how these technologies work 
 together seamlessly - Ktor's powerful backend capabilities\, kotlinx.html'
 s type-safe HTML generation\, and HTMX's elegant approach to frontend inte
 ractions. This stack offers a refreshingly simple way to build dynamic web 
 applications while keeping your codebase clean and maintainable.
LOCATION:Auditorium 15
DTSTART:20250523T120000Z
DTEND:20250523T124500Z
END:VEVENT
BEGIN:VEVENT
UID:4a303563-6e52-499a-aad3-08873727eb28
DTSTAMP:20250517T085705Z
SUMMARY:Swift Export - a peek under the hood
DESCRIPTION:One of the most anticipated features in Kotlin Multiplatform—Sw
 ift Export! It’s been a year since we announced its development. Join us a
 s we explore the challenges the team has faced\, why it’s taking so long\, 
 and\, most importantly\, how you can preview Swift Export in your own proj
 ects.
LOCATION:Auditorium 11+12
DTSTART:20250523T120000Z
DTEND:20250523T124500Z
END:VEVENT
BEGIN:VEVENT
UID:e5aa41e6-30d7-434b-9028-9e84d7d52235
DTSTAMP:20250517T085705Z
SUMMARY:Building immersive VR apps for Meta Quest with Jetpack Compose
DESCRIPTION:Virtual Reality (VR) is rapidly becoming the future of interact
 ions and immersive experiences\, transforming how we engage with apps and 
 content. As VR technology continues to evolve and become mainstream\, devi
 ces like the Meta Quest offer powerful opportunities for creating highly i
 mmersive and interactive experiences. \n\nIn this talk\, we will explore h
 ow to leverage Jetpack Compose to build VR applications for the Meta Quest
 .\n\nWe will dive into the unique challenges of VR development\, such as s
 patial UI design\, handling new input methods for seamless experiences. A 
 key focus of this session will be on converting existing Android apps into 
 immersive VR apps\, demonstrating how to adapt traditional 2D UIs into spa
 tially aware interfaces suitable for VR environments. \n\nAs a bonus\, we 
 will take a brief tour of how to integrate 3D objects and scenes seamlessl
 y in the VR experiences. You will learn how to combine both UI elements an
 d 3D content further enhancing immersion and interaction.\n\nBy the end of 
 the session\, you will be equipped with practical knowledge you can use to 
 create or adapt your existing apps into VR for the Meta Quest with Jetpack 
 Compose along with practical tips and best practices for immersive experie
 nces.
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250523T120000Z
DTEND:20250523T121500Z
END:VEVENT
BEGIN:VEVENT
UID:79859427-843c-4ace-9334-6c147e62741e
DTSTAMP:20250517T085705Z
SUMMARY:Migrating Room to Room KMP
DESCRIPTION:This Codelab builds off the “Get Started With Kotlin Multiplatf
 orm for Shared Business Logic” Codelab\, and allows the developer to migra
 te a Room database to a Room KMP database within the KMP Shared Module\, a
 nd then leverage this Room KMP database from the Android and iOS app.
LOCATION:Room #173
DTSTART:20250523T120000Z
DTEND:20250523T124500Z
END:VEVENT
BEGIN:VEVENT
UID:acbedf4d-cf29-49da-9ac1-bea3c347f6ce
DTSTAMP:20250517T085705Z
SUMMARY:Bringing Maps to Compose Multiplatform with MapLibre Compose
DESCRIPTION:Working with maps in a Kotlin Multiplatform app can be tricky—d
 ifferent platform APIs\, inconsistent features\, and duplicated code add u
 nwelcome complexity. MapLibre Compose simplifies this process by providing 
 a consistent\, declarative API built on top of MapLibre and Compose Multip
 latform.\n\nWe’ll use practical examples to explore the design and impleme
 ntation of MapLibre Compose\, how it leverages the Compose runtime to decl
 aratively express the powerful mapping capabilities of MapLibre\, and how 
 it uses Kotlin Multiplatform to help developers write map-based UI code on
 ce and run it seamlessly on Android\, iOS\, and beyond without code duplic
 ation.\n\nFor developers working with Compose Multiplatform\, this talk wi
 ll showcase how MapLibre Compose can help add mapping features to your app
 s. You'll gain a clear understanding of its capabilities\, its design prin
 ciples\, and how it can help you create richer user experiences across pla
 tforms.
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250523T123000Z
DTEND:20250523T124500Z
END:VEVENT
BEGIN:VEVENT
UID:ca083be1-2c2e-4759-940c-c8b0599640a4
DTSTAMP:20250517T085705Z
SUMMARY:Coffee Break
LOCATION:Keynote room
DTSTART:20250523T124500Z
DTEND:20250523T131500Z
END:VEVENT
BEGIN:VEVENT
UID:3d44336d-1144-4836-b920-d3099e9a4c2c
DTSTAMP:20250517T085705Z
SUMMARY:Kotlin and Compose Multiplatform patterns for iOS interop
DESCRIPTION:Kotlin Multiplatform (KMP) and\, more recently\, Compose Multip
 latform (CMP) have matured significantly in recent years and are gaining i
 ncreasingly widespread adoption. \n\nHowever iOS integration continues to 
 present its own set of challenges which also vary depending on the amount 
 of UI code that's being shared. In this talk I'll use real world examples 
 to outline a variety of different UI and non-UI patterns I've applied over 
 the last 5 years when using KMP and CMP on iOS.  \n
LOCATION:Keynote room
DTSTART:20250523T131500Z
DTEND:20250523T140000Z
END:VEVENT
BEGIN:VEVENT
UID:12bc136d-1686-475c-8b36-6a629b985641
DTSTAMP:20250517T085705Z
SUMMARY:Fast inner dev loops for Kotlin Gradle builds
DESCRIPTION:Whether it's a Kotlin library or an Android app\, developers wa
 nt their inner loop to be fast: code\, compile\, test\, repeat. With Gradl
 e\, there are no extra steps—you run the test\, and it takes care of the r
 est\, whether you’re tweaking a single line of code or upgrading all your 
 dependencies.\n\nIn this talk\, learn how to tame the inner dev loop. We'l
 l explore the recent evolution of Gradle's performance features\, such as 
 Configuration Cache and Isolated Projects\, and how to organize your Kotli
 n build to make the most of it.
LOCATION:Hall D2
DTSTART:20250523T131500Z
DTEND:20250523T140000Z
END:VEVENT
BEGIN:VEVENT
UID:f9d9c754-6cb6-4a3a-b827-cf0446f15909
DTSTAMP:20250517T085705Z
SUMMARY:Lessons learned decoupling Architecture Components from platform sp
 ecific code
DESCRIPTION:Follow along as the Android team walks you through the process 
 of taking some of their architectural building blocks\, such as SavedState 
 and System Back\, through the process of decoupling them from platform spe
 cific implementations and how they approached the task of writing good com
 mon APIs in preparation for future integrations with other platforms while 
 maintaining the quality achieved in android.
LOCATION:Auditorium 15
DTSTART:20250523T131500Z
DTEND:20250523T140000Z
END:VEVENT
BEGIN:VEVENT
UID:9d592e67-cb61-4c4f-9c81-445172ab3401
DTSTAMP:20250517T085705Z
SUMMARY:Kotlin Clean Architecture for Serverless: Business Logic You Can Ta
 ke Anywhere
DESCRIPTION:As cloud platforms continue to evolve\, serverless functions pr
 ovide powerful ways to build and scale applications with reduced infrastru
 cture concerns. However\, cloud-specific requirements often make it challe
 nging to keep business logic portable across different cloud providers. Th
 is session presents a variant of clean architecture designed to separate c
 ore business logic from cloud-specific code\, leveraging Kotlin’s capabili
 ties along with Spring Cloud Function and headless Gradle modules.\n\nIn t
 his talk\, I’ll demonstrate how to structure a Kotlin application for serv
 erless using a simplified clean architecture approach. This structure main
 tains cloud-agnostic business logic while allowing platform-specific imple
 mentations for integration functionality like storage. By isolating busine
 ss logic in headless modules\, developers can deploy the same core code ac
 ross multiple cloud function providers such as AWS Lambda and Azure Functi
 ons.\n\nThrough live coding\, we’ll explore practical techniques for build
 ing and deploying serverless applications with cloud-agnostic business log
 ic. \nThis session is aimed at advanced Kotlin developers interested in se
 rverless architecture\, cloud flexibility\, and clean architecture princip
 les. 
LOCATION:Auditorium 11+12
DTSTART:20250523T131500Z
DTEND:20250523T140000Z
END:VEVENT
BEGIN:VEVENT
UID:70cfa594-55c2-4346-8402-ef84ae144e49
DTSTAMP:20250517T085705Z
SUMMARY:Swift concurrency for curious Kotliners
DESCRIPTION:Swift is an open-source programming language by Apple\, primari
 ly used for building apps within the Apple ecosystem.\n\nA new major versi
 on of Swift - Swift 6 was released at the end of the previous year. The st
 andout feature of the release is strict concurrency mode\, which aims to p
 revent data races.\n\nIn this talk\, we will take a quick look at Swift ac
 tors and `async`/`await` features\, which share a lot of similarities with 
 Kotlin Coroutines. We will explore what does Swift 6 do to prevent data ra
 ces\, and\, perhaps\, discuss if we can expect a similar feature in future 
 versions of Kotlin.\n\nThe talk assumes that the attendees are familiar wi
 th Kotlin Coroutines.
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250523T131500Z
DTEND:20250523T133000Z
END:VEVENT
BEGIN:VEVENT
UID:9634f9c6-0a8c-412e-b139-ddb74e60901c
DTSTAMP:20250517T085705Z
SUMMARY:Klibs.io — the dream of creating a Kotlin Package Index
DESCRIPTION:So you want to build a Kotlin package index.. What is a package 
 anyway\, is it the same as an artifact? What makes a project a library the
 n? And why is it an index and not a repository?\n\nThis talk is a story an
 d a retrospective of developing [https://klibs.io](https://klibs.io)\n\nI 
 will share the insights I learned after processing 250\,000 KMP artifacts 
 and 1\,500 Kotlin projects. We'll discuss our library sharing ecosystem an
 d its limitations\, and I will give tips to library authors on how to stan
 d out and make their libraries more discoverable
LOCATION:Auditorium 10 (Lightning talks)
DTSTART:20250523T134500Z
DTEND:20250523T140000Z
END:VEVENT
BEGIN:VEVENT
UID:c108a207-193f-447c-b352-710376dc2352
DTSTAMP:20250517T085705Z
SUMMARY:Break
LOCATION:Hall D2
DTSTART:20250523T140000Z
DTEND:20250523T141500Z
END:VEVENT
BEGIN:VEVENT
UID:4a4b67d1-6b1e-400e-bbe2-e36be32ae9c1
DTSTAMP:20250517T085705Z
SUMMARY:47 Refactorings in 45 minutes
DESCRIPTION:IntelliJ IDEA's refactoring support is second to none\, but the 
 Refactor This menu only has 9 items. Where is all the power hiding?\n\nJoi
 n Dmitry and Duncan on a whistle-stop live-coding tour of our favourite ID
 E's invisible refactorings. Marvel as Alt-Enter reveals refactorings befor
 e your very eyes. Gasp as they change depending on context. Wonder how com
 pletely different they can be simply by moving the cursor one character to 
 the left or right\, and feel the tension mount as they approach the deadli
 ne. Can they really show more than one refactoring a minute?
LOCATION:Keynote room
DTSTART:20250523T141500Z
DTEND:20250523T150000Z
END:VEVENT
BEGIN:VEVENT
UID:32e15925-e486-49a3-9fb7-170c769d50db
DTSTAMP:20250517T085705Z
SUMMARY:From Data to Insights: Building a Bluesky Bot powered by AI
DESCRIPTION:\nA common challenge developers face when working with data str
 eams is collecting and analyzing this data as fast as possible to uncover 
 meaningful insights or take fast actions.\n\nIn this talk\, I’ll show you 
 how I tackled this by building a Bluesky bot that turns raw data collected 
 from the Bluesky’s stream of posts into actionable insights.\n\nIn this ta
 lk you will learn how to: \n- Collect data into streams\n- Use probabilist
 ic data structures such as Bloom Filters\, TopK and Count-Min Sketch\n- Us
 e Retrieval-Augmented Generation for adding your own knowledge base into y
 our LLM queries\n- Use semantic caching for reducing LLM calls\n- Use vect
 or siilarity search to classify the data\n- Efficiently querythe data\n\nW
 hether you’re curious about GenAI\, interested in data-driven analytics\, 
 or simply love experimenting with creative tech solutions\, this session w
 ill inspire you with practical techniques and real-world applications.
LOCATION:Hall D2
DTSTART:20250523T141500Z
DTEND:20250523T150000Z
END:VEVENT
BEGIN:VEVENT
UID:9adaff09-4652-4196-b72f-7bbb71760a3c
DTSTAMP:20250517T085705Z
SUMMARY:Stream Processing Rocks! Stream processing in Kotlin from KStreams 
 to RocksDB
DESCRIPTION:Ever wondered how to efficiently process high-velocity data str
 eams using Kafka and Kotlin? Join two engineers from SolarWinds—experts wh
 o oversee billions of observability records daily—as they share their insi
 ghts.\n\nWe'll kick off by covering what stream processing is and when you 
 should use it. Dive into practical Kotlin solutions through a simple case 
 study on stripping PII from incoming user records using Kafka Streams. We’
 ll build upon this example by utilizing Kafka's compacting topics feature 
 to distribute the user data and store it locally for rapid API responses. 
 Finally\, we’ll 'scale up' by moving that data out of memory and into Rock
 sDB\, demonstrating how to handle larger datasets effectively. By the end 
 of this talk\, you'll be equipped to build your first KStream or scale up 
 the ones you’re already building.
LOCATION:Auditorium 15
DTSTART:20250523T141500Z
DTEND:20250523T150000Z
END:VEVENT
BEGIN:VEVENT
UID:a956f71b-f81a-4535-a13d-adb4d057c156
DTSTAMP:20250517T085705Z
SUMMARY:Scale your Kotlin Multiplatform projects using dependency injection
DESCRIPTION:Kotlin-inject-anvil is a dependency injection framework for Kot
 lin Multiplatform. It verifies the dependency graph at compile time and ge
 nerates the necessary code to instantiate the object graph at runtime. The 
 framework aims to provide a safe dependency injection solution without the 
 boilerplate and configurations common in many other libraries.\n\nThis tal
 k will introduce kotlin-inject-anvil\, discussing its benefits and how it 
 scales in large\, modularized codebases. We'll explore how to leverage the 
 strengths of each host platform while maximizing common Kotlin Multiplatfo
 rm code. Since each codebase is unique\, I'll demonstrate how we adapt the 
 framework for our own internal use cases at Amazon.
LOCATION:Auditorium 11+12
DTSTART:20250523T141500Z
DTEND:20250523T150000Z
END:VEVENT
BEGIN:VEVENT
UID:73250aee-03ea-4123-83ec-3d325a96aff3
DTSTAMP:20250517T085705Z
SUMMARY:Break
LOCATION:Hall D2
DTSTART:20250523T150000Z
DTEND:20250523T151500Z
END:VEVENT
BEGIN:VEVENT
UID:69f09fbe-d516-457d-bb0d-9b8c522f23af
DTSTAMP:20250517T085705Z
SUMMARY:Closing Panel
LOCATION:Keynote room
DTSTART:20250523T151500Z
DTEND:20250523T160000Z
END:VEVENT
END:VCALENDAR
